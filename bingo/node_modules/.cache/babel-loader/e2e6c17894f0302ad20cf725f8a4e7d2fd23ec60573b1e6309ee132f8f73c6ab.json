{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keusu\\\\Documents\\\\test\\\\bingo\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { StringCodec, connect } from 'nats.ws';\nimport axios from 'axios';\nimport './chatApp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  const [usersData, setUsersData] = useState([]);\n  const [ud, setUd] = useState(null);\n  const [currid, setCurrid] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  const navigate = useNavigate();\n  const [nc, setConnection] = useState(undefined);\n  const [receivedMessages, setReceivedMessages] = useState([]);\n  const [sendMessage, setSendMessage] = useState(\"\");\n  const sc = StringCodec();\n  const userIDs = [currid, selectedUserId].sort(); // Sort the user IDs\n  const commonSubject = `chat.${userIDs[0]}.${userIDs[1]}`;\n  const connectToNats = async () => {\n    try {\n      const natsConnection = await connect({\n        servers: \"http://localhost:9090\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n          \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n          \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\"\n        }\n      });\n      setConnection(natsConnection);\n      console.log(commonSubject);\n      const subscription = natsConnection.subscribe(commonSubject, {\n        callback: (err, msg) => {\n          if (err) {\n            console.error(err);\n          } else {\n            const message = sc.decode(msg.data);\n            console.log(\"Received message:\", message);\n            setReceivedMessages(prevMessages => [...prevMessages, message]);\n            console.log(subscription);\n          }\n        }\n      });\n      console.log(subscription);\n      return () => {\n        if (nc) {\n          // Unsubscribe and handle the promise resolution\n          nc.unsubscribe().then(() => {\n            console.log(\"Unsubscribed successfully\");\n          });\n        }\n      };\n    } catch (err) {\n      setLastError(\"Error connecting\");\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    const sud = localStorage.getItem('userData');\n    const parseud = JSON.parse(sud);\n    setUd(parseud);\n    setCurrid(parseud['user']['_id']);\n    // Fetch users data from the API\n    axios.get('http://localhost:7000/user').then(response => {\n      setUsersData(response.data);\n    }).catch(error => {\n      console.error('Error fetching users:', error);\n    });\n  }, [nc]);\n  const handleUserClick = async userId => {\n    setSelectedUserId(userId);\n    connectToNats(userId);\n  };\n  const handleSendMessage = () => {\n    if (newMessage.trim() === '') {\n      return; // Don't send empty messages\n    }\n    if (nc) {\n      nc.publish(commonSubject, sc.encode(newMessage));\n      console.log(newMessage);\n    } else {\n      console.error(\"Not connected to NATS\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Current user name \", ud ? ud['user']['username'] : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: usersData.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleUserClick(user._id),\n          children: user.username\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), selectedUserId ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [receivedMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Received Message: \", message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type your message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a user to view messages.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatApp, \"r3lHtRUlEELGwMswrC870mRl5X0=\", false, function () {\n  return [useNavigate];\n});\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","StringCodec","connect","axios","jsxDEV","_jsxDEV","ChatApp","_s","usersData","setUsersData","ud","setUd","currid","setCurrid","selectedUserId","setSelectedUserId","newMessage","setNewMessage","navigate","nc","setConnection","undefined","receivedMessages","setReceivedMessages","sendMessage","setSendMessage","sc","userIDs","sort","commonSubject","connectToNats","natsConnection","servers","headers","console","log","subscription","subscribe","callback","err","msg","error","message","decode","data","prevMessages","unsubscribe","then","setLastError","sud","localStorage","getItem","parseud","JSON","parse","get","response","catch","handleUserClick","userId","handleSendMessage","trim","publish","encode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","onClick","_id","username","index","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/keusu/Documents/test/bingo/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { StringCodec, connect } from 'nats.ws';\r\nimport axios from 'axios';\r\nimport './chatApp.css'\r\n\r\nconst ChatApp = () => {\r\n  const [usersData, setUsersData] = useState([]);\r\n  const [ud, setUd] = useState(null);\r\n  const [currid,setCurrid]=useState('')\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const [nc, setConnection] = useState(undefined);\r\n  const [receivedMessages, setReceivedMessages] = useState([]);\r\n  const [sendMessage, setSendMessage] = useState(\"\");\r\n  const sc = StringCodec();\r\n  const userIDs = [currid, selectedUserId].sort(); // Sort the user IDs\r\n  const commonSubject = `chat.${userIDs[0]}.${userIDs[1]}`;\r\n  const connectToNats = async () => {\r\n    try {\r\n      const natsConnection = await connect({\r\n        servers: \"http://localhost:9090\",\r\n        headers: {\r\n          \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\r\n          \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\r\n          \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\",\r\n        },\r\n      });\r\n      setConnection(natsConnection);\r\n      console.log(commonSubject)\r\n\r\n      const subscription =  natsConnection.subscribe(commonSubject, {\r\n        callback: (err, msg) => {\r\n          if (err) {\r\n            console.error(err);\r\n          } else {\r\n            const message = sc.decode(msg.data);\r\n            console.log(\"Received message:\", message);\r\n            setReceivedMessages((prevMessages) => [...prevMessages, message]);\r\n            console.log(subscription)\r\n          }\r\n        },\r\n      });\r\n      \r\n      console.log(subscription);\r\n\r\n      return () => {\r\n        if (nc) {\r\n          // Unsubscribe and handle the promise resolution\r\n          nc.unsubscribe().then(() => {\r\n            console.log(\"Unsubscribed successfully\");\r\n          });\r\n        }\r\n      };\r\n    } catch (err) {\r\n      setLastError(\"Error connecting\");\r\n      console.error(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const sud = localStorage.getItem('userData');\r\n    const parseud = JSON.parse(sud);\r\n    setUd(parseud);\r\n    setCurrid(parseud['user']['_id'])\r\n    // Fetch users data from the API\r\n    axios.get('http://localhost:7000/user')\r\n      .then((response) => {\r\n        setUsersData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching users:', error);\r\n      });\r\n      \r\n      }\r\n\r\n  , [nc]);\r\n\r\n  const handleUserClick =async (userId) => {\r\n    setSelectedUserId(userId);\r\n    connectToNats(userId);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (newMessage.trim() === '') {\r\n      return; // Don't send empty messages\r\n    }\r\n  \r\n    if (nc) {\r\n      nc.publish(commonSubject, sc.encode(newMessage));\r\n      console.log(newMessage);\r\n    } else {\r\n      console.error(\"Not connected to NATS\");\r\n    }\r\n\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"user-list\">\r\n        <h2>User List</h2>\r\n        <h2>Current user name {ud ? ud['user']['username'] : ''}</h2>\r\n        <ul>\r\n          {usersData.map((user) => (\r\n            <li key={user._id} onClick={() => handleUserClick(user._id)}>\r\n              {user.username}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"message-section\">\r\n        <h2>Messages</h2>\r\n        {selectedUserId ? (\r\n          <div>\r\n           {receivedMessages.map((message, index) => (\r\n        <p key={index}>Received Message: {message}</p>\r\n      ))}\r\n            <div className=\"message-input\">\r\n              <input\r\n                type=\"text\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                placeholder=\"Type your message...\"\r\n              />\r\n              <button onClick={handleSendMessage}>Send</button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <p>Select a user to view messages.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}