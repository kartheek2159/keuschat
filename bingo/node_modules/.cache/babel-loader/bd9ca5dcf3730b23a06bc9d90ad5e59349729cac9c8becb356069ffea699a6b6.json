{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keusu\\\\Documents\\\\test\\\\bingo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from 'react';\n// import { connect } from 'nats.ws';\n\n// function App() {\n//   const [nc, setConnection] = useState(undefined);\n//   const [lastError, setLastError] = useState(\"\");\n//   // const addmsg=(err,msg)=>{\n//   //   console.log(msg.subject)\n//   // }\n//   useEffect(() => {\n//     if (nc === undefined) {\n//       const connectToNats = async () => {\n//         try {\n//           const natsConnection = await connect({\n//             servers: \"http://localhost:4222\"\n//           });\n//           setConnection(natsConnection);\n//           // nc.subscribe(\">\",{callback:addmsg})\n\n//         } catch (err) {\n//           setLastError(\"Error connecting\");\n//           console.error(err);\n//         }\n//       };\n\n//       connectToNats();\n//     }\n//   }, [nc]);\n\n//   const state = nc ? \"Connected\" : \"Not Connected\";\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Kartheek</h1>\n//       <h1>{state}</h1>\n//       <h3>{lastError ? lastError : \"\"}</h3>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport { useState, useEffect } from 'react';\nimport { StringCodec, connect } from 'nats.ws';\n\n// ... (other imports)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [nc, setConnection] = useState(undefined);\n  const [lastError, setLastError] = useState(\"\");\n  const [receivedMessages, setReceivedMessages] = useState([]);\n  const [sendMessage, setSendMessage] = useState(\"\");\n  const sc = StringCodec();\n\n  // useEffect(() => {\n  //   if (nc === undefined) {\n  //     const connectToNats = async () => {\n  //       try {\n  //         const natsConnection = await connect({\n  //           servers: \"http://localhost:9090\"\n  //         });\n  //         setConnection(natsConnection);\n  //         console.log(natsConnection)\n\n  //         const subscription = natsConnection.subscribe(\"trail\", (err, msg) => {\n  //           if (err) {\n  //             console.error(err);\n  //           } else {\n  //             const decodedMessage = sc.decode(msg.data);\n  //             console.log(decodedMessage)\n  //             setReceivedMessages((prevMessages) => [...prevMessages, decodedMessage]);\n  //           }\n  //           console.log(msg.data)\n  //         });\n\n  //         return () => subscription.unsubscribe();\n  //       } catch (err) {\n  //         setLastError(\"Error connecting\");\n  //         console.error(err);\n  //       }\n  //     };\n\n  //     connectToNats();\n  //   }\n  // }, [nc,sendMessage]);\n\n  useState(() => {\n    if (nc == undefined) {\n      connect({\n        servers: \"http://localhost:9090\"\n      }).then(nc => {\n        setConnection(nc);\n        nc.subscribe(\"trail\", {\n          callback: addmsg\n        }).catch(err => {\n          setLastError(\"error connecting\");\n          console.error(err);\n        });\n      });\n    }\n  });\n  const state = nc ? \"Connected\" : \"Not Connected\";\n  const handleSend = () => {\n    if (nc) {\n      const subject = \"trail\";\n      nc.publish(subject, sc.encode(sendMessage));\n    } else {\n      console.error(\"Not connected to NATS\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Kartheek\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: lastError ? lastError : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Received Messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: receivedMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: sendMessage,\n      onChange: e => setSendMessage(e.target.value),\n      placeholder: \"Type your message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HbF8h5DMdGx03GQfre6QahVBeP4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","StringCodec","connect","jsxDEV","_jsxDEV","App","_s","nc","setConnection","undefined","lastError","setLastError","receivedMessages","setReceivedMessages","sendMessage","setSendMessage","sc","servers","then","subscribe","callback","addmsg","catch","err","console","error","state","handleSend","subject","publish","encode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/keusu/Documents/test/bingo/src/App.js"],"sourcesContent":["// import { useState, useEffect } from 'react';\n// import { connect } from 'nats.ws';\n\n// function App() {\n//   const [nc, setConnection] = useState(undefined);\n//   const [lastError, setLastError] = useState(\"\");\n//   // const addmsg=(err,msg)=>{\n//   //   console.log(msg.subject)\n//   // }\n//   useEffect(() => {\n//     if (nc === undefined) {\n//       const connectToNats = async () => {\n//         try {\n//           const natsConnection = await connect({\n//             servers: \"http://localhost:4222\"\n//           });\n//           setConnection(natsConnection);\n//           // nc.subscribe(\">\",{callback:addmsg})\n          \n//         } catch (err) {\n//           setLastError(\"Error connecting\");\n//           console.error(err);\n//         }\n//       };\n\n//       connectToNats();\n//     }\n//   }, [nc]);\n\n//   const state = nc ? \"Connected\" : \"Not Connected\";\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Kartheek</h1>\n//       <h1>{state}</h1>\n//       <h3>{lastError ? lastError : \"\"}</h3>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\nimport { useState, useEffect } from 'react';\nimport { StringCodec, connect } from 'nats.ws';\n\n// ... (other imports)\n\nfunction App() {\n  const [nc, setConnection] = useState(undefined);\n  const [lastError, setLastError] = useState(\"\");\n  const [receivedMessages, setReceivedMessages] = useState([]);\n  const [sendMessage, setSendMessage] = useState(\"\");\n  const sc = StringCodec();\n\n  // useEffect(() => {\n  //   if (nc === undefined) {\n  //     const connectToNats = async () => {\n  //       try {\n  //         const natsConnection = await connect({\n  //           servers: \"http://localhost:9090\"\n  //         });\n  //         setConnection(natsConnection);\n  //         console.log(natsConnection)\n\n  //         const subscription = natsConnection.subscribe(\"trail\", (err, msg) => {\n  //           if (err) {\n  //             console.error(err);\n  //           } else {\n  //             const decodedMessage = sc.decode(msg.data);\n  //             console.log(decodedMessage)\n  //             setReceivedMessages((prevMessages) => [...prevMessages, decodedMessage]);\n  //           }\n  //           console.log(msg.data)\n  //         });\n          \n\n  //         return () => subscription.unsubscribe();\n  //       } catch (err) {\n  //         setLastError(\"Error connecting\");\n  //         console.error(err);\n  //       }\n  //     };\n\n  //     connectToNats();\n  //   }\n  // }, [nc,sendMessage]);\n\n  useState(()=>{\n    if(nc==undefined){\n      connect({\n        servers:\"http://localhost:9090\"\n      }).then((nc)=>{\n        setConnection(nc)\n        nc.subscribe(\"trail\",{callback:addmsg}).catch((err)=>{\n          setLastError(\"error connecting\")\n          console.error(err)\n        })\n      })\n    }\n  });\n\n  const state = nc ? \"Connected\" : \"Not Connected\";\n\n  const handleSend = () => {\n    if (nc) {\n      const subject = \"trail\";\n      nc.publish(subject, sc.encode(sendMessage));\n    } else {\n      console.error(\"Not connected to NATS\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Kartheek</h1>\n      <h1>{state}</h1>\n      <h3>{lastError ? lastError : \"\"}</h3>\n      <div>\n        <p>Received Messages:</p>\n        <ul>\n          {receivedMessages.map((message, index) => (\n            <li key={index}>{message}</li>\n          ))}\n        </ul>\n      </div>\n      <input\n        type=\"text\"\n        value={sendMessage}\n        onChange={(e) => setSendMessage(e.target.value)}\n        placeholder=\"Type your message\"\n      />\n      <button onClick={handleSend}>Send Message</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}