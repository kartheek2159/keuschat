{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Keus Automation\\\\Documents\\\\keuschat\\\\bingo\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\n// ChatApp.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  var _messagesData$selecte;\n  const [usersData, setUsersData] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const [messagesData, setMessagesData] = useState({});\n  const [newMessage, setNewMessage] = useState('');\n  const hardcodedUsers = [{\n    id: 1,\n    name: 'John'\n  }, {\n    id: 2,\n    name: 'Alice'\n  }, {\n    id: 3,\n    name: 'Bob'\n  }];\n  const hardcodedMessages = {\n    1: [{\n      id: 1,\n      text: 'Hi, how are you?'\n    }, {\n      id: 2,\n      text: \"I'm good, thanks!\"\n    }],\n    2: [{\n      id: 1,\n      text: 'Hello there!'\n    }, {\n      id: 2,\n      text: \"How's it going?\"\n    }],\n    3: [{\n      id: 1,\n      text: 'Hey!'\n    }, {\n      id: 2,\n      text: \"I'm doing well, thanks.\"\n    }]\n  };\n  useEffect(() => {\n    setUsersData(hardcodedUsers);\n    setMessagesData(hardcodedMessages);\n  }, [hardcodedUsers]);\n  const handleUserClick = userId => {\n    setSelectedUserId(userId);\n  };\n  const handleSendMessage = () => {\n    if (newMessage.trim() === '') {\n      return; // Don't send empty messages\n    }\n    const updatedMessages = {\n      ...messagesData\n    };\n    const newMessageObject = {\n      id: Date.now(),\n      // Using timestamp as a unique ID for simplicity\n      text: newMessage\n    };\n    if (selectedUserId in updatedMessages) {\n      updatedMessages[selectedUserId] = [...updatedMessages[selectedUserId], newMessageObject];\n    } else {\n      updatedMessages[selectedUserId] = [newMessageObject];\n    }\n    setMessagesData(updatedMessages);\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: usersData.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleUserClick(user.id),\n          children: user.name\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), selectedUserId ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: (_messagesData$selecte = messagesData[selectedUserId]) === null || _messagesData$selecte === void 0 ? void 0 : _messagesData$selecte.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: message.text\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a user to view messages.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatApp, \"XWqhp3Q2lxEjqMJZw/2+YRIC45s=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ChatApp","_s","_messagesData$selecte","usersData","setUsersData","selectedUserId","setSelectedUserId","messagesData","setMessagesData","newMessage","setNewMessage","hardcodedUsers","id","name","hardcodedMessages","text","handleUserClick","userId","handleSendMessage","trim","updatedMessages","newMessageObject","Date","now","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","onClick","message","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Keus Automation/Documents/keuschat/bingo/src/components/Chat.js"],"sourcesContent":["// ChatApp.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst ChatApp = () => {\r\n  const [usersData, setUsersData] = useState([]);\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n  const [messagesData, setMessagesData] = useState({});\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  const hardcodedUsers = [\r\n    { id: 1, name: 'John' },\r\n    { id: 2, name: 'Alice' },\r\n    { id: 3, name: 'Bob' },\r\n  ];\r\n\r\n  const hardcodedMessages = {\r\n    1: [\r\n      { id: 1, text: 'Hi, how are you?' },\r\n      { id: 2, text: \"I'm good, thanks!\" },\r\n    ],\r\n    2: [\r\n      { id: 1, text: 'Hello there!' },\r\n      { id: 2, text: \"How's it going?\" },\r\n    ],\r\n    3: [\r\n      { id: 1, text: 'Hey!' },\r\n      { id: 2, text: \"I'm doing well, thanks.\" },\r\n    ],\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUsersData(hardcodedUsers);\r\n    setMessagesData(hardcodedMessages);\r\n  },[hardcodedUsers,]);\r\n\r\n  const handleUserClick = (userId) => {\r\n    setSelectedUserId(userId);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (newMessage.trim() === '') {\r\n      return; // Don't send empty messages\r\n    }\r\n\r\n    const updatedMessages = { ...messagesData };\r\n    const newMessageObject = {\r\n      id: Date.now(), // Using timestamp as a unique ID for simplicity\r\n      text: newMessage,\r\n    };\r\n\r\n    if (selectedUserId in updatedMessages) {\r\n      updatedMessages[selectedUserId] = [\r\n        ...updatedMessages[selectedUserId],\r\n        newMessageObject,\r\n      ];\r\n    } else {\r\n      updatedMessages[selectedUserId] = [newMessageObject];\r\n    }\r\n\r\n    setMessagesData(updatedMessages);\r\n    setNewMessage('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>User List</h2>\r\n        <ul>\r\n          {usersData.map((user) => (\r\n            <li key={user.id} onClick={() => handleUserClick(user.id)}>\r\n              {user.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Messages</h2>\r\n        {selectedUserId ? (\r\n          <div>\r\n            <ul>\r\n              {messagesData[selectedUserId]?.map((message) => (\r\n                <li key={message.id}>{message.text}</li>\r\n              ))}\r\n            </ul>\r\n            <input\r\n              type=\"text\"\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n              placeholder=\"Type your message...\"\r\n            />\r\n            <button onClick={handleSendMessage}>Send</button>\r\n          </div>\r\n        ) : (\r\n          <p>Select a user to view messages.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatApp;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMe,cAAc,GAAG,CACrB;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAO,CAAC,EACvB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAQ,CAAC,EACxB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAM,CAAC,CACvB;EAED,MAAMC,iBAAiB,GAAG;IACxB,CAAC,EAAE,CACD;MAAEF,EAAE,EAAE,CAAC;MAAEG,IAAI,EAAE;IAAmB,CAAC,EACnC;MAAEH,EAAE,EAAE,CAAC;MAAEG,IAAI,EAAE;IAAoB,CAAC,CACrC;IACD,CAAC,EAAE,CACD;MAAEH,EAAE,EAAE,CAAC;MAAEG,IAAI,EAAE;IAAe,CAAC,EAC/B;MAAEH,EAAE,EAAE,CAAC;MAAEG,IAAI,EAAE;IAAkB,CAAC,CACnC;IACD,CAAC,EAAE,CACD;MAAEH,EAAE,EAAE,CAAC;MAAEG,IAAI,EAAE;IAAO,CAAC,EACvB;MAAEH,EAAE,EAAE,CAAC;MAAEG,IAAI,EAAE;IAA0B,CAAC;EAE9C,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACdO,YAAY,CAACO,cAAc,CAAC;IAC5BH,eAAe,CAACM,iBAAiB,CAAC;EACpC,CAAC,EAAC,CAACH,cAAc,CAAE,CAAC;EAEpB,MAAMK,eAAe,GAAIC,MAAM,IAAK;IAClCX,iBAAiB,CAACW,MAAM,CAAC;EAC3B,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIT,UAAU,CAACU,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5B,OAAO,CAAC;IACV;IAEA,MAAMC,eAAe,GAAG;MAAE,GAAGb;IAAa,CAAC;IAC3C,MAAMc,gBAAgB,GAAG;MACvBT,EAAE,EAAEU,IAAI,CAACC,GAAG,CAAC,CAAC;MAAE;MAChBR,IAAI,EAAEN;IACR,CAAC;IAED,IAAIJ,cAAc,IAAIe,eAAe,EAAE;MACrCA,eAAe,CAACf,cAAc,CAAC,GAAG,CAChC,GAAGe,eAAe,CAACf,cAAc,CAAC,EAClCgB,gBAAgB,CACjB;IACH,CAAC,MAAM;MACLD,eAAe,CAACf,cAAc,CAAC,GAAG,CAACgB,gBAAgB,CAAC;IACtD;IAEAb,eAAe,CAACY,eAAe,CAAC;IAChCV,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,oBACEX,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,gBACEzB,OAAA;QAAAyB,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB7B,OAAA;QAAAyB,QAAA,EACGrB,SAAS,CAAC0B,GAAG,CAAEC,IAAI,iBAClB/B,OAAA;UAAkBgC,OAAO,EAAEA,CAAA,KAAMf,eAAe,CAACc,IAAI,CAAClB,EAAE,CAAE;UAAAY,QAAA,EACvDM,IAAI,CAACjB;QAAI,GADHiB,IAAI,CAAClB,EAAE;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAEN7B,OAAA;MAAAyB,QAAA,gBACEzB,OAAA;QAAAyB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChBvB,cAAc,gBACbN,OAAA;QAAAyB,QAAA,gBACEzB,OAAA;UAAAyB,QAAA,GAAAtB,qBAAA,GACGK,YAAY,CAACF,cAAc,CAAC,cAAAH,qBAAA,uBAA5BA,qBAAA,CAA8B2B,GAAG,CAAEG,OAAO,iBACzCjC,OAAA;YAAAyB,QAAA,EAAsBQ,OAAO,CAACjB;UAAI,GAAzBiB,OAAO,CAACpB,EAAE;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAoB,CACxC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACL7B,OAAA;UACEkC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEzB,UAAW;UAClB0B,QAAQ,EAAGC,CAAC,IAAK1B,aAAa,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC/CI,WAAW,EAAC;QAAsB;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,eACF7B,OAAA;UAAQgC,OAAO,EAAEb,iBAAkB;UAAAM,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,gBAEN7B,OAAA;QAAAyB,QAAA,EAAG;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACtC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAhGID,OAAO;AAAAuC,EAAA,GAAPvC,OAAO;AAkGb,eAAeA,OAAO;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}