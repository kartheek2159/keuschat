{"ast":null,"code":"// import { useState, useEffect } from 'react';\n// import { connect } from 'nats.ws';\n\n// function App() {\n//   const [nc, setConnection] = useState(undefined);\n//   const [lastError, setLastError] = useState(\"\");\n//   // const addmsg=(err,msg)=>{\n//   //   console.log(msg.subject)\n//   // }\n//   useEffect(() => {\n//     if (nc === undefined) {\n//       const connectToNats = async () => {\n//         try {\n//           const natsConnection = await connect({\n//             servers: \"http://localhost:4222\"\n//           });\n//           setConnection(natsConnection);\n//           // nc.subscribe(\">\",{callback:addmsg})\n\n//         } catch (err) {\n//           setLastError(\"Error connecting\");\n//           console.error(err);\n//         }\n//       };\n\n//       connectToNats();\n//     }\n//   }, [nc]);\n\n//   const state = nc ? \"Connected\" : \"Not Connected\";\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Kartheek</h1>\n//       <h1>{state}</h1>\n//       <h3>{lastError ? lastError : \"\"}</h3>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import { useState, useEffect } from 'react';\n// import { StringCodec, connect } from 'nats.ws';\n\n// function App() {\n//   const [nc, setConnection] = useState(undefined);\n//   const [lastError, setLastError] = useState(\"\");\n//   const [receivedMessage, setReceivedMessage] = useState(\"\");\n//   const [sendMessage, setSendMessage] = useState(\"\");\n//   const sc=StringCodec();\n\n//   useEffect(() => {\n//     // console.log(sendMessage)\n//     if (nc === undefined) {\n//       const connectToNats = async () => {\n//         try {\n//           const natsConnection = await connect({\n//             servers: \"http://localhost:9090\"\n//           });\n//           setConnection(natsConnection);\n//           console.log(natsConnection)\n\n//           // Subscribe to a specific subject\n\n//           const subscription = natsConnection.subscribe(\"trail\", (err, msg) => {\n//             if (err) {\n\n//               console.error(err);\n//             } else {\n\n//               console.log(msg.data);\n//               console.log(sc.decode(msg.data))\n//               // Handle incoming messages\n//               setReceivedMessage(msg.data);\n//             }\n//           });\n//           console.log(subscription)\n\n//           // Unsubscribe when component is unmounted\n//           return () => subscription.unsubscribe();\n//         } catch (err) {\n//           setLastError(\"Error connecting\");\n//           console.error(err);\n//         }\n//       };\n\n//       connectToNats();\n//     }\n//   }, [nc, sendMessage]);\n\n//   const state = nc ? \"Connected\" : \"Not Connected\";\n\n//   const handleSend = () => {\n//     // Check if the connection is available\n//     if (nc) {\n\n//       const subject = \"trail\";\n\n//       // Publish the message\n//       nc.publish(subject, sc.encode(sendMessage));\n//       console.log(sendMessage)\n\n//     } else {\n//       console.error(\"Not connected to NATS\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Kartheek</h1>\n//       <h1>{state}</h1>\n//       <h3>{lastError ? lastError : \"\"}</h3>\n//       <p>Received Message: {receivedMessage}</p>\n//       <input\n//         type=\"text\"\n//         value={sendMessage}\n//         onChange={(e) => setSendMessage(e.target.value)}\n//         placeholder=\"Type your message\"\n//       />\n//       <button onClick={handleSend}>Send Message</button>\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/keusu/Documents/test/bingo/src/App.js"],"sourcesContent":["// import { useState, useEffect } from 'react';\n// import { connect } from 'nats.ws';\n\n// function App() {\n//   const [nc, setConnection] = useState(undefined);\n//   const [lastError, setLastError] = useState(\"\");\n//   // const addmsg=(err,msg)=>{\n//   //   console.log(msg.subject)\n//   // }\n//   useEffect(() => {\n//     if (nc === undefined) {\n//       const connectToNats = async () => {\n//         try {\n//           const natsConnection = await connect({\n//             servers: \"http://localhost:4222\"\n//           });\n//           setConnection(natsConnection);\n//           // nc.subscribe(\">\",{callback:addmsg})\n          \n//         } catch (err) {\n//           setLastError(\"Error connecting\");\n//           console.error(err);\n//         }\n//       };\n\n//       connectToNats();\n//     }\n//   }, [nc]);\n\n//   const state = nc ? \"Connected\" : \"Not Connected\";\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Kartheek</h1>\n//       <h1>{state}</h1>\n//       <h3>{lastError ? lastError : \"\"}</h3>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n// import { useState, useEffect } from 'react';\n// import { StringCodec, connect } from 'nats.ws';\n\n// function App() {\n//   const [nc, setConnection] = useState(undefined);\n//   const [lastError, setLastError] = useState(\"\");\n//   const [receivedMessage, setReceivedMessage] = useState(\"\");\n//   const [sendMessage, setSendMessage] = useState(\"\");\n//   const sc=StringCodec();\n\n//   useEffect(() => {\n//     // console.log(sendMessage)\n//     if (nc === undefined) {\n//       const connectToNats = async () => {\n//         try {\n//           const natsConnection = await connect({\n//             servers: \"http://localhost:9090\"\n//           });\n//           setConnection(natsConnection);\n//           console.log(natsConnection)\n  \n//           // Subscribe to a specific subject\n          \n//           const subscription = natsConnection.subscribe(\"trail\", (err, msg) => {\n//             if (err) {\n              \n//               console.error(err);\n//             } else {\n            \n//               console.log(msg.data);\n//               console.log(sc.decode(msg.data))\n//               // Handle incoming messages\n//               setReceivedMessage(msg.data);\n//             }\n//           });\n//           console.log(subscription)\n  \n//           // Unsubscribe when component is unmounted\n//           return () => subscription.unsubscribe();\n//         } catch (err) {\n//           setLastError(\"Error connecting\");\n//           console.error(err);\n//         }\n//       };\n  \n//       connectToNats();\n//     }\n//   }, [nc, sendMessage]);\n  \n//   const state = nc ? \"Connected\" : \"Not Connected\";\n\n//   const handleSend = () => {\n//     // Check if the connection is available\n//     if (nc) {\n     \n//       const subject = \"trail\";\n      \n//       // Publish the message\n//       nc.publish(subject, sc.encode(sendMessage));\n//       console.log(sendMessage)\n        \n//     } else {\n//       console.error(\"Not connected to NATS\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Kartheek</h1>\n//       <h1>{state}</h1>\n//       <h3>{lastError ? lastError : \"\"}</h3>\n//       <p>Received Message: {receivedMessage}</p>\n//       <input\n//         type=\"text\"\n//         value={sendMessage}\n//         onChange={(e) => setSendMessage(e.target.value)}\n//         placeholder=\"Type your message\"\n//       />\n//       <button onClick={handleSend}>Send Message</button>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}