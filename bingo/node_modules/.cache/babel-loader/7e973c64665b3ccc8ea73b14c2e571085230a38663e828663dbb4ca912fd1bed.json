{"ast":null,"code":"// deno-fmt-ignore-file\n// deno-lint-ignore-file\n// This code was bundled using `deno bundle` and it's not recommended to edit it manually\n\nconst Empty = new Uint8Array(0);\nconst TE = new TextEncoder();\nconst TD = new TextDecoder();\nfunction concat(...bufs) {\n  let max = 0;\n  for (let i = 0; i < bufs.length; i++) {\n    max += bufs[i].length;\n  }\n  const out = new Uint8Array(max);\n  let index = 0;\n  for (let i = 0; i < bufs.length; i++) {\n    out.set(bufs[i], index);\n    index += bufs[i].length;\n  }\n  return out;\n}\nfunction encode(...a) {\n  const bufs = [];\n  for (let i = 0; i < a.length; i++) {\n    bufs.push(TE.encode(a[i]));\n  }\n  if (bufs.length === 0) {\n    return Empty;\n  }\n  if (bufs.length === 1) {\n    return bufs[0];\n  }\n  return concat(...bufs);\n}\nfunction decode(a) {\n  if (!a || a.length === 0) {\n    return \"\";\n  }\n  return TD.decode(a);\n}\n\"use strict\";\nconst digits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nconst base = 36;\nconst maxSeq = 3656158440062976;\nconst minInc = 33;\nconst maxInc = 333;\nconst totalLen = 12 + 10;\nfunction _getRandomValues(a) {\n  for (let i = 0; i < a.length; i++) {\n    a[i] = Math.floor(Math.random() * 255);\n  }\n}\nfunction fillRandom(a) {\n  if (globalThis?.crypto?.getRandomValues) {\n    globalThis.crypto.getRandomValues(a);\n  } else {\n    _getRandomValues(a);\n  }\n}\nclass Nuid {\n  buf;\n  seq;\n  inc;\n  constructor() {\n    this.buf = new Uint8Array(totalLen);\n    this.init();\n  }\n  init() {\n    this.setPre();\n    this.initSeqAndInc();\n    this.fillSeq();\n  }\n  initSeqAndInc() {\n    this.seq = Math.floor(Math.random() * maxSeq);\n    this.inc = Math.floor(Math.random() * (maxInc - minInc) + minInc);\n  }\n  setPre() {\n    const cbuf = new Uint8Array(12);\n    fillRandom(cbuf);\n    for (let i = 0; i < 12; i++) {\n      const di = cbuf[i] % 36;\n      this.buf[i] = digits.charCodeAt(di);\n    }\n  }\n  fillSeq() {\n    let n = this.seq;\n    for (let i = totalLen - 1; i >= 12; i--) {\n      this.buf[i] = digits.charCodeAt(n % base);\n      n = Math.floor(n / base);\n    }\n  }\n  next() {\n    this.seq += this.inc;\n    if (this.seq > 3656158440062976) {\n      this.setPre();\n      this.initSeqAndInc();\n    }\n    this.fillSeq();\n    return String.fromCharCode.apply(String, this.buf);\n  }\n  reset() {\n    this.init();\n  }\n}\nconst nuid = new Nuid();\nvar Events;\n(function (Events) {\n  Events[\"Disconnect\"] = \"disconnect\";\n  Events[\"Reconnect\"] = \"reconnect\";\n  Events[\"Update\"] = \"update\";\n  Events[\"LDM\"] = \"ldm\";\n  Events[\"Error\"] = \"error\";\n})(Events || (Events = {}));\nvar DebugEvents;\n(function (DebugEvents) {\n  DebugEvents[\"Reconnecting\"] = \"reconnecting\";\n  DebugEvents[\"PingTimer\"] = \"pingTimer\";\n  DebugEvents[\"StaleConnection\"] = \"staleConnection\";\n  DebugEvents[\"ClientInitiatedReconnect\"] = \"client initiated reconnect\";\n})(DebugEvents || (DebugEvents = {}));\nvar ErrorCode;\n(function (ErrorCode) {\n  ErrorCode[\"ApiError\"] = \"BAD API\";\n  ErrorCode[\"BadAuthentication\"] = \"BAD_AUTHENTICATION\";\n  ErrorCode[\"BadCreds\"] = \"BAD_CREDS\";\n  ErrorCode[\"BadHeader\"] = \"BAD_HEADER\";\n  ErrorCode[\"BadJson\"] = \"BAD_JSON\";\n  ErrorCode[\"BadPayload\"] = \"BAD_PAYLOAD\";\n  ErrorCode[\"BadSubject\"] = \"BAD_SUBJECT\";\n  ErrorCode[\"Cancelled\"] = \"CANCELLED\";\n  ErrorCode[\"ConnectionClosed\"] = \"CONNECTION_CLOSED\";\n  ErrorCode[\"ConnectionDraining\"] = \"CONNECTION_DRAINING\";\n  ErrorCode[\"ConnectionRefused\"] = \"CONNECTION_REFUSED\";\n  ErrorCode[\"ConnectionTimeout\"] = \"CONNECTION_TIMEOUT\";\n  ErrorCode[\"Disconnect\"] = \"DISCONNECT\";\n  ErrorCode[\"InvalidOption\"] = \"INVALID_OPTION\";\n  ErrorCode[\"InvalidPayload\"] = \"INVALID_PAYLOAD\";\n  ErrorCode[\"MaxPayloadExceeded\"] = \"MAX_PAYLOAD_EXCEEDED\";\n  ErrorCode[\"NoResponders\"] = \"503\";\n  ErrorCode[\"NotFunction\"] = \"NOT_FUNC\";\n  ErrorCode[\"RequestError\"] = \"REQUEST_ERROR\";\n  ErrorCode[\"ServerOptionNotAvailable\"] = \"SERVER_OPT_NA\";\n  ErrorCode[\"SubClosed\"] = \"SUB_CLOSED\";\n  ErrorCode[\"SubDraining\"] = \"SUB_DRAINING\";\n  ErrorCode[\"Timeout\"] = \"TIMEOUT\";\n  ErrorCode[\"Tls\"] = \"TLS\";\n  ErrorCode[\"Unknown\"] = \"UNKNOWN_ERROR\";\n  ErrorCode[\"WssRequired\"] = \"WSS_REQUIRED\";\n  ErrorCode[\"JetStreamInvalidAck\"] = \"JESTREAM_INVALID_ACK\";\n  ErrorCode[\"JetStream404NoMessages\"] = \"404\";\n  ErrorCode[\"JetStream408RequestTimeout\"] = \"408\";\n  ErrorCode[\"JetStream409MaxAckPendingExceeded\"] = \"409\";\n  ErrorCode[\"JetStream409\"] = \"409\";\n  ErrorCode[\"JetStreamNotEnabled\"] = \"503\";\n  ErrorCode[\"JetStreamIdleHeartBeat\"] = \"IDLE_HEARTBEAT\";\n  ErrorCode[\"AuthorizationViolation\"] = \"AUTHORIZATION_VIOLATION\";\n  ErrorCode[\"AuthenticationExpired\"] = \"AUTHENTICATION_EXPIRED\";\n  ErrorCode[\"ProtocolError\"] = \"NATS_PROTOCOL_ERR\";\n  ErrorCode[\"PermissionsViolation\"] = \"PERMISSIONS_VIOLATION\";\n  ErrorCode[\"AuthenticationTimeout\"] = \"AUTHENTICATION_TIMEOUT\";\n})(ErrorCode || (ErrorCode = {}));\nfunction isNatsError(err) {\n  return typeof err.code === \"string\";\n}\nclass Messages {\n  messages;\n  constructor() {\n    this.messages = new Map();\n    this.messages.set(ErrorCode.InvalidPayload, \"Invalid payload type - payloads can be 'binary', 'string', or 'json'\");\n    this.messages.set(ErrorCode.BadJson, \"Bad JSON\");\n    this.messages.set(ErrorCode.WssRequired, \"TLS is required, therefore a secure websocket connection is also required\");\n  }\n  static getMessage(s) {\n    return messages.getMessage(s);\n  }\n  getMessage(s) {\n    return this.messages.get(s) || s;\n  }\n}\nconst messages = new Messages();\nclass NatsError extends Error {\n  name;\n  message;\n  code;\n  permissionContext;\n  chainedError;\n  api_error;\n  constructor(message, code, chainedError) {\n    super(message);\n    this.name = \"NatsError\";\n    this.message = message;\n    this.code = code;\n    this.chainedError = chainedError;\n  }\n  static errorForCode(code, chainedError) {\n    const m = Messages.getMessage(code);\n    return new NatsError(m, code, chainedError);\n  }\n  isAuthError() {\n    return this.code === ErrorCode.AuthenticationExpired || this.code === ErrorCode.AuthorizationViolation;\n  }\n  isAuthTimeout() {\n    return this.code === ErrorCode.AuthenticationTimeout;\n  }\n  isPermissionError() {\n    return this.code === ErrorCode.PermissionsViolation;\n  }\n  isProtocolError() {\n    return this.code === ErrorCode.ProtocolError;\n  }\n  isJetStreamError() {\n    return this.api_error !== undefined;\n  }\n  jsError() {\n    return this.api_error ? this.api_error : null;\n  }\n}\nvar Match;\n(function (Match) {\n  Match[Match[\"Exact\"] = 0] = \"Exact\";\n  Match[Match[\"CanonicalMIME\"] = 1] = \"CanonicalMIME\";\n  Match[Match[\"IgnoreCase\"] = 2] = \"IgnoreCase\";\n})(Match || (Match = {}));\nvar RequestStrategy;\n(function (RequestStrategy) {\n  RequestStrategy[\"Timer\"] = \"timer\";\n  RequestStrategy[\"Count\"] = \"count\";\n  RequestStrategy[\"JitterTimer\"] = \"jitterTimer\";\n  RequestStrategy[\"SentinelMsg\"] = \"sentinelMsg\";\n})(RequestStrategy || (RequestStrategy = {}));\nfunction syncIterator(src) {\n  const iter = src[Symbol.asyncIterator]();\n  return {\n    async next() {\n      const m = await iter.next();\n      if (m.done) {\n        return Promise.resolve(null);\n      }\n      return Promise.resolve(m.value);\n    }\n  };\n}\nvar ServiceResponseType;\n(function (ServiceResponseType) {\n  ServiceResponseType[\"STATS\"] = \"io.nats.micro.v1.stats_response\";\n  ServiceResponseType[\"INFO\"] = \"io.nats.micro.v1.info_response\";\n  ServiceResponseType[\"PING\"] = \"io.nats.micro.v1.ping_response\";\n})(ServiceResponseType || (ServiceResponseType = {}));\nconst ServiceErrorHeader = \"Nats-Service-Error\";\nconst ServiceErrorCodeHeader = \"Nats-Service-Error-Code\";\nclass ServiceError extends Error {\n  code;\n  constructor(code, message) {\n    super(message);\n    this.code = code;\n  }\n  static isServiceError(msg) {\n    return ServiceError.toServiceError(msg) !== null;\n  }\n  static toServiceError(msg) {\n    const scode = msg?.headers?.get(ServiceErrorCodeHeader) || \"\";\n    if (scode !== \"\") {\n      const code = parseInt(scode) || 400;\n      const description = msg?.headers?.get(ServiceErrorHeader) || \"\";\n      return new ServiceError(code, description.length ? description : scode);\n    }\n    return null;\n  }\n}\nfunction createInbox(prefix = \"\") {\n  prefix = prefix || \"_INBOX\";\n  if (typeof prefix !== \"string\") {\n    throw new Error(\"prefix must be a string\");\n  }\n  prefix.split(\".\").forEach(v => {\n    if (v === \"*\" || v === \">\") {\n      throw new Error(`inbox prefixes cannot have wildcards '${prefix}'`);\n    }\n  });\n  return `${prefix}.${nuid.next()}`;\n}\nconst DEFAULT_HOST = \"127.0.0.1\";\nvar ServiceVerb;\n(function (ServiceVerb) {\n  ServiceVerb[\"PING\"] = \"PING\";\n  ServiceVerb[\"STATS\"] = \"STATS\";\n  ServiceVerb[\"INFO\"] = \"INFO\";\n})(ServiceVerb || (ServiceVerb = {}));\nfunction extend(a, ...b) {\n  for (let i = 0; i < b.length; i++) {\n    const o = b[i];\n    Object.keys(o).forEach(function (k) {\n      a[k] = o[k];\n    });\n  }\n  return a;\n}\nfunction render(frame) {\n  const cr = \"␍\";\n  const lf = \"␊\";\n  return TD.decode(frame).replace(/\\n/g, lf).replace(/\\r/g, cr);\n}\nfunction timeout(ms, asyncTraces = true) {\n  const err = asyncTraces ? NatsError.errorForCode(ErrorCode.Timeout) : null;\n  let methods;\n  let timer;\n  const p = new Promise((_resolve, reject) => {\n    const cancel = () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    };\n    methods = {\n      cancel\n    };\n    timer = setTimeout(() => {\n      if (err === null) {\n        reject(NatsError.errorForCode(ErrorCode.Timeout));\n      } else {\n        reject(err);\n      }\n    }, ms);\n  });\n  return Object.assign(p, methods);\n}\nfunction delay(ms = 0) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, ms);\n  });\n}\nfunction deadline(p, millis = 1000) {\n  const err = new Error(`deadline exceeded`);\n  const d = deferred();\n  const timer = setTimeout(() => d.reject(err), millis);\n  return Promise.race([p, d]).finally(() => clearTimeout(timer));\n}\nfunction deferred() {\n  let methods = {};\n  const p = new Promise((resolve, reject) => {\n    methods = {\n      resolve,\n      reject\n    };\n  });\n  return Object.assign(p, methods);\n}\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\nclass Perf {\n  timers;\n  measures;\n  constructor() {\n    this.timers = new Map();\n    this.measures = new Map();\n  }\n  mark(key) {\n    this.timers.set(key, performance.now());\n  }\n  measure(key, startKey, endKey) {\n    const s = this.timers.get(startKey);\n    if (s === undefined) {\n      throw new Error(`${startKey} is not defined`);\n    }\n    const e = this.timers.get(endKey);\n    if (e === undefined) {\n      throw new Error(`${endKey} is not defined`);\n    }\n    this.measures.set(key, e - s);\n  }\n  getEntries() {\n    const values = [];\n    this.measures.forEach((v, k) => {\n      values.push({\n        name: k,\n        duration: v\n      });\n    });\n    return values;\n  }\n}\nfunction jitter(n) {\n  if (n === 0) {\n    return 0;\n  }\n  return Math.floor(n / 2 + Math.random() * n);\n}\nfunction backoff(policy = [0, 250, 250, 500, 500, 3000, 5000]) {\n  if (!Array.isArray(policy)) {\n    policy = [0, 250, 250, 500, 500, 3000, 5000];\n  }\n  const max = policy.length - 1;\n  return {\n    backoff(attempt) {\n      return jitter(attempt > max ? policy[max] : policy[attempt]);\n    }\n  };\n}\nclass DataBuffer {\n  buffers;\n  byteLength;\n  constructor() {\n    this.buffers = [];\n    this.byteLength = 0;\n  }\n  static concat(...bufs) {\n    let max = 0;\n    for (let i = 0; i < bufs.length; i++) {\n      max += bufs[i].length;\n    }\n    const out = new Uint8Array(max);\n    let index = 0;\n    for (let i = 0; i < bufs.length; i++) {\n      out.set(bufs[i], index);\n      index += bufs[i].length;\n    }\n    return out;\n  }\n  static fromAscii(m) {\n    if (!m) {\n      m = \"\";\n    }\n    return TE.encode(m);\n  }\n  static toAscii(a) {\n    return TD.decode(a);\n  }\n  reset() {\n    this.buffers.length = 0;\n    this.byteLength = 0;\n  }\n  pack() {\n    if (this.buffers.length > 1) {\n      const v = new Uint8Array(this.byteLength);\n      let index = 0;\n      for (let i = 0; i < this.buffers.length; i++) {\n        v.set(this.buffers[i], index);\n        index += this.buffers[i].length;\n      }\n      this.buffers.length = 0;\n      this.buffers.push(v);\n    }\n  }\n  shift() {\n    if (this.buffers.length) {\n      const a = this.buffers.shift();\n      if (a) {\n        this.byteLength -= a.length;\n        return a;\n      }\n    }\n    return new Uint8Array(0);\n  }\n  drain(n) {\n    if (this.buffers.length) {\n      this.pack();\n      const v = this.buffers.pop();\n      if (v) {\n        const max = this.byteLength;\n        if (n === undefined || n > max) {\n          n = max;\n        }\n        const d = v.subarray(0, n);\n        if (max > n) {\n          this.buffers.push(v.subarray(n));\n        }\n        this.byteLength = max - n;\n        return d;\n      }\n    }\n    return new Uint8Array(0);\n  }\n  fill(a, ...bufs) {\n    if (a) {\n      this.buffers.push(a);\n      this.byteLength += a.length;\n    }\n    for (let i = 0; i < bufs.length; i++) {\n      if (bufs[i] && bufs[i].length) {\n        this.buffers.push(bufs[i]);\n        this.byteLength += bufs[i].length;\n      }\n    }\n  }\n  peek() {\n    if (this.buffers.length) {\n      this.pack();\n      return this.buffers[0];\n    }\n    return new Uint8Array(0);\n  }\n  size() {\n    return this.byteLength;\n  }\n  length() {\n    return this.buffers.length;\n  }\n}\nlet transportConfig;\nfunction setTransportFactory(config) {\n  transportConfig = config;\n}\nfunction defaultPort() {\n  return transportConfig !== undefined && transportConfig.defaultPort !== undefined ? transportConfig.defaultPort : 4222;\n}\nfunction getUrlParseFn() {\n  return transportConfig !== undefined && transportConfig.urlParseFn ? transportConfig.urlParseFn : undefined;\n}\nfunction newTransport() {\n  if (!transportConfig || typeof transportConfig.factory !== \"function\") {\n    throw new Error(\"transport fn is not set\");\n  }\n  return transportConfig.factory();\n}\nfunction getResolveFn() {\n  return transportConfig !== undefined && transportConfig.dnsResolveFn ? transportConfig.dnsResolveFn : undefined;\n}\nconst CR_LF = \"\\r\\n\";\nCR_LF.length;\nconst CRLF = DataBuffer.fromAscii(CR_LF);\nconst CR = new Uint8Array(CRLF)[0];\nconst LF = new Uint8Array(CRLF)[1];\nfunction protoLen(ba) {\n  for (let i = 0; i < ba.length; i++) {\n    const n = i + 1;\n    if (ba.byteLength > n && ba[i] === CR && ba[n] === LF) {\n      return n + 1;\n    }\n  }\n  return 0;\n}\nfunction extractProtocolMessage(a) {\n  const len = protoLen(a);\n  if (len > 0) {\n    const ba = new Uint8Array(a);\n    const out = ba.slice(0, len);\n    return TD.decode(out);\n  }\n  return \"\";\n}\nconst IPv4LEN = 4;\nconst ASCII0 = 48;\nconst ASCIIA = 65;\nconst ASCIIa = 97;\nfunction ipV4(a, b, c, d) {\n  const ip = new Uint8Array(16);\n  const prefix = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff];\n  prefix.forEach((v, idx) => {\n    ip[idx] = v;\n  });\n  ip[12] = a;\n  ip[13] = b;\n  ip[14] = c;\n  ip[15] = d;\n  return ip;\n}\nfunction isIP(h) {\n  return parseIP(h) !== undefined;\n}\nfunction parseIP(h) {\n  for (let i = 0; i < h.length; i++) {\n    switch (h[i]) {\n      case \".\":\n        return parseIPv4(h);\n      case \":\":\n        return parseIPv6(h);\n    }\n  }\n  return;\n}\nfunction parseIPv4(s) {\n  const ip = new Uint8Array(4);\n  for (let i = 0; i < 4; i++) {\n    if (s.length === 0) {\n      return undefined;\n    }\n    if (i > 0) {\n      if (s[0] !== \".\") {\n        return undefined;\n      }\n      s = s.substring(1);\n    }\n    const {\n      n,\n      c,\n      ok\n    } = dtoi(s);\n    if (!ok || n > 0xFF) {\n      return undefined;\n    }\n    s = s.substring(c);\n    ip[i] = n;\n  }\n  return ipV4(ip[0], ip[1], ip[2], ip[3]);\n}\nfunction parseIPv6(s) {\n  const ip = new Uint8Array(16);\n  let ellipsis = -1;\n  if (s.length >= 2 && s[0] === \":\" && s[1] === \":\") {\n    ellipsis = 0;\n    s = s.substring(2);\n    if (s.length === 0) {\n      return ip;\n    }\n  }\n  let i = 0;\n  while (i < 16) {\n    const {\n      n,\n      c,\n      ok\n    } = xtoi(s);\n    if (!ok || n > 0xFFFF) {\n      return undefined;\n    }\n    if (c < s.length && s[c] === \".\") {\n      if (ellipsis < 0 && i != 16 - 4) {\n        return undefined;\n      }\n      if (i + 4 > 16) {\n        return undefined;\n      }\n      const ip4 = parseIPv4(s);\n      if (ip4 === undefined) {\n        return undefined;\n      }\n      ip[i] = ip4[12];\n      ip[i + 1] = ip4[13];\n      ip[i + 2] = ip4[14];\n      ip[i + 3] = ip4[15];\n      s = \"\";\n      i += IPv4LEN;\n      break;\n    }\n    ip[i] = n >> 8;\n    ip[i + 1] = n;\n    i += 2;\n    s = s.substring(c);\n    if (s.length === 0) {\n      break;\n    }\n    if (s[0] !== \":\" || s.length == 1) {\n      return undefined;\n    }\n    s = s.substring(1);\n    if (s[0] === \":\") {\n      if (ellipsis >= 0) {\n        return undefined;\n      }\n      ellipsis = i;\n      s = s.substring(1);\n      if (s.length === 0) {\n        break;\n      }\n    }\n  }\n  if (s.length !== 0) {\n    return undefined;\n  }\n  if (i < 16) {\n    if (ellipsis < 0) {\n      return undefined;\n    }\n    const n = 16 - i;\n    for (let j = i - 1; j >= ellipsis; j--) {\n      ip[j + n] = ip[j];\n    }\n    for (let j = ellipsis + n - 1; j >= ellipsis; j--) {\n      ip[j] = 0;\n    }\n  } else if (ellipsis >= 0) {\n    return undefined;\n  }\n  return ip;\n}\nfunction dtoi(s) {\n  let i = 0;\n  let n = 0;\n  for (i = 0; i < s.length && 48 <= s.charCodeAt(i) && s.charCodeAt(i) <= 57; i++) {\n    n = n * 10 + (s.charCodeAt(i) - ASCII0);\n    if (n >= 0xFFFFFF) {\n      return {\n        n: 0xFFFFFF,\n        c: i,\n        ok: false\n      };\n    }\n  }\n  if (i === 0) {\n    return {\n      n: 0,\n      c: 0,\n      ok: false\n    };\n  }\n  return {\n    n: n,\n    c: i,\n    ok: true\n  };\n}\nfunction xtoi(s) {\n  let n = 0;\n  let i = 0;\n  for (i = 0; i < s.length; i++) {\n    if (48 <= s.charCodeAt(i) && s.charCodeAt(i) <= 57) {\n      n *= 16;\n      n += s.charCodeAt(i) - ASCII0;\n    } else if (97 <= s.charCodeAt(i) && s.charCodeAt(i) <= 102) {\n      n *= 16;\n      n += s.charCodeAt(i) - ASCIIa + 10;\n    } else if (65 <= s.charCodeAt(i) && s.charCodeAt(i) <= 70) {\n      n *= 16;\n      n += s.charCodeAt(i) - ASCIIA + 10;\n    } else {\n      break;\n    }\n    if (n >= 0xFFFFFF) {\n      return {\n        n: 0,\n        c: i,\n        ok: false\n      };\n    }\n  }\n  if (i === 0) {\n    return {\n      n: 0,\n      c: i,\n      ok: false\n    };\n  }\n  return {\n    n: n,\n    c: i,\n    ok: true\n  };\n}\nfunction isIPV4OrHostname(hp) {\n  if (hp.indexOf(\".\") !== -1) {\n    return true;\n  }\n  if (hp.indexOf(\"[\") !== -1 || hp.indexOf(\"::\") !== -1) {\n    return false;\n  }\n  if (hp.split(\":\").length <= 2) {\n    return true;\n  }\n  return false;\n}\nfunction isIPV6(hp) {\n  return !isIPV4OrHostname(hp);\n}\nfunction filterIpv6MappedToIpv4(hp) {\n  const prefix = \"::FFFF:\";\n  const idx = hp.toUpperCase().indexOf(prefix);\n  if (idx !== -1 && hp.indexOf(\".\") !== -1) {\n    let ip = hp.substring(idx + prefix.length);\n    ip = ip.replace(\"[\", \"\");\n    return ip.replace(\"]\", \"\");\n  }\n  return hp;\n}\nfunction hostPort(u) {\n  u = u.trim();\n  if (u.match(/^(.*:\\/\\/)(.*)/m)) {\n    u = u.replace(/^(.*:\\/\\/)(.*)/gm, \"$2\");\n  }\n  u = filterIpv6MappedToIpv4(u);\n  if (isIPV6(u) && u.indexOf(\"[\") === -1) {\n    u = `[${u}]`;\n  }\n  const op = isIPV6(u) ? u.match(/(]:)(\\d+)/) : u.match(/(:)(\\d+)/);\n  const port = op && op.length === 3 && op[1] && op[2] ? parseInt(op[2]) : 4222;\n  const protocol = port === 80 ? \"https\" : \"http\";\n  const url = new URL(`${protocol}://${u}`);\n  url.port = `${port}`;\n  let hostname = url.hostname;\n  if (hostname.charAt(0) === \"[\") {\n    hostname = hostname.substring(1, hostname.length - 1);\n  }\n  const listen = url.host;\n  return {\n    listen,\n    hostname,\n    port\n  };\n}\nclass ServerImpl {\n  src;\n  listen;\n  hostname;\n  port;\n  didConnect;\n  reconnects;\n  lastConnect;\n  gossiped;\n  tlsName;\n  resolves;\n  constructor(u, gossiped = false) {\n    this.src = u;\n    this.tlsName = \"\";\n    const v = hostPort(u);\n    this.listen = v.listen;\n    this.hostname = v.hostname;\n    this.port = v.port;\n    this.didConnect = false;\n    this.reconnects = 0;\n    this.lastConnect = 0;\n    this.gossiped = gossiped;\n  }\n  toString() {\n    return this.listen;\n  }\n  async resolve(opts) {\n    if (!opts.fn) {\n      return [this];\n    }\n    const buf = [];\n    if (isIP(this.hostname)) {\n      return [this];\n    } else {\n      const ips = await opts.fn(this.hostname);\n      if (opts.debug) {\n        console.log(`resolve ${this.hostname} = ${ips.join(\",\")}`);\n      }\n      for (const ip of ips) {\n        const proto = this.port === 80 ? \"https\" : \"http\";\n        const url = new URL(`${proto}://${isIPV6(ip) ? \"[\" + ip + \"]\" : ip}`);\n        url.port = `${this.port}`;\n        const ss = new ServerImpl(url.host, false);\n        ss.tlsName = this.hostname;\n        buf.push(ss);\n      }\n    }\n    if (opts.randomize) {\n      shuffle(buf);\n    }\n    this.resolves = buf;\n    return buf;\n  }\n}\nclass Servers {\n  firstSelect;\n  servers;\n  currentServer;\n  tlsName;\n  randomize;\n  constructor(listens = [], opts = {}) {\n    this.firstSelect = true;\n    this.servers = [];\n    this.tlsName = \"\";\n    this.randomize = opts.randomize || false;\n    const urlParseFn = getUrlParseFn();\n    if (listens) {\n      listens.forEach(hp => {\n        hp = urlParseFn ? urlParseFn(hp) : hp;\n        this.servers.push(new ServerImpl(hp));\n      });\n      if (this.randomize) {\n        this.servers = shuffle(this.servers);\n      }\n    }\n    if (this.servers.length === 0) {\n      this.addServer(`${DEFAULT_HOST}:${defaultPort()}`, false);\n    }\n    this.currentServer = this.servers[0];\n  }\n  clear() {\n    this.servers.length = 0;\n  }\n  updateTLSName() {\n    const cs = this.getCurrentServer();\n    if (!isIP(cs.hostname)) {\n      this.tlsName = cs.hostname;\n      this.servers.forEach(s => {\n        if (s.gossiped) {\n          s.tlsName = this.tlsName;\n        }\n      });\n    }\n  }\n  getCurrentServer() {\n    return this.currentServer;\n  }\n  addServer(u, implicit = false) {\n    const urlParseFn = getUrlParseFn();\n    u = urlParseFn ? urlParseFn(u) : u;\n    const s = new ServerImpl(u, implicit);\n    if (isIP(s.hostname)) {\n      s.tlsName = this.tlsName;\n    }\n    this.servers.push(s);\n  }\n  selectServer() {\n    if (this.firstSelect) {\n      this.firstSelect = false;\n      return this.currentServer;\n    }\n    const t = this.servers.shift();\n    if (t) {\n      this.servers.push(t);\n      this.currentServer = t;\n    }\n    return t;\n  }\n  removeCurrentServer() {\n    this.removeServer(this.currentServer);\n  }\n  removeServer(server) {\n    if (server) {\n      const index = this.servers.indexOf(server);\n      this.servers.splice(index, 1);\n    }\n  }\n  length() {\n    return this.servers.length;\n  }\n  next() {\n    return this.servers.length ? this.servers[0] : undefined;\n  }\n  getServers() {\n    return this.servers;\n  }\n  update(info) {\n    const added = [];\n    let deleted = [];\n    const urlParseFn = getUrlParseFn();\n    const discovered = new Map();\n    if (info.connect_urls && info.connect_urls.length > 0) {\n      info.connect_urls.forEach(hp => {\n        hp = urlParseFn ? urlParseFn(hp) : hp;\n        const s = new ServerImpl(hp, true);\n        discovered.set(hp, s);\n      });\n    }\n    const toDelete = [];\n    this.servers.forEach((s, index) => {\n      const u = s.listen;\n      if (s.gossiped && this.currentServer.listen !== u && discovered.get(u) === undefined) {\n        toDelete.push(index);\n      }\n      discovered.delete(u);\n    });\n    toDelete.reverse();\n    toDelete.forEach(index => {\n      const removed = this.servers.splice(index, 1);\n      deleted = deleted.concat(removed[0].listen);\n    });\n    discovered.forEach((v, k) => {\n      this.servers.push(v);\n      added.push(k);\n    });\n    return {\n      added,\n      deleted\n    };\n  }\n}\nclass QueuedIteratorImpl {\n  inflight;\n  processed;\n  received;\n  noIterator;\n  iterClosed;\n  done;\n  signal;\n  yields;\n  filtered;\n  pendingFiltered;\n  ingestionFilterFn;\n  protocolFilterFn;\n  dispatchedFn;\n  ctx;\n  _data;\n  err;\n  time;\n  yielding;\n  constructor() {\n    this.inflight = 0;\n    this.filtered = 0;\n    this.pendingFiltered = 0;\n    this.processed = 0;\n    this.received = 0;\n    this.noIterator = false;\n    this.done = false;\n    this.signal = deferred();\n    this.yields = [];\n    this.iterClosed = deferred();\n    this.time = 0;\n    this.yielding = false;\n  }\n  [Symbol.asyncIterator]() {\n    return this.iterate();\n  }\n  push(v) {\n    if (this.done) {\n      return;\n    }\n    if (typeof v === \"function\") {\n      this.yields.push(v);\n      this.signal.resolve();\n      return;\n    }\n    const {\n      ingest,\n      protocol\n    } = this.ingestionFilterFn ? this.ingestionFilterFn(v, this.ctx || this) : {\n      ingest: true,\n      protocol: false\n    };\n    if (ingest) {\n      if (protocol) {\n        this.filtered++;\n        this.pendingFiltered++;\n      }\n      this.yields.push(v);\n      this.signal.resolve();\n    }\n  }\n  async *iterate() {\n    if (this.noIterator) {\n      throw new NatsError(\"unsupported iterator\", ErrorCode.ApiError);\n    }\n    if (this.yielding) {\n      throw new NatsError(\"already yielding\", ErrorCode.ApiError);\n    }\n    this.yielding = true;\n    try {\n      while (true) {\n        if (this.yields.length === 0) {\n          await this.signal;\n        }\n        if (this.err) {\n          throw this.err;\n        }\n        const yields = this.yields;\n        this.inflight = yields.length;\n        this.yields = [];\n        for (let i = 0; i < yields.length; i++) {\n          if (typeof yields[i] === \"function\") {\n            const fn = yields[i];\n            try {\n              fn();\n            } catch (err) {\n              throw err;\n            }\n            if (this.err) {\n              throw this.err;\n            }\n            continue;\n          }\n          const ok = this.protocolFilterFn ? this.protocolFilterFn(yields[i]) : true;\n          if (ok) {\n            this.processed++;\n            const start = Date.now();\n            yield yields[i];\n            this.time = Date.now() - start;\n            if (this.dispatchedFn && yields[i]) {\n              this.dispatchedFn(yields[i]);\n            }\n          } else {\n            this.pendingFiltered--;\n          }\n          this.inflight--;\n        }\n        if (this.done) {\n          break;\n        } else if (this.yields.length === 0) {\n          yields.length = 0;\n          this.yields = yields;\n          this.signal = deferred();\n        }\n      }\n    } finally {\n      this.stop();\n    }\n  }\n  stop(err) {\n    if (this.done) {\n      return;\n    }\n    this.err = err;\n    this.done = true;\n    this.signal.resolve();\n    this.iterClosed.resolve();\n  }\n  getProcessed() {\n    return this.noIterator ? this.received : this.processed;\n  }\n  getPending() {\n    return this.yields.length + this.inflight - this.pendingFiltered;\n  }\n  getReceived() {\n    return this.received - this.filtered;\n  }\n}\nfunction canonicalMIMEHeaderKey(k) {\n  const dash = 45;\n  const toLower = 97 - 65;\n  let upper = true;\n  const buf = new Array(k.length);\n  for (let i = 0; i < k.length; i++) {\n    let c = k.charCodeAt(i);\n    if (c === 58 || c < 33 || c > 126) {\n      throw new NatsError(`'${k[i]}' is not a valid character for a header key`, ErrorCode.BadHeader);\n    }\n    if (upper && 97 <= c && c <= 122) {\n      c -= toLower;\n    } else if (!upper && 65 <= c && c <= 90) {\n      c += toLower;\n    }\n    buf[i] = c;\n    upper = c == dash;\n  }\n  return String.fromCharCode(...buf);\n}\nfunction headers(code = 0, description = \"\") {\n  if (code === 0 && description !== \"\" || code > 0 && description === \"\") {\n    throw new Error(\"setting status requires both code and description\");\n  }\n  return new MsgHdrsImpl(code, description);\n}\nconst HEADER = \"NATS/1.0\";\nclass MsgHdrsImpl {\n  _code;\n  headers;\n  _description;\n  constructor(code = 0, description = \"\") {\n    this._code = code;\n    this._description = description;\n    this.headers = new Map();\n  }\n  [Symbol.iterator]() {\n    return this.headers.entries();\n  }\n  size() {\n    return this.headers.size;\n  }\n  equals(mh) {\n    if (mh && this.headers.size === mh.headers.size && this._code === mh._code) {\n      for (const [k, v] of this.headers) {\n        const a = mh.values(k);\n        if (v.length !== a.length) {\n          return false;\n        }\n        const vv = [...v].sort();\n        const aa = [...a].sort();\n        for (let i = 0; i < vv.length; i++) {\n          if (vv[i] !== aa[i]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n  static decode(a) {\n    const mh = new MsgHdrsImpl();\n    const s = TD.decode(a);\n    const lines = s.split(\"\\r\\n\");\n    const h = lines[0];\n    if (h !== HEADER) {\n      let str = h.replace(HEADER, \"\").trim();\n      if (str.length > 0) {\n        mh._code = parseInt(str, 10);\n        if (isNaN(mh._code)) {\n          mh._code = 0;\n        }\n        const scode = mh._code.toString();\n        str = str.replace(scode, \"\");\n        mh._description = str.trim();\n      }\n    }\n    if (lines.length >= 1) {\n      lines.slice(1).map(s => {\n        if (s) {\n          const idx = s.indexOf(\":\");\n          if (idx > -1) {\n            const k = s.slice(0, idx);\n            const v = s.slice(idx + 1).trim();\n            mh.append(k, v);\n          }\n        }\n      });\n    }\n    return mh;\n  }\n  toString() {\n    if (this.headers.size === 0 && this._code === 0) {\n      return \"\";\n    }\n    let s = HEADER;\n    if (this._code > 0 && this._description !== \"\") {\n      s += ` ${this._code} ${this._description}`;\n    }\n    for (const [k, v] of this.headers) {\n      for (let i = 0; i < v.length; i++) {\n        s = `${s}\\r\\n${k}: ${v[i]}`;\n      }\n    }\n    return `${s}\\r\\n\\r\\n`;\n  }\n  encode() {\n    return TE.encode(this.toString());\n  }\n  static validHeaderValue(k) {\n    const inv = /[\\r\\n]/;\n    if (inv.test(k)) {\n      throw new NatsError(\"invalid header value - \\\\r and \\\\n are not allowed.\", ErrorCode.BadHeader);\n    }\n    return k.trim();\n  }\n  keys() {\n    const keys = [];\n    for (const sk of this.headers.keys()) {\n      keys.push(sk);\n    }\n    return keys;\n  }\n  findKeys(k, match = Match.Exact) {\n    const keys = this.keys();\n    switch (match) {\n      case Match.Exact:\n        return keys.filter(v => {\n          return v === k;\n        });\n      case Match.CanonicalMIME:\n        k = canonicalMIMEHeaderKey(k);\n        return keys.filter(v => {\n          return v === k;\n        });\n      default:\n        {\n          const lci = k.toLowerCase();\n          return keys.filter(v => {\n            return lci === v.toLowerCase();\n          });\n        }\n    }\n  }\n  get(k, match = Match.Exact) {\n    const keys = this.findKeys(k, match);\n    if (keys.length) {\n      const v = this.headers.get(keys[0]);\n      if (v) {\n        return Array.isArray(v) ? v[0] : v;\n      }\n    }\n    return \"\";\n  }\n  last(k, match = Match.Exact) {\n    const keys = this.findKeys(k, match);\n    if (keys.length) {\n      const v = this.headers.get(keys[0]);\n      if (v) {\n        return Array.isArray(v) ? v[v.length - 1] : v;\n      }\n    }\n    return \"\";\n  }\n  has(k, match = Match.Exact) {\n    return this.findKeys(k, match).length > 0;\n  }\n  set(k, v, match = Match.Exact) {\n    this.delete(k, match);\n    this.append(k, v, match);\n  }\n  append(k, v, match = Match.Exact) {\n    const ck = canonicalMIMEHeaderKey(k);\n    if (match === Match.CanonicalMIME) {\n      k = ck;\n    }\n    const keys = this.findKeys(k, match);\n    k = keys.length > 0 ? keys[0] : k;\n    const value = MsgHdrsImpl.validHeaderValue(v);\n    let a = this.headers.get(k);\n    if (!a) {\n      a = [];\n      this.headers.set(k, a);\n    }\n    a.push(value);\n  }\n  values(k, match = Match.Exact) {\n    const buf = [];\n    const keys = this.findKeys(k, match);\n    keys.forEach(v => {\n      const values = this.headers.get(v);\n      if (values) {\n        buf.push(...values);\n      }\n    });\n    return buf;\n  }\n  delete(k, match = Match.Exact) {\n    const keys = this.findKeys(k, match);\n    keys.forEach(v => {\n      this.headers.delete(v);\n    });\n  }\n  get hasError() {\n    return this._code >= 300;\n  }\n  get status() {\n    return `${this._code} ${this._description}`.trim();\n  }\n  toRecord() {\n    const data = {};\n    this.keys().forEach(v => {\n      data[v] = this.values(v);\n    });\n    return data;\n  }\n  get code() {\n    return this._code;\n  }\n  get description() {\n    return this._description;\n  }\n  static fromRecord(r) {\n    const h = new MsgHdrsImpl();\n    for (const k in r) {\n      h.headers.set(k, r[k]);\n    }\n    return h;\n  }\n}\nfunction StringCodec() {\n  return {\n    encode(d) {\n      return TE.encode(d);\n    },\n    decode(a) {\n      return TD.decode(a);\n    }\n  };\n}\nfunction JSONCodec(reviver) {\n  return {\n    encode(d) {\n      try {\n        if (d === undefined) {\n          d = null;\n        }\n        return TE.encode(JSON.stringify(d));\n      } catch (err) {\n        throw NatsError.errorForCode(ErrorCode.BadJson, err);\n      }\n    },\n    decode(a) {\n      try {\n        return JSON.parse(TD.decode(a), reviver);\n      } catch (err) {\n        throw NatsError.errorForCode(ErrorCode.BadJson, err);\n      }\n    }\n  };\n}\nfunction isRequestError(msg) {\n  if (msg && msg.data.length === 0 && msg.headers?.code === 503) {\n    return NatsError.errorForCode(ErrorCode.NoResponders);\n  }\n  return null;\n}\nclass MsgImpl {\n  _headers;\n  _msg;\n  _rdata;\n  _reply;\n  _subject;\n  publisher;\n  static jc;\n  constructor(msg, data, publisher) {\n    this._msg = msg;\n    this._rdata = data;\n    this.publisher = publisher;\n  }\n  get subject() {\n    if (this._subject) {\n      return this._subject;\n    }\n    this._subject = TD.decode(this._msg.subject);\n    return this._subject;\n  }\n  get reply() {\n    if (this._reply) {\n      return this._reply;\n    }\n    this._reply = TD.decode(this._msg.reply);\n    return this._reply;\n  }\n  get sid() {\n    return this._msg.sid;\n  }\n  get headers() {\n    if (this._msg.hdr > -1 && !this._headers) {\n      const buf = this._rdata.subarray(0, this._msg.hdr);\n      this._headers = MsgHdrsImpl.decode(buf);\n    }\n    return this._headers;\n  }\n  get data() {\n    if (!this._rdata) {\n      return new Uint8Array(0);\n    }\n    return this._msg.hdr > -1 ? this._rdata.subarray(this._msg.hdr) : this._rdata;\n  }\n  respond(data = Empty, opts) {\n    if (this.reply) {\n      this.publisher.publish(this.reply, data, opts);\n      return true;\n    }\n    return false;\n  }\n  size() {\n    const subj = this._msg.subject.length;\n    const reply = this._msg.reply?.length || 0;\n    const payloadAndHeaders = this._msg.size === -1 ? 0 : this._msg.size;\n    return subj + reply + payloadAndHeaders;\n  }\n  json(reviver) {\n    return JSONCodec(reviver).decode(this.data);\n  }\n  string() {\n    return TD.decode(this.data);\n  }\n}\nclass MuxSubscription {\n  baseInbox;\n  reqs;\n  constructor() {\n    this.reqs = new Map();\n  }\n  size() {\n    return this.reqs.size;\n  }\n  init(prefix) {\n    this.baseInbox = `${createInbox(prefix)}.`;\n    return this.baseInbox;\n  }\n  add(r) {\n    if (!isNaN(r.received)) {\n      r.received = 0;\n    }\n    this.reqs.set(r.token, r);\n  }\n  get(token) {\n    return this.reqs.get(token);\n  }\n  cancel(r) {\n    this.reqs.delete(r.token);\n  }\n  getToken(m) {\n    const s = m.subject || \"\";\n    if (s.indexOf(this.baseInbox) === 0) {\n      return s.substring(this.baseInbox.length);\n    }\n    return null;\n  }\n  all() {\n    return Array.from(this.reqs.values());\n  }\n  handleError(isMuxPermissionError, err) {\n    if (err && err.permissionContext) {\n      if (isMuxPermissionError) {\n        this.all().forEach(r => {\n          r.resolver(err, {});\n        });\n        return true;\n      }\n      const ctx = err.permissionContext;\n      if (ctx.operation === \"publish\") {\n        const req = this.all().find(s => {\n          return s.requestSubject === ctx.subject;\n        });\n        if (req) {\n          req.resolver(err, {});\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  dispatcher() {\n    return (err, m) => {\n      const token = this.getToken(m);\n      if (token) {\n        const r = this.get(token);\n        if (r) {\n          if (err === null && m.headers) {\n            err = isRequestError(m);\n          }\n          r.resolver(err, m);\n        }\n      }\n    };\n  }\n  close() {\n    const err = NatsError.errorForCode(ErrorCode.Timeout);\n    this.reqs.forEach(req => {\n      req.resolver(err, {});\n    });\n  }\n}\nclass Heartbeat {\n  ph;\n  interval;\n  maxOut;\n  timer;\n  pendings;\n  constructor(ph, interval, maxOut) {\n    this.ph = ph;\n    this.interval = interval;\n    this.maxOut = maxOut;\n    this.pendings = [];\n  }\n  start() {\n    this.cancel();\n    this._schedule();\n  }\n  cancel(stale) {\n    if (this.timer) {\n      clearTimeout(this.timer);\n      this.timer = undefined;\n    }\n    this._reset();\n    if (stale) {\n      this.ph.disconnect();\n    }\n  }\n  _schedule() {\n    this.timer = setTimeout(() => {\n      this.ph.dispatchStatus({\n        type: DebugEvents.PingTimer,\n        data: `${this.pendings.length + 1}`\n      });\n      if (this.pendings.length === this.maxOut) {\n        this.cancel(true);\n        return;\n      }\n      const ping = deferred();\n      this.ph.flush(ping).then(() => {\n        this._reset();\n      }).catch(() => {\n        this.cancel();\n      });\n      this.pendings.push(ping);\n      this._schedule();\n    }, this.interval);\n  }\n  _reset() {\n    this.pendings = this.pendings.filter(p => {\n      const d = p;\n      d.resolve();\n      return false;\n    });\n  }\n}\nclass AssertionError extends Error {\n  constructor(msg) {\n    super(msg);\n    this.name = \"AssertionError\";\n  }\n}\nfunction assert(cond, msg = \"Assertion failed.\") {\n  if (!cond) {\n    throw new AssertionError(msg);\n  }\n}\nconst MIN_READ = 32 * 1024;\nconst MAX_SIZE = 2 ** 32 - 2;\nfunction copy(src, dst, off = 0) {\n  const r = dst.byteLength - off;\n  if (src.byteLength > r) {\n    src = src.subarray(0, r);\n  }\n  dst.set(src, off);\n  return src.byteLength;\n}\nclass DenoBuffer {\n  _buf;\n  _off;\n  constructor(ab) {\n    this._off = 0;\n    if (ab == null) {\n      this._buf = new Uint8Array(0);\n      return;\n    }\n    this._buf = new Uint8Array(ab);\n  }\n  bytes(options = {\n    copy: true\n  }) {\n    if (options.copy === false) return this._buf.subarray(this._off);\n    return this._buf.slice(this._off);\n  }\n  empty() {\n    return this._buf.byteLength <= this._off;\n  }\n  get length() {\n    return this._buf.byteLength - this._off;\n  }\n  get capacity() {\n    return this._buf.buffer.byteLength;\n  }\n  truncate(n) {\n    if (n === 0) {\n      this.reset();\n      return;\n    }\n    if (n < 0 || n > this.length) {\n      throw Error(\"bytes.Buffer: truncation out of range\");\n    }\n    this._reslice(this._off + n);\n  }\n  reset() {\n    this._reslice(0);\n    this._off = 0;\n  }\n  _tryGrowByReslice(n) {\n    const l = this._buf.byteLength;\n    if (n <= this.capacity - l) {\n      this._reslice(l + n);\n      return l;\n    }\n    return -1;\n  }\n  _reslice(len) {\n    assert(len <= this._buf.buffer.byteLength);\n    this._buf = new Uint8Array(this._buf.buffer, 0, len);\n  }\n  readByte() {\n    const a = new Uint8Array(1);\n    if (this.read(a)) {\n      return a[0];\n    }\n    return null;\n  }\n  read(p) {\n    if (this.empty()) {\n      this.reset();\n      if (p.byteLength === 0) {\n        return 0;\n      }\n      return null;\n    }\n    const nread = copy(this._buf.subarray(this._off), p);\n    this._off += nread;\n    return nread;\n  }\n  writeByte(n) {\n    return this.write(Uint8Array.of(n));\n  }\n  writeString(s) {\n    return this.write(TE.encode(s));\n  }\n  write(p) {\n    const m = this._grow(p.byteLength);\n    return copy(p, this._buf, m);\n  }\n  _grow(n) {\n    const m = this.length;\n    if (m === 0 && this._off !== 0) {\n      this.reset();\n    }\n    const i = this._tryGrowByReslice(n);\n    if (i >= 0) {\n      return i;\n    }\n    const c = this.capacity;\n    if (n <= Math.floor(c / 2) - m) {\n      copy(this._buf.subarray(this._off), this._buf);\n    } else if (c + n > MAX_SIZE) {\n      throw new Error(\"The buffer cannot be grown beyond the maximum size.\");\n    } else {\n      const buf = new Uint8Array(Math.min(2 * c + n, MAX_SIZE));\n      copy(this._buf.subarray(this._off), buf);\n      this._buf = buf;\n    }\n    this._off = 0;\n    this._reslice(Math.min(m + n, MAX_SIZE));\n    return m;\n  }\n  grow(n) {\n    if (n < 0) {\n      throw Error(\"Buffer._grow: negative count\");\n    }\n    const m = this._grow(n);\n    this._reslice(m);\n  }\n  readFrom(r) {\n    let n = 0;\n    const tmp = new Uint8Array(MIN_READ);\n    while (true) {\n      const shouldGrow = this.capacity - this.length < MIN_READ;\n      const buf = shouldGrow ? tmp : new Uint8Array(this._buf.buffer, this.length);\n      const nread = r.read(buf);\n      if (nread === null) {\n        return n;\n      }\n      if (shouldGrow) this.write(buf.subarray(0, nread));else this._reslice(this.length + nread);\n      n += nread;\n    }\n  }\n}\nvar Kind;\n(function (Kind) {\n  Kind[Kind[\"OK\"] = 0] = \"OK\";\n  Kind[Kind[\"ERR\"] = 1] = \"ERR\";\n  Kind[Kind[\"MSG\"] = 2] = \"MSG\";\n  Kind[Kind[\"INFO\"] = 3] = \"INFO\";\n  Kind[Kind[\"PING\"] = 4] = \"PING\";\n  Kind[Kind[\"PONG\"] = 5] = \"PONG\";\n})(Kind || (Kind = {}));\nfunction newMsgArg() {\n  const ma = {};\n  ma.sid = -1;\n  ma.hdr = -1;\n  ma.size = -1;\n  return ma;\n}\nconst ASCII_0 = 48;\nclass Parser {\n  dispatcher;\n  state;\n  as;\n  drop;\n  hdr;\n  ma;\n  argBuf;\n  msgBuf;\n  constructor(dispatcher) {\n    this.dispatcher = dispatcher;\n    this.state = State.OP_START;\n    this.as = 0;\n    this.drop = 0;\n    this.hdr = 0;\n  }\n  parse(buf) {\n    let i;\n    for (i = 0; i < buf.length; i++) {\n      const b = buf[i];\n      switch (this.state) {\n        case State.OP_START:\n          switch (b) {\n            case cc.M:\n            case cc.m:\n              this.state = State.OP_M;\n              this.hdr = -1;\n              this.ma = newMsgArg();\n              break;\n            case cc.H:\n            case cc.h:\n              this.state = State.OP_H;\n              this.hdr = 0;\n              this.ma = newMsgArg();\n              break;\n            case cc.P:\n            case cc.p:\n              this.state = State.OP_P;\n              break;\n            case cc.PLUS:\n              this.state = State.OP_PLUS;\n              break;\n            case cc.MINUS:\n              this.state = State.OP_MINUS;\n              break;\n            case cc.I:\n            case cc.i:\n              this.state = State.OP_I;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_H:\n          switch (b) {\n            case cc.M:\n            case cc.m:\n              this.state = State.OP_M;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_M:\n          switch (b) {\n            case cc.S:\n            case cc.s:\n              this.state = State.OP_MS;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_MS:\n          switch (b) {\n            case cc.G:\n            case cc.g:\n              this.state = State.OP_MSG;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_MSG:\n          switch (b) {\n            case cc.SPACE:\n            case cc.TAB:\n              this.state = State.OP_MSG_SPC;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_MSG_SPC:\n          switch (b) {\n            case cc.SPACE:\n            case cc.TAB:\n              continue;\n            default:\n              this.state = State.MSG_ARG;\n              this.as = i;\n          }\n          break;\n        case State.MSG_ARG:\n          switch (b) {\n            case cc.CR:\n              this.drop = 1;\n              break;\n            case cc.NL:\n              {\n                const arg = this.argBuf ? this.argBuf.bytes() : buf.subarray(this.as, i - this.drop);\n                this.processMsgArgs(arg);\n                this.drop = 0;\n                this.as = i + 1;\n                this.state = State.MSG_PAYLOAD;\n                i = this.as + this.ma.size - 1;\n                break;\n              }\n            default:\n              if (this.argBuf) {\n                this.argBuf.writeByte(b);\n              }\n          }\n          break;\n        case State.MSG_PAYLOAD:\n          if (this.msgBuf) {\n            if (this.msgBuf.length >= this.ma.size) {\n              const data = this.msgBuf.bytes({\n                copy: false\n              });\n              this.dispatcher.push({\n                kind: Kind.MSG,\n                msg: this.ma,\n                data: data\n              });\n              this.argBuf = undefined;\n              this.msgBuf = undefined;\n              this.state = State.MSG_END;\n            } else {\n              let toCopy = this.ma.size - this.msgBuf.length;\n              const avail = buf.length - i;\n              if (avail < toCopy) {\n                toCopy = avail;\n              }\n              if (toCopy > 0) {\n                this.msgBuf.write(buf.subarray(i, i + toCopy));\n                i = i + toCopy - 1;\n              } else {\n                this.msgBuf.writeByte(b);\n              }\n            }\n          } else if (i - this.as >= this.ma.size) {\n            this.dispatcher.push({\n              kind: Kind.MSG,\n              msg: this.ma,\n              data: buf.subarray(this.as, i)\n            });\n            this.argBuf = undefined;\n            this.msgBuf = undefined;\n            this.state = State.MSG_END;\n          }\n          break;\n        case State.MSG_END:\n          switch (b) {\n            case cc.NL:\n              this.drop = 0;\n              this.as = i + 1;\n              this.state = State.OP_START;\n              break;\n            default:\n              continue;\n          }\n          break;\n        case State.OP_PLUS:\n          switch (b) {\n            case cc.O:\n            case cc.o:\n              this.state = State.OP_PLUS_O;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_PLUS_O:\n          switch (b) {\n            case cc.K:\n            case cc.k:\n              this.state = State.OP_PLUS_OK;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_PLUS_OK:\n          switch (b) {\n            case cc.NL:\n              this.dispatcher.push({\n                kind: Kind.OK\n              });\n              this.drop = 0;\n              this.state = State.OP_START;\n              break;\n          }\n          break;\n        case State.OP_MINUS:\n          switch (b) {\n            case cc.E:\n            case cc.e:\n              this.state = State.OP_MINUS_E;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_MINUS_E:\n          switch (b) {\n            case cc.R:\n            case cc.r:\n              this.state = State.OP_MINUS_ER;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_MINUS_ER:\n          switch (b) {\n            case cc.R:\n            case cc.r:\n              this.state = State.OP_MINUS_ERR;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_MINUS_ERR:\n          switch (b) {\n            case cc.SPACE:\n            case cc.TAB:\n              this.state = State.OP_MINUS_ERR_SPC;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_MINUS_ERR_SPC:\n          switch (b) {\n            case cc.SPACE:\n            case cc.TAB:\n              continue;\n            default:\n              this.state = State.MINUS_ERR_ARG;\n              this.as = i;\n          }\n          break;\n        case State.MINUS_ERR_ARG:\n          switch (b) {\n            case cc.CR:\n              this.drop = 1;\n              break;\n            case cc.NL:\n              {\n                let arg;\n                if (this.argBuf) {\n                  arg = this.argBuf.bytes();\n                  this.argBuf = undefined;\n                } else {\n                  arg = buf.subarray(this.as, i - this.drop);\n                }\n                this.dispatcher.push({\n                  kind: Kind.ERR,\n                  data: arg\n                });\n                this.drop = 0;\n                this.as = i + 1;\n                this.state = State.OP_START;\n                break;\n              }\n            default:\n              if (this.argBuf) {\n                this.argBuf.write(Uint8Array.of(b));\n              }\n          }\n          break;\n        case State.OP_P:\n          switch (b) {\n            case cc.I:\n            case cc.i:\n              this.state = State.OP_PI;\n              break;\n            case cc.O:\n            case cc.o:\n              this.state = State.OP_PO;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_PO:\n          switch (b) {\n            case cc.N:\n            case cc.n:\n              this.state = State.OP_PON;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_PON:\n          switch (b) {\n            case cc.G:\n            case cc.g:\n              this.state = State.OP_PONG;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_PONG:\n          switch (b) {\n            case cc.NL:\n              this.dispatcher.push({\n                kind: Kind.PONG\n              });\n              this.drop = 0;\n              this.state = State.OP_START;\n              break;\n          }\n          break;\n        case State.OP_PI:\n          switch (b) {\n            case cc.N:\n            case cc.n:\n              this.state = State.OP_PIN;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_PIN:\n          switch (b) {\n            case cc.G:\n            case cc.g:\n              this.state = State.OP_PING;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_PING:\n          switch (b) {\n            case cc.NL:\n              this.dispatcher.push({\n                kind: Kind.PING\n              });\n              this.drop = 0;\n              this.state = State.OP_START;\n              break;\n          }\n          break;\n        case State.OP_I:\n          switch (b) {\n            case cc.N:\n            case cc.n:\n              this.state = State.OP_IN;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_IN:\n          switch (b) {\n            case cc.F:\n            case cc.f:\n              this.state = State.OP_INF;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_INF:\n          switch (b) {\n            case cc.O:\n            case cc.o:\n              this.state = State.OP_INFO;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_INFO:\n          switch (b) {\n            case cc.SPACE:\n            case cc.TAB:\n              this.state = State.OP_INFO_SPC;\n              break;\n            default:\n              throw this.fail(buf.subarray(i));\n          }\n          break;\n        case State.OP_INFO_SPC:\n          switch (b) {\n            case cc.SPACE:\n            case cc.TAB:\n              continue;\n            default:\n              this.state = State.INFO_ARG;\n              this.as = i;\n          }\n          break;\n        case State.INFO_ARG:\n          switch (b) {\n            case cc.CR:\n              this.drop = 1;\n              break;\n            case cc.NL:\n              {\n                let arg;\n                if (this.argBuf) {\n                  arg = this.argBuf.bytes();\n                  this.argBuf = undefined;\n                } else {\n                  arg = buf.subarray(this.as, i - this.drop);\n                }\n                this.dispatcher.push({\n                  kind: Kind.INFO,\n                  data: arg\n                });\n                this.drop = 0;\n                this.as = i + 1;\n                this.state = State.OP_START;\n                break;\n              }\n            default:\n              if (this.argBuf) {\n                this.argBuf.writeByte(b);\n              }\n          }\n          break;\n        default:\n          throw this.fail(buf.subarray(i));\n      }\n    }\n    if ((this.state === State.MSG_ARG || this.state === State.MINUS_ERR_ARG || this.state === State.INFO_ARG) && !this.argBuf) {\n      this.argBuf = new DenoBuffer(buf.subarray(this.as, i - this.drop));\n    }\n    if (this.state === State.MSG_PAYLOAD && !this.msgBuf) {\n      if (!this.argBuf) {\n        this.cloneMsgArg();\n      }\n      this.msgBuf = new DenoBuffer(buf.subarray(this.as));\n    }\n  }\n  cloneMsgArg() {\n    const s = this.ma.subject.length;\n    const r = this.ma.reply ? this.ma.reply.length : 0;\n    const buf = new Uint8Array(s + r);\n    buf.set(this.ma.subject);\n    if (this.ma.reply) {\n      buf.set(this.ma.reply, s);\n    }\n    this.argBuf = new DenoBuffer(buf);\n    this.ma.subject = buf.subarray(0, s);\n    if (this.ma.reply) {\n      this.ma.reply = buf.subarray(s);\n    }\n  }\n  processMsgArgs(arg) {\n    if (this.hdr >= 0) {\n      return this.processHeaderMsgArgs(arg);\n    }\n    const args = [];\n    let start = -1;\n    for (let i = 0; i < arg.length; i++) {\n      const b = arg[i];\n      switch (b) {\n        case cc.SPACE:\n        case cc.TAB:\n        case cc.CR:\n        case cc.NL:\n          if (start >= 0) {\n            args.push(arg.subarray(start, i));\n            start = -1;\n          }\n          break;\n        default:\n          if (start < 0) {\n            start = i;\n          }\n      }\n    }\n    if (start >= 0) {\n      args.push(arg.subarray(start));\n    }\n    switch (args.length) {\n      case 3:\n        this.ma.subject = args[0];\n        this.ma.sid = this.protoParseInt(args[1]);\n        this.ma.reply = undefined;\n        this.ma.size = this.protoParseInt(args[2]);\n        break;\n      case 4:\n        this.ma.subject = args[0];\n        this.ma.sid = this.protoParseInt(args[1]);\n        this.ma.reply = args[2];\n        this.ma.size = this.protoParseInt(args[3]);\n        break;\n      default:\n        throw this.fail(arg, \"processMsgArgs Parse Error\");\n    }\n    if (this.ma.sid < 0) {\n      throw this.fail(arg, \"processMsgArgs Bad or Missing Sid Error\");\n    }\n    if (this.ma.size < 0) {\n      throw this.fail(arg, \"processMsgArgs Bad or Missing Size Error\");\n    }\n  }\n  fail(data, label = \"\") {\n    if (!label) {\n      label = `parse error [${this.state}]`;\n    } else {\n      label = `${label} [${this.state}]`;\n    }\n    return new Error(`${label}: ${TD.decode(data)}`);\n  }\n  processHeaderMsgArgs(arg) {\n    const args = [];\n    let start = -1;\n    for (let i = 0; i < arg.length; i++) {\n      const b = arg[i];\n      switch (b) {\n        case cc.SPACE:\n        case cc.TAB:\n        case cc.CR:\n        case cc.NL:\n          if (start >= 0) {\n            args.push(arg.subarray(start, i));\n            start = -1;\n          }\n          break;\n        default:\n          if (start < 0) {\n            start = i;\n          }\n      }\n    }\n    if (start >= 0) {\n      args.push(arg.subarray(start));\n    }\n    switch (args.length) {\n      case 4:\n        this.ma.subject = args[0];\n        this.ma.sid = this.protoParseInt(args[1]);\n        this.ma.reply = undefined;\n        this.ma.hdr = this.protoParseInt(args[2]);\n        this.ma.size = this.protoParseInt(args[3]);\n        break;\n      case 5:\n        this.ma.subject = args[0];\n        this.ma.sid = this.protoParseInt(args[1]);\n        this.ma.reply = args[2];\n        this.ma.hdr = this.protoParseInt(args[3]);\n        this.ma.size = this.protoParseInt(args[4]);\n        break;\n      default:\n        throw this.fail(arg, \"processHeaderMsgArgs Parse Error\");\n    }\n    if (this.ma.sid < 0) {\n      throw this.fail(arg, \"processHeaderMsgArgs Bad or Missing Sid Error\");\n    }\n    if (this.ma.hdr < 0 || this.ma.hdr > this.ma.size) {\n      throw this.fail(arg, \"processHeaderMsgArgs Bad or Missing Header Size Error\");\n    }\n    if (this.ma.size < 0) {\n      throw this.fail(arg, \"processHeaderMsgArgs Bad or Missing Size Error\");\n    }\n  }\n  protoParseInt(a) {\n    if (a.length === 0) {\n      return -1;\n    }\n    let n = 0;\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] < 48 || a[i] > 57) {\n        return -1;\n      }\n      n = n * 10 + (a[i] - ASCII_0);\n    }\n    return n;\n  }\n}\nvar State;\n(function (State) {\n  State[State[\"OP_START\"] = 0] = \"OP_START\";\n  State[State[\"OP_PLUS\"] = 1] = \"OP_PLUS\";\n  State[State[\"OP_PLUS_O\"] = 2] = \"OP_PLUS_O\";\n  State[State[\"OP_PLUS_OK\"] = 3] = \"OP_PLUS_OK\";\n  State[State[\"OP_MINUS\"] = 4] = \"OP_MINUS\";\n  State[State[\"OP_MINUS_E\"] = 5] = \"OP_MINUS_E\";\n  State[State[\"OP_MINUS_ER\"] = 6] = \"OP_MINUS_ER\";\n  State[State[\"OP_MINUS_ERR\"] = 7] = \"OP_MINUS_ERR\";\n  State[State[\"OP_MINUS_ERR_SPC\"] = 8] = \"OP_MINUS_ERR_SPC\";\n  State[State[\"MINUS_ERR_ARG\"] = 9] = \"MINUS_ERR_ARG\";\n  State[State[\"OP_M\"] = 10] = \"OP_M\";\n  State[State[\"OP_MS\"] = 11] = \"OP_MS\";\n  State[State[\"OP_MSG\"] = 12] = \"OP_MSG\";\n  State[State[\"OP_MSG_SPC\"] = 13] = \"OP_MSG_SPC\";\n  State[State[\"MSG_ARG\"] = 14] = \"MSG_ARG\";\n  State[State[\"MSG_PAYLOAD\"] = 15] = \"MSG_PAYLOAD\";\n  State[State[\"MSG_END\"] = 16] = \"MSG_END\";\n  State[State[\"OP_H\"] = 17] = \"OP_H\";\n  State[State[\"OP_P\"] = 18] = \"OP_P\";\n  State[State[\"OP_PI\"] = 19] = \"OP_PI\";\n  State[State[\"OP_PIN\"] = 20] = \"OP_PIN\";\n  State[State[\"OP_PING\"] = 21] = \"OP_PING\";\n  State[State[\"OP_PO\"] = 22] = \"OP_PO\";\n  State[State[\"OP_PON\"] = 23] = \"OP_PON\";\n  State[State[\"OP_PONG\"] = 24] = \"OP_PONG\";\n  State[State[\"OP_I\"] = 25] = \"OP_I\";\n  State[State[\"OP_IN\"] = 26] = \"OP_IN\";\n  State[State[\"OP_INF\"] = 27] = \"OP_INF\";\n  State[State[\"OP_INFO\"] = 28] = \"OP_INFO\";\n  State[State[\"OP_INFO_SPC\"] = 29] = \"OP_INFO_SPC\";\n  State[State[\"INFO_ARG\"] = 30] = \"INFO_ARG\";\n})(State || (State = {}));\nvar cc;\n(function (cc) {\n  cc[cc[\"CR\"] = \"\\r\".charCodeAt(0)] = \"CR\";\n  cc[cc[\"E\"] = \"E\".charCodeAt(0)] = \"E\";\n  cc[cc[\"e\"] = \"e\".charCodeAt(0)] = \"e\";\n  cc[cc[\"F\"] = \"F\".charCodeAt(0)] = \"F\";\n  cc[cc[\"f\"] = \"f\".charCodeAt(0)] = \"f\";\n  cc[cc[\"G\"] = \"G\".charCodeAt(0)] = \"G\";\n  cc[cc[\"g\"] = \"g\".charCodeAt(0)] = \"g\";\n  cc[cc[\"H\"] = \"H\".charCodeAt(0)] = \"H\";\n  cc[cc[\"h\"] = \"h\".charCodeAt(0)] = \"h\";\n  cc[cc[\"I\"] = \"I\".charCodeAt(0)] = \"I\";\n  cc[cc[\"i\"] = \"i\".charCodeAt(0)] = \"i\";\n  cc[cc[\"K\"] = \"K\".charCodeAt(0)] = \"K\";\n  cc[cc[\"k\"] = \"k\".charCodeAt(0)] = \"k\";\n  cc[cc[\"M\"] = \"M\".charCodeAt(0)] = \"M\";\n  cc[cc[\"m\"] = \"m\".charCodeAt(0)] = \"m\";\n  cc[cc[\"MINUS\"] = \"-\".charCodeAt(0)] = \"MINUS\";\n  cc[cc[\"N\"] = \"N\".charCodeAt(0)] = \"N\";\n  cc[cc[\"n\"] = \"n\".charCodeAt(0)] = \"n\";\n  cc[cc[\"NL\"] = \"\\n\".charCodeAt(0)] = \"NL\";\n  cc[cc[\"O\"] = \"O\".charCodeAt(0)] = \"O\";\n  cc[cc[\"o\"] = \"o\".charCodeAt(0)] = \"o\";\n  cc[cc[\"P\"] = \"P\".charCodeAt(0)] = \"P\";\n  cc[cc[\"p\"] = \"p\".charCodeAt(0)] = \"p\";\n  cc[cc[\"PLUS\"] = \"+\".charCodeAt(0)] = \"PLUS\";\n  cc[cc[\"R\"] = \"R\".charCodeAt(0)] = \"R\";\n  cc[cc[\"r\"] = \"r\".charCodeAt(0)] = \"r\";\n  cc[cc[\"S\"] = \"S\".charCodeAt(0)] = \"S\";\n  cc[cc[\"s\"] = \"s\".charCodeAt(0)] = \"s\";\n  cc[cc[\"SPACE\"] = \" \".charCodeAt(0)] = \"SPACE\";\n  cc[cc[\"TAB\"] = \"\\t\".charCodeAt(0)] = \"TAB\";\n})(cc || (cc = {}));\nfunction parseSemVer(s = \"\") {\n  const m = s.match(/(\\d+).(\\d+).(\\d+)/);\n  if (m) {\n    return {\n      major: parseInt(m[1]),\n      minor: parseInt(m[2]),\n      micro: parseInt(m[3])\n    };\n  }\n  throw new Error(`'${s}' is not a semver value`);\n}\nfunction compare(a, b) {\n  if (a.major < b.major) return -1;\n  if (a.major > b.major) return 1;\n  if (a.minor < b.minor) return -1;\n  if (a.minor > b.minor) return 1;\n  if (a.micro < b.micro) return -1;\n  if (a.micro > b.micro) return 1;\n  return 0;\n}\nvar Feature;\n(function (Feature) {\n  Feature[\"JS_KV\"] = \"js_kv\";\n  Feature[\"JS_OBJECTSTORE\"] = \"js_objectstore\";\n  Feature[\"JS_PULL_MAX_BYTES\"] = \"js_pull_max_bytes\";\n  Feature[\"JS_NEW_CONSUMER_CREATE_API\"] = \"js_new_consumer_create\";\n  Feature[\"JS_ALLOW_DIRECT\"] = \"js_allow_direct\";\n  Feature[\"JS_MULTIPLE_CONSUMER_FILTER\"] = \"js_multiple_consumer_filter\";\n  Feature[\"JS_SIMPLIFICATION\"] = \"js_simplification\";\n  Feature[\"JS_STREAM_CONSUMER_METADATA\"] = \"js_stream_consumer_metadata\";\n  Feature[\"JS_CONSUMER_FILTER_SUBJECTS\"] = \"js_consumer_filter_subjects\";\n  Feature[\"JS_STREAM_FIRST_SEQ\"] = \"js_stream_first_seq\";\n  Feature[\"JS_STREAM_SUBJECT_TRANSFORM\"] = \"js_stream_subject_transform\";\n  Feature[\"JS_STREAM_SOURCE_SUBJECT_TRANSFORM\"] = \"js_stream_source_subject_transform\";\n  Feature[\"JS_STREAM_COMPRESSION\"] = \"js_stream_compression\";\n  Feature[\"JS_DEFAULT_CONSUMER_LIMITS\"] = \"js_default_consumer_limits\";\n})(Feature || (Feature = {}));\nclass Features {\n  server;\n  features;\n  disabled;\n  constructor(v) {\n    this.features = new Map();\n    this.disabled = [];\n    this.update(v);\n  }\n  resetDisabled() {\n    this.disabled.length = 0;\n    this.update(this.server);\n  }\n  disable(f) {\n    this.disabled.push(f);\n    this.update(this.server);\n  }\n  isDisabled(f) {\n    return this.disabled.indexOf(f) !== -1;\n  }\n  update(v) {\n    if (typeof v === \"string\") {\n      v = parseSemVer(v);\n    }\n    this.server = v;\n    this.set(Feature.JS_KV, \"2.6.2\");\n    this.set(Feature.JS_OBJECTSTORE, \"2.6.3\");\n    this.set(Feature.JS_PULL_MAX_BYTES, \"2.8.3\");\n    this.set(Feature.JS_NEW_CONSUMER_CREATE_API, \"2.9.0\");\n    this.set(Feature.JS_ALLOW_DIRECT, \"2.9.0\");\n    this.set(Feature.JS_MULTIPLE_CONSUMER_FILTER, \"2.10.0\");\n    this.set(Feature.JS_SIMPLIFICATION, \"2.9.4\");\n    this.set(Feature.JS_STREAM_CONSUMER_METADATA, \"2.10.0\");\n    this.set(Feature.JS_CONSUMER_FILTER_SUBJECTS, \"2.10.0\");\n    this.set(Feature.JS_STREAM_FIRST_SEQ, \"2.10.0\");\n    this.set(Feature.JS_STREAM_SUBJECT_TRANSFORM, \"2.10.0\");\n    this.set(Feature.JS_STREAM_SOURCE_SUBJECT_TRANSFORM, \"2.10.0\");\n    this.set(Feature.JS_STREAM_COMPRESSION, \"2.10.0\");\n    this.set(Feature.JS_DEFAULT_CONSUMER_LIMITS, \"2.10.0\");\n    this.disabled.forEach(f => {\n      this.features.delete(f);\n    });\n  }\n  set(f, requires) {\n    this.features.set(f, {\n      min: requires,\n      ok: compare(this.server, parseSemVer(requires)) >= 0\n    });\n  }\n  get(f) {\n    return this.features.get(f) || {\n      min: \"unknown\",\n      ok: false\n    };\n  }\n  supports(f) {\n    return this.get(f)?.ok || false;\n  }\n  require(v) {\n    if (typeof v === \"string\") {\n      v = parseSemVer(v);\n    }\n    return compare(this.server, v) >= 0;\n  }\n}\n(function (nacl) {\n  'use strict';\n\n  var u64 = function (h, l) {\n    this.hi = h | 0 >>> 0;\n    this.lo = l | 0 >>> 0;\n  };\n  var gf = function (init) {\n    var i,\n      r = new Float64Array(16);\n    if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n    return r;\n  };\n  var randombytes = function () {\n    throw new Error('no PRNG');\n  };\n  var _0 = new Uint8Array(16);\n  var _9 = new Uint8Array(32);\n  _9[0] = 9;\n  var gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n  function L32(x, c) {\n    return x << c | x >>> 32 - c;\n  }\n  function ld32(x, i) {\n    var u = x[i + 3] & 0xff;\n    u = u << 8 | x[i + 2] & 0xff;\n    u = u << 8 | x[i + 1] & 0xff;\n    return u << 8 | x[i + 0] & 0xff;\n  }\n  function dl64(x, i) {\n    var h = x[i] << 24 | x[i + 1] << 16 | x[i + 2] << 8 | x[i + 3];\n    var l = x[i + 4] << 24 | x[i + 5] << 16 | x[i + 6] << 8 | x[i + 7];\n    return new u64(h, l);\n  }\n  function st32(x, j, u) {\n    var i;\n    for (i = 0; i < 4; i++) {\n      x[j + i] = u & 255;\n      u >>>= 8;\n    }\n  }\n  function ts64(x, i, u) {\n    x[i] = u.hi >> 24 & 0xff;\n    x[i + 1] = u.hi >> 16 & 0xff;\n    x[i + 2] = u.hi >> 8 & 0xff;\n    x[i + 3] = u.hi & 0xff;\n    x[i + 4] = u.lo >> 24 & 0xff;\n    x[i + 5] = u.lo >> 16 & 0xff;\n    x[i + 6] = u.lo >> 8 & 0xff;\n    x[i + 7] = u.lo & 0xff;\n  }\n  function vn(x, xi, y, yi, n) {\n    var i,\n      d = 0;\n    for (i = 0; i < n; i++) d |= x[xi + i] ^ y[yi + i];\n    return (1 & d - 1 >>> 8) - 1;\n  }\n  function crypto_verify_16(x, xi, y, yi) {\n    return vn(x, xi, y, yi, 16);\n  }\n  function crypto_verify_32(x, xi, y, yi) {\n    return vn(x, xi, y, yi, 32);\n  }\n  function core(out, inp, k, c, h) {\n    var w = new Uint32Array(16),\n      x = new Uint32Array(16),\n      y = new Uint32Array(16),\n      t = new Uint32Array(4);\n    var i, j, m;\n    for (i = 0; i < 4; i++) {\n      x[5 * i] = ld32(c, 4 * i);\n      x[1 + i] = ld32(k, 4 * i);\n      x[6 + i] = ld32(inp, 4 * i);\n      x[11 + i] = ld32(k, 16 + 4 * i);\n    }\n    for (i = 0; i < 16; i++) y[i] = x[i];\n    for (i = 0; i < 20; i++) {\n      for (j = 0; j < 4; j++) {\n        for (m = 0; m < 4; m++) t[m] = x[(5 * j + 4 * m) % 16];\n        t[1] ^= L32(t[0] + t[3] | 0, 7);\n        t[2] ^= L32(t[1] + t[0] | 0, 9);\n        t[3] ^= L32(t[2] + t[1] | 0, 13);\n        t[0] ^= L32(t[3] + t[2] | 0, 18);\n        for (m = 0; m < 4; m++) w[4 * j + (j + m) % 4] = t[m];\n      }\n      for (m = 0; m < 16; m++) x[m] = w[m];\n    }\n    if (h) {\n      for (i = 0; i < 16; i++) x[i] = x[i] + y[i] | 0;\n      for (i = 0; i < 4; i++) {\n        x[5 * i] = x[5 * i] - ld32(c, 4 * i) | 0;\n        x[6 + i] = x[6 + i] - ld32(inp, 4 * i) | 0;\n      }\n      for (i = 0; i < 4; i++) {\n        st32(out, 4 * i, x[5 * i]);\n        st32(out, 16 + 4 * i, x[6 + i]);\n      }\n    } else {\n      for (i = 0; i < 16; i++) st32(out, 4 * i, x[i] + y[i] | 0);\n    }\n  }\n  function crypto_core_salsa20(out, inp, k, c) {\n    core(out, inp, k, c, false);\n    return 0;\n  }\n  function crypto_core_hsalsa20(out, inp, k, c) {\n    core(out, inp, k, c, true);\n    return 0;\n  }\n  var sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n  function crypto_stream_salsa20_xor(c, cpos, m, mpos, b, n, k) {\n    var z = new Uint8Array(16),\n      x = new Uint8Array(64);\n    var u, i;\n    if (!b) return 0;\n    for (i = 0; i < 16; i++) z[i] = 0;\n    for (i = 0; i < 8; i++) z[i] = n[i];\n    while (b >= 64) {\n      crypto_core_salsa20(x, z, k, sigma);\n      for (i = 0; i < 64; i++) c[cpos + i] = (m ? m[mpos + i] : 0) ^ x[i];\n      u = 1;\n      for (i = 8; i < 16; i++) {\n        u = u + (z[i] & 0xff) | 0;\n        z[i] = u & 0xff;\n        u >>>= 8;\n      }\n      b -= 64;\n      cpos += 64;\n      if (m) mpos += 64;\n    }\n    if (b > 0) {\n      crypto_core_salsa20(x, z, k, sigma);\n      for (i = 0; i < b; i++) c[cpos + i] = (m ? m[mpos + i] : 0) ^ x[i];\n    }\n    return 0;\n  }\n  function crypto_stream_salsa20(c, cpos, d, n, k) {\n    return crypto_stream_salsa20_xor(c, cpos, null, 0, d, n, k);\n  }\n  function crypto_stream(c, cpos, d, n, k) {\n    var s = new Uint8Array(32);\n    crypto_core_hsalsa20(s, n, k, sigma);\n    return crypto_stream_salsa20(c, cpos, d, n.subarray(16), s);\n  }\n  function crypto_stream_xor(c, cpos, m, mpos, d, n, k) {\n    var s = new Uint8Array(32);\n    crypto_core_hsalsa20(s, n, k, sigma);\n    return crypto_stream_salsa20_xor(c, cpos, m, mpos, d, n.subarray(16), s);\n  }\n  function add1305(h, c) {\n    var j,\n      u = 0;\n    for (j = 0; j < 17; j++) {\n      u = u + (h[j] + c[j] | 0) | 0;\n      h[j] = u & 255;\n      u >>>= 8;\n    }\n  }\n  var minusp = new Uint32Array([5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252]);\n  function crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n    var s, i, j, u;\n    var x = new Uint32Array(17),\n      r = new Uint32Array(17),\n      h = new Uint32Array(17),\n      c = new Uint32Array(17),\n      g = new Uint32Array(17);\n    for (j = 0; j < 17; j++) r[j] = h[j] = 0;\n    for (j = 0; j < 16; j++) r[j] = k[j];\n    r[3] &= 15;\n    r[4] &= 252;\n    r[7] &= 15;\n    r[8] &= 252;\n    r[11] &= 15;\n    r[12] &= 252;\n    r[15] &= 15;\n    while (n > 0) {\n      for (j = 0; j < 17; j++) c[j] = 0;\n      for (j = 0; j < 16 && j < n; ++j) c[j] = m[mpos + j];\n      c[j] = 1;\n      mpos += j;\n      n -= j;\n      add1305(h, c);\n      for (i = 0; i < 17; i++) {\n        x[i] = 0;\n        for (j = 0; j < 17; j++) x[i] = x[i] + h[j] * (j <= i ? r[i - j] : 320 * r[i + 17 - j] | 0) | 0 | 0;\n      }\n      for (i = 0; i < 17; i++) h[i] = x[i];\n      u = 0;\n      for (j = 0; j < 16; j++) {\n        u = u + h[j] | 0;\n        h[j] = u & 255;\n        u >>>= 8;\n      }\n      u = u + h[16] | 0;\n      h[16] = u & 3;\n      u = 5 * (u >>> 2) | 0;\n      for (j = 0; j < 16; j++) {\n        u = u + h[j] | 0;\n        h[j] = u & 255;\n        u >>>= 8;\n      }\n      u = u + h[16] | 0;\n      h[16] = u;\n    }\n    for (j = 0; j < 17; j++) g[j] = h[j];\n    add1305(h, minusp);\n    s = -(h[16] >>> 7) | 0;\n    for (j = 0; j < 17; j++) h[j] ^= s & (g[j] ^ h[j]);\n    for (j = 0; j < 16; j++) c[j] = k[j + 16];\n    c[16] = 0;\n    add1305(h, c);\n    for (j = 0; j < 16; j++) out[outpos + j] = h[j];\n    return 0;\n  }\n  function crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n    var x = new Uint8Array(16);\n    crypto_onetimeauth(x, 0, m, mpos, n, k);\n    return crypto_verify_16(h, hpos, x, 0);\n  }\n  function crypto_secretbox(c, m, d, n, k) {\n    var i;\n    if (d < 32) return -1;\n    crypto_stream_xor(c, 0, m, 0, d, n, k);\n    crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n    for (i = 0; i < 16; i++) c[i] = 0;\n    return 0;\n  }\n  function crypto_secretbox_open(m, c, d, n, k) {\n    var i;\n    var x = new Uint8Array(32);\n    if (d < 32) return -1;\n    crypto_stream(x, 0, 32, n, k);\n    if (crypto_onetimeauth_verify(c, 16, c, 32, d - 32, x) !== 0) return -1;\n    crypto_stream_xor(m, 0, c, 0, d, n, k);\n    for (i = 0; i < 32; i++) m[i] = 0;\n    return 0;\n  }\n  function set25519(r, a) {\n    var i;\n    for (i = 0; i < 16; i++) r[i] = a[i] | 0;\n  }\n  function car25519(o) {\n    var c;\n    var i;\n    for (i = 0; i < 16; i++) {\n      o[i] += 65536;\n      c = Math.floor(o[i] / 65536);\n      o[(i + 1) * (i < 15 ? 1 : 0)] += c - 1 + 37 * (c - 1) * (i === 15 ? 1 : 0);\n      o[i] -= c * 65536;\n    }\n  }\n  function sel25519(p, q, b) {\n    var t,\n      c = ~(b - 1);\n    for (var i = 0; i < 16; i++) {\n      t = c & (p[i] ^ q[i]);\n      p[i] ^= t;\n      q[i] ^= t;\n    }\n  }\n  function pack25519(o, n) {\n    var i, j, b;\n    var m = gf(),\n      t = gf();\n    for (i = 0; i < 16; i++) t[i] = n[i];\n    car25519(t);\n    car25519(t);\n    car25519(t);\n    for (j = 0; j < 2; j++) {\n      m[0] = t[0] - 0xffed;\n      for (i = 1; i < 15; i++) {\n        m[i] = t[i] - 0xffff - (m[i - 1] >> 16 & 1);\n        m[i - 1] &= 0xffff;\n      }\n      m[15] = t[15] - 0x7fff - (m[14] >> 16 & 1);\n      b = m[15] >> 16 & 1;\n      m[14] &= 0xffff;\n      sel25519(t, m, 1 - b);\n    }\n    for (i = 0; i < 16; i++) {\n      o[2 * i] = t[i] & 0xff;\n      o[2 * i + 1] = t[i] >> 8;\n    }\n  }\n  function neq25519(a, b) {\n    var c = new Uint8Array(32),\n      d = new Uint8Array(32);\n    pack25519(c, a);\n    pack25519(d, b);\n    return crypto_verify_32(c, 0, d, 0);\n  }\n  function par25519(a) {\n    var d = new Uint8Array(32);\n    pack25519(d, a);\n    return d[0] & 1;\n  }\n  function unpack25519(o, n) {\n    var i;\n    for (i = 0; i < 16; i++) o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n    o[15] &= 0x7fff;\n  }\n  function A(o, a, b) {\n    var i;\n    for (i = 0; i < 16; i++) o[i] = a[i] + b[i] | 0;\n  }\n  function Z(o, a, b) {\n    var i;\n    for (i = 0; i < 16; i++) o[i] = a[i] - b[i] | 0;\n  }\n  function M(o, a, b) {\n    var i,\n      j,\n      t = new Float64Array(31);\n    for (i = 0; i < 31; i++) t[i] = 0;\n    for (i = 0; i < 16; i++) {\n      for (j = 0; j < 16; j++) {\n        t[i + j] += a[i] * b[j];\n      }\n    }\n    for (i = 0; i < 15; i++) {\n      t[i] += 38 * t[i + 16];\n    }\n    for (i = 0; i < 16; i++) o[i] = t[i];\n    car25519(o);\n    car25519(o);\n  }\n  function S(o, a) {\n    M(o, a, a);\n  }\n  function inv25519(o, i) {\n    var c = gf();\n    var a;\n    for (a = 0; a < 16; a++) c[a] = i[a];\n    for (a = 253; a >= 0; a--) {\n      S(c, c);\n      if (a !== 2 && a !== 4) M(c, c, i);\n    }\n    for (a = 0; a < 16; a++) o[a] = c[a];\n  }\n  function pow2523(o, i) {\n    var c = gf();\n    var a;\n    for (a = 0; a < 16; a++) c[a] = i[a];\n    for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if (a !== 1) M(c, c, i);\n    }\n    for (a = 0; a < 16; a++) o[a] = c[a];\n  }\n  function crypto_scalarmult(q, n, p) {\n    var z = new Uint8Array(32);\n    var x = new Float64Array(80),\n      r,\n      i;\n    var a = gf(),\n      b = gf(),\n      c = gf(),\n      d = gf(),\n      e = gf(),\n      f = gf();\n    for (i = 0; i < 31; i++) z[i] = n[i];\n    z[31] = n[31] & 127 | 64;\n    z[0] &= 248;\n    unpack25519(x, p);\n    for (i = 0; i < 16; i++) {\n      b[i] = x[i];\n      d[i] = a[i] = c[i] = 0;\n    }\n    a[0] = d[0] = 1;\n    for (i = 254; i >= 0; --i) {\n      r = z[i >>> 3] >>> (i & 7) & 1;\n      sel25519(a, b, r);\n      sel25519(c, d, r);\n      A(e, a, c);\n      Z(a, a, c);\n      A(c, b, d);\n      Z(b, b, d);\n      S(d, e);\n      S(f, a);\n      M(a, c, a);\n      M(c, b, e);\n      A(e, a, c);\n      Z(a, a, c);\n      S(b, a);\n      Z(c, d, f);\n      M(a, c, _121665);\n      A(a, a, d);\n      M(c, c, a);\n      M(a, d, f);\n      M(d, b, x);\n      S(b, e);\n      sel25519(a, b, r);\n      sel25519(c, d, r);\n    }\n    for (i = 0; i < 16; i++) {\n      x[i + 16] = a[i];\n      x[i + 32] = c[i];\n      x[i + 48] = b[i];\n      x[i + 64] = d[i];\n    }\n    var x32 = x.subarray(32);\n    var x16 = x.subarray(16);\n    inv25519(x32, x32);\n    M(x16, x16, x32);\n    pack25519(q, x16);\n    return 0;\n  }\n  function crypto_scalarmult_base(q, n) {\n    return crypto_scalarmult(q, n, _9);\n  }\n  function crypto_box_keypair(y, x) {\n    randombytes(x, 32);\n    return crypto_scalarmult_base(y, x);\n  }\n  function crypto_box_beforenm(k, y, x) {\n    var s = new Uint8Array(32);\n    crypto_scalarmult(s, x, y);\n    return crypto_core_hsalsa20(k, _0, s, sigma);\n  }\n  var crypto_box_afternm = crypto_secretbox;\n  var crypto_box_open_afternm = crypto_secretbox_open;\n  function crypto_box(c, m, d, n, y, x) {\n    var k = new Uint8Array(32);\n    crypto_box_beforenm(k, y, x);\n    return crypto_box_afternm(c, m, d, n, k);\n  }\n  function crypto_box_open(m, c, d, n, y, x) {\n    var k = new Uint8Array(32);\n    crypto_box_beforenm(k, y, x);\n    return crypto_box_open_afternm(m, c, d, n, k);\n  }\n  function add64() {\n    var a = 0,\n      b = 0,\n      c = 0,\n      d = 0,\n      m16 = 65535,\n      l,\n      h,\n      i;\n    for (i = 0; i < arguments.length; i++) {\n      l = arguments[i].lo;\n      h = arguments[i].hi;\n      a += l & m16;\n      b += l >>> 16;\n      c += h & m16;\n      d += h >>> 16;\n    }\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n    return new u64(c & m16 | d << 16, a & m16 | b << 16);\n  }\n  function shr64(x, c) {\n    return new u64(x.hi >>> c, x.lo >>> c | x.hi << 32 - c);\n  }\n  function xor64() {\n    var l = 0,\n      h = 0,\n      i;\n    for (i = 0; i < arguments.length; i++) {\n      l ^= arguments[i].lo;\n      h ^= arguments[i].hi;\n    }\n    return new u64(h, l);\n  }\n  function R(x, c) {\n    var h,\n      l,\n      c1 = 32 - c;\n    if (c < 32) {\n      h = x.hi >>> c | x.lo << c1;\n      l = x.lo >>> c | x.hi << c1;\n    } else if (c < 64) {\n      h = x.lo >>> c | x.hi << c1;\n      l = x.hi >>> c | x.lo << c1;\n    }\n    return new u64(h, l);\n  }\n  function Ch(x, y, z) {\n    var h = x.hi & y.hi ^ ~x.hi & z.hi,\n      l = x.lo & y.lo ^ ~x.lo & z.lo;\n    return new u64(h, l);\n  }\n  function Maj(x, y, z) {\n    var h = x.hi & y.hi ^ x.hi & z.hi ^ y.hi & z.hi,\n      l = x.lo & y.lo ^ x.lo & z.lo ^ y.lo & z.lo;\n    return new u64(h, l);\n  }\n  function Sigma0(x) {\n    return xor64(R(x, 28), R(x, 34), R(x, 39));\n  }\n  function Sigma1(x) {\n    return xor64(R(x, 14), R(x, 18), R(x, 41));\n  }\n  function sigma0(x) {\n    return xor64(R(x, 1), R(x, 8), shr64(x, 7));\n  }\n  function sigma1(x) {\n    return xor64(R(x, 19), R(x, 61), shr64(x, 6));\n  }\n  var K = [new u64(0x428a2f98, 0xd728ae22), new u64(0x71374491, 0x23ef65cd), new u64(0xb5c0fbcf, 0xec4d3b2f), new u64(0xe9b5dba5, 0x8189dbbc), new u64(0x3956c25b, 0xf348b538), new u64(0x59f111f1, 0xb605d019), new u64(0x923f82a4, 0xaf194f9b), new u64(0xab1c5ed5, 0xda6d8118), new u64(0xd807aa98, 0xa3030242), new u64(0x12835b01, 0x45706fbe), new u64(0x243185be, 0x4ee4b28c), new u64(0x550c7dc3, 0xd5ffb4e2), new u64(0x72be5d74, 0xf27b896f), new u64(0x80deb1fe, 0x3b1696b1), new u64(0x9bdc06a7, 0x25c71235), new u64(0xc19bf174, 0xcf692694), new u64(0xe49b69c1, 0x9ef14ad2), new u64(0xefbe4786, 0x384f25e3), new u64(0x0fc19dc6, 0x8b8cd5b5), new u64(0x240ca1cc, 0x77ac9c65), new u64(0x2de92c6f, 0x592b0275), new u64(0x4a7484aa, 0x6ea6e483), new u64(0x5cb0a9dc, 0xbd41fbd4), new u64(0x76f988da, 0x831153b5), new u64(0x983e5152, 0xee66dfab), new u64(0xa831c66d, 0x2db43210), new u64(0xb00327c8, 0x98fb213f), new u64(0xbf597fc7, 0xbeef0ee4), new u64(0xc6e00bf3, 0x3da88fc2), new u64(0xd5a79147, 0x930aa725), new u64(0x06ca6351, 0xe003826f), new u64(0x14292967, 0x0a0e6e70), new u64(0x27b70a85, 0x46d22ffc), new u64(0x2e1b2138, 0x5c26c926), new u64(0x4d2c6dfc, 0x5ac42aed), new u64(0x53380d13, 0x9d95b3df), new u64(0x650a7354, 0x8baf63de), new u64(0x766a0abb, 0x3c77b2a8), new u64(0x81c2c92e, 0x47edaee6), new u64(0x92722c85, 0x1482353b), new u64(0xa2bfe8a1, 0x4cf10364), new u64(0xa81a664b, 0xbc423001), new u64(0xc24b8b70, 0xd0f89791), new u64(0xc76c51a3, 0x0654be30), new u64(0xd192e819, 0xd6ef5218), new u64(0xd6990624, 0x5565a910), new u64(0xf40e3585, 0x5771202a), new u64(0x106aa070, 0x32bbd1b8), new u64(0x19a4c116, 0xb8d2d0c8), new u64(0x1e376c08, 0x5141ab53), new u64(0x2748774c, 0xdf8eeb99), new u64(0x34b0bcb5, 0xe19b48a8), new u64(0x391c0cb3, 0xc5c95a63), new u64(0x4ed8aa4a, 0xe3418acb), new u64(0x5b9cca4f, 0x7763e373), new u64(0x682e6ff3, 0xd6b2b8a3), new u64(0x748f82ee, 0x5defb2fc), new u64(0x78a5636f, 0x43172f60), new u64(0x84c87814, 0xa1f0ab72), new u64(0x8cc70208, 0x1a6439ec), new u64(0x90befffa, 0x23631e28), new u64(0xa4506ceb, 0xde82bde9), new u64(0xbef9a3f7, 0xb2c67915), new u64(0xc67178f2, 0xe372532b), new u64(0xca273ece, 0xea26619c), new u64(0xd186b8c7, 0x21c0c207), new u64(0xeada7dd6, 0xcde0eb1e), new u64(0xf57d4f7f, 0xee6ed178), new u64(0x06f067aa, 0x72176fba), new u64(0x0a637dc5, 0xa2c898a6), new u64(0x113f9804, 0xbef90dae), new u64(0x1b710b35, 0x131c471b), new u64(0x28db77f5, 0x23047d84), new u64(0x32caab7b, 0x40c72493), new u64(0x3c9ebe0a, 0x15c9bebc), new u64(0x431d67c4, 0x9c100d4c), new u64(0x4cc5d4be, 0xcb3e42b6), new u64(0x597f299c, 0xfc657e2a), new u64(0x5fcb6fab, 0x3ad6faec), new u64(0x6c44198c, 0x4a475817)];\n  function crypto_hashblocks(x, m, n) {\n    var z = [],\n      b = [],\n      a = [],\n      w = [],\n      t,\n      i,\n      j;\n    for (i = 0; i < 8; i++) z[i] = a[i] = dl64(x, 8 * i);\n    var pos = 0;\n    while (n >= 128) {\n      for (i = 0; i < 16; i++) w[i] = dl64(m, 8 * i + pos);\n      for (i = 0; i < 80; i++) {\n        for (j = 0; j < 8; j++) b[j] = a[j];\n        t = add64(a[7], Sigma1(a[4]), Ch(a[4], a[5], a[6]), K[i], w[i % 16]);\n        b[7] = add64(t, Sigma0(a[0]), Maj(a[0], a[1], a[2]));\n        b[3] = add64(b[3], t);\n        for (j = 0; j < 8; j++) a[(j + 1) % 8] = b[j];\n        if (i % 16 === 15) {\n          for (j = 0; j < 16; j++) {\n            w[j] = add64(w[j], w[(j + 9) % 16], sigma0(w[(j + 1) % 16]), sigma1(w[(j + 14) % 16]));\n          }\n        }\n      }\n      for (i = 0; i < 8; i++) {\n        a[i] = add64(a[i], z[i]);\n        z[i] = a[i];\n      }\n      pos += 128;\n      n -= 128;\n    }\n    for (i = 0; i < 8; i++) ts64(x, 8 * i, z[i]);\n    return n;\n  }\n  var iv = new Uint8Array([0x6a, 0x09, 0xe6, 0x67, 0xf3, 0xbc, 0xc9, 0x08, 0xbb, 0x67, 0xae, 0x85, 0x84, 0xca, 0xa7, 0x3b, 0x3c, 0x6e, 0xf3, 0x72, 0xfe, 0x94, 0xf8, 0x2b, 0xa5, 0x4f, 0xf5, 0x3a, 0x5f, 0x1d, 0x36, 0xf1, 0x51, 0x0e, 0x52, 0x7f, 0xad, 0xe6, 0x82, 0xd1, 0x9b, 0x05, 0x68, 0x8c, 0x2b, 0x3e, 0x6c, 0x1f, 0x1f, 0x83, 0xd9, 0xab, 0xfb, 0x41, 0xbd, 0x6b, 0x5b, 0xe0, 0xcd, 0x19, 0x13, 0x7e, 0x21, 0x79]);\n  function crypto_hash(out, m, n) {\n    var h = new Uint8Array(64),\n      x = new Uint8Array(256);\n    var i,\n      b = n;\n    for (i = 0; i < 64; i++) h[i] = iv[i];\n    crypto_hashblocks(h, m, n);\n    n %= 128;\n    for (i = 0; i < 256; i++) x[i] = 0;\n    for (i = 0; i < n; i++) x[i] = m[b - n + i];\n    x[n] = 128;\n    n = 256 - 128 * (n < 112 ? 1 : 0);\n    x[n - 9] = 0;\n    ts64(x, n - 8, new u64(b / 0x20000000 | 0, b << 3));\n    crypto_hashblocks(h, x, n);\n    for (i = 0; i < 64; i++) out[i] = h[i];\n    return 0;\n  }\n  function add(p, q) {\n    var a = gf(),\n      b = gf(),\n      c = gf(),\n      d = gf(),\n      e = gf(),\n      f = gf(),\n      g = gf(),\n      h = gf(),\n      t = gf();\n    Z(a, p[1], p[0]);\n    Z(t, q[1], q[0]);\n    M(a, a, t);\n    A(b, p[0], p[1]);\n    A(t, q[0], q[1]);\n    M(b, b, t);\n    M(c, p[3], q[3]);\n    M(c, c, D2);\n    M(d, p[2], q[2]);\n    A(d, d, d);\n    Z(e, b, a);\n    Z(f, d, c);\n    A(g, d, c);\n    A(h, b, a);\n    M(p[0], e, f);\n    M(p[1], h, g);\n    M(p[2], g, f);\n    M(p[3], e, h);\n  }\n  function cswap(p, q, b) {\n    var i;\n    for (i = 0; i < 4; i++) {\n      sel25519(p[i], q[i], b);\n    }\n  }\n  function pack(r, p) {\n    var tx = gf(),\n      ty = gf(),\n      zi = gf();\n    inv25519(zi, p[2]);\n    M(tx, p[0], zi);\n    M(ty, p[1], zi);\n    pack25519(r, ty);\n    r[31] ^= par25519(tx) << 7;\n  }\n  function scalarmult(p, q, s) {\n    var b, i;\n    set25519(p[0], gf0);\n    set25519(p[1], gf1);\n    set25519(p[2], gf1);\n    set25519(p[3], gf0);\n    for (i = 255; i >= 0; --i) {\n      b = s[i / 8 | 0] >> (i & 7) & 1;\n      cswap(p, q, b);\n      add(q, p);\n      add(p, p);\n      cswap(p, q, b);\n    }\n  }\n  function scalarbase(p, s) {\n    var q = [gf(), gf(), gf(), gf()];\n    set25519(q[0], X);\n    set25519(q[1], Y);\n    set25519(q[2], gf1);\n    M(q[3], X, Y);\n    scalarmult(p, q, s);\n  }\n  function crypto_sign_keypair(pk, sk, seeded) {\n    var d = new Uint8Array(64);\n    var p = [gf(), gf(), gf(), gf()];\n    var i;\n    if (!seeded) randombytes(sk, 32);\n    crypto_hash(d, sk, 32);\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    scalarbase(p, d);\n    pack(pk, p);\n    for (i = 0; i < 32; i++) sk[i + 32] = pk[i];\n    return 0;\n  }\n  var L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n  function modL(r, x) {\n    var carry, i, j, k;\n    for (i = 63; i >= 32; --i) {\n      carry = 0;\n      for (j = i - 32, k = i - 12; j < k; ++j) {\n        x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n        carry = Math.floor((x[j] + 128) / 256);\n        x[j] -= carry * 256;\n      }\n      x[j] += carry;\n      x[i] = 0;\n    }\n    carry = 0;\n    for (j = 0; j < 32; j++) {\n      x[j] += carry - (x[31] >> 4) * L[j];\n      carry = x[j] >> 8;\n      x[j] &= 255;\n    }\n    for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n    for (i = 0; i < 32; i++) {\n      x[i + 1] += x[i] >> 8;\n      r[i] = x[i] & 255;\n    }\n  }\n  function reduce(r) {\n    var x = new Float64Array(64),\n      i;\n    for (i = 0; i < 64; i++) x[i] = r[i];\n    for (i = 0; i < 64; i++) r[i] = 0;\n    modL(r, x);\n  }\n  function crypto_sign(sm, m, n, sk) {\n    var d = new Uint8Array(64),\n      h = new Uint8Array(64),\n      r = new Uint8Array(64);\n    var i,\n      j,\n      x = new Float64Array(64);\n    var p = [gf(), gf(), gf(), gf()];\n    crypto_hash(d, sk, 32);\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    var smlen = n + 64;\n    for (i = 0; i < n; i++) sm[64 + i] = m[i];\n    for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n    crypto_hash(r, sm.subarray(32), n + 32);\n    reduce(r);\n    scalarbase(p, r);\n    pack(sm, p);\n    for (i = 32; i < 64; i++) sm[i] = sk[i];\n    crypto_hash(h, sm, n + 64);\n    reduce(h);\n    for (i = 0; i < 64; i++) x[i] = 0;\n    for (i = 0; i < 32; i++) x[i] = r[i];\n    for (i = 0; i < 32; i++) {\n      for (j = 0; j < 32; j++) {\n        x[i + j] += h[i] * d[j];\n      }\n    }\n    modL(sm.subarray(32), x);\n    return smlen;\n  }\n  function unpackneg(r, p) {\n    var t = gf(),\n      chk = gf(),\n      num = gf(),\n      den = gf(),\n      den2 = gf(),\n      den4 = gf(),\n      den6 = gf();\n    set25519(r[2], gf1);\n    unpack25519(r[1], p);\n    S(num, r[1]);\n    M(den, num, D);\n    Z(num, num, r[2]);\n    A(den, r[2], den);\n    S(den2, den);\n    S(den4, den2);\n    M(den6, den4, den2);\n    M(t, den6, num);\n    M(t, t, den);\n    pow2523(t, t);\n    M(t, t, num);\n    M(t, t, den);\n    M(t, t, den);\n    M(r[0], t, den);\n    S(chk, r[0]);\n    M(chk, chk, den);\n    if (neq25519(chk, num)) M(r[0], r[0], I);\n    S(chk, r[0]);\n    M(chk, chk, den);\n    if (neq25519(chk, num)) return -1;\n    if (par25519(r[0]) === p[31] >> 7) Z(r[0], gf0, r[0]);\n    M(r[3], r[0], r[1]);\n    return 0;\n  }\n  function crypto_sign_open(m, sm, n, pk) {\n    var i;\n    var t = new Uint8Array(32),\n      h = new Uint8Array(64);\n    var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n    if (n < 64) return -1;\n    if (unpackneg(q, pk)) return -1;\n    for (i = 0; i < n; i++) m[i] = sm[i];\n    for (i = 0; i < 32; i++) m[i + 32] = pk[i];\n    crypto_hash(h, m, n);\n    reduce(h);\n    scalarmult(p, q, h);\n    scalarbase(q, sm.subarray(32));\n    add(p, q);\n    pack(t, p);\n    n -= 64;\n    if (crypto_verify_32(sm, 0, t, 0)) {\n      for (i = 0; i < n; i++) m[i] = 0;\n      return -1;\n    }\n    for (i = 0; i < n; i++) m[i] = sm[i + 64];\n    return n;\n  }\n  var crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n  nacl.lowlevel = {\n    crypto_core_hsalsa20: crypto_core_hsalsa20,\n    crypto_stream_xor: crypto_stream_xor,\n    crypto_stream: crypto_stream,\n    crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n    crypto_stream_salsa20: crypto_stream_salsa20,\n    crypto_onetimeauth: crypto_onetimeauth,\n    crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n    crypto_verify_16: crypto_verify_16,\n    crypto_verify_32: crypto_verify_32,\n    crypto_secretbox: crypto_secretbox,\n    crypto_secretbox_open: crypto_secretbox_open,\n    crypto_scalarmult: crypto_scalarmult,\n    crypto_scalarmult_base: crypto_scalarmult_base,\n    crypto_box_beforenm: crypto_box_beforenm,\n    crypto_box_afternm: crypto_box_afternm,\n    crypto_box: crypto_box,\n    crypto_box_open: crypto_box_open,\n    crypto_box_keypair: crypto_box_keypair,\n    crypto_hash: crypto_hash,\n    crypto_sign: crypto_sign,\n    crypto_sign_keypair: crypto_sign_keypair,\n    crypto_sign_open: crypto_sign_open,\n    crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n    crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n    crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n    crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n    crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n    crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n    crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n    crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n    crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n    crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n    crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n    crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n    crypto_sign_BYTES: crypto_sign_BYTES,\n    crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n    crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n    crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n    crypto_hash_BYTES: crypto_hash_BYTES,\n    gf: gf,\n    D: D,\n    L: L,\n    pack25519: pack25519,\n    unpack25519: unpack25519,\n    M: M,\n    A: A,\n    S: S,\n    Z: Z,\n    pow2523: pow2523,\n    add: add,\n    set25519: set25519,\n    modL: modL,\n    scalarmult: scalarmult,\n    scalarbase: scalarbase\n  };\n  function checkLengths(k, n) {\n    if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n    if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n  }\n  function checkBoxLengths(pk, sk) {\n    if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n    if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n  }\n  function checkArrayTypes() {\n    for (var i = 0; i < arguments.length; i++) {\n      if (!(arguments[i] instanceof Uint8Array)) throw new TypeError('unexpected type, use Uint8Array');\n    }\n  }\n  function cleanup(arr) {\n    for (var i = 0; i < arr.length; i++) arr[i] = 0;\n  }\n  nacl.randomBytes = function (n) {\n    var b = new Uint8Array(n);\n    randombytes(b, n);\n    return b;\n  };\n  nacl.secretbox = function (msg, nonce, key) {\n    checkArrayTypes(msg, nonce, key);\n    checkLengths(key, nonce);\n    var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n    var c = new Uint8Array(m.length);\n    for (var i = 0; i < msg.length; i++) m[i + crypto_secretbox_ZEROBYTES] = msg[i];\n    crypto_secretbox(c, m, m.length, nonce, key);\n    return c.subarray(crypto_secretbox_BOXZEROBYTES);\n  };\n  nacl.secretbox.open = function (box, nonce, key) {\n    checkArrayTypes(box, nonce, key);\n    checkLengths(key, nonce);\n    var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n    var m = new Uint8Array(c.length);\n    for (var i = 0; i < box.length; i++) c[i + crypto_secretbox_BOXZEROBYTES] = box[i];\n    if (c.length < 32) return null;\n    if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n    return m.subarray(crypto_secretbox_ZEROBYTES);\n  };\n  nacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\n  nacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\n  nacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n  nacl.scalarMult = function (n, p) {\n    checkArrayTypes(n, p);\n    if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n    if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n    var q = new Uint8Array(crypto_scalarmult_BYTES);\n    crypto_scalarmult(q, n, p);\n    return q;\n  };\n  nacl.scalarMult.base = function (n) {\n    checkArrayTypes(n);\n    if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n    var q = new Uint8Array(crypto_scalarmult_BYTES);\n    crypto_scalarmult_base(q, n);\n    return q;\n  };\n  nacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\n  nacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n  nacl.box = function (msg, nonce, publicKey, secretKey) {\n    var k = nacl.box.before(publicKey, secretKey);\n    return nacl.secretbox(msg, nonce, k);\n  };\n  nacl.box.before = function (publicKey, secretKey) {\n    checkArrayTypes(publicKey, secretKey);\n    checkBoxLengths(publicKey, secretKey);\n    var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n    crypto_box_beforenm(k, publicKey, secretKey);\n    return k;\n  };\n  nacl.box.after = nacl.secretbox;\n  nacl.box.open = function (msg, nonce, publicKey, secretKey) {\n    var k = nacl.box.before(publicKey, secretKey);\n    return nacl.secretbox.open(msg, nonce, k);\n  };\n  nacl.box.open.after = nacl.secretbox.open;\n  nacl.box.keyPair = function () {\n    var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n    var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n    crypto_box_keypair(pk, sk);\n    return {\n      publicKey: pk,\n      secretKey: sk\n    };\n  };\n  nacl.box.keyPair.fromSecretKey = function (secretKey) {\n    checkArrayTypes(secretKey);\n    if (secretKey.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n    var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n    crypto_scalarmult_base(pk, secretKey);\n    return {\n      publicKey: pk,\n      secretKey: new Uint8Array(secretKey)\n    };\n  };\n  nacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\n  nacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\n  nacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\n  nacl.box.nonceLength = crypto_box_NONCEBYTES;\n  nacl.box.overheadLength = nacl.secretbox.overheadLength;\n  nacl.sign = function (msg, secretKey) {\n    checkArrayTypes(msg, secretKey);\n    if (secretKey.length !== crypto_sign_SECRETKEYBYTES) throw new Error('bad secret key size');\n    var signedMsg = new Uint8Array(crypto_sign_BYTES + msg.length);\n    crypto_sign(signedMsg, msg, msg.length, secretKey);\n    return signedMsg;\n  };\n  nacl.sign.open = function (signedMsg, publicKey) {\n    checkArrayTypes(signedMsg, publicKey);\n    if (publicKey.length !== crypto_sign_PUBLICKEYBYTES) throw new Error('bad public key size');\n    var tmp = new Uint8Array(signedMsg.length);\n    var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n    if (mlen < 0) return null;\n    var m = new Uint8Array(mlen);\n    for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n    return m;\n  };\n  nacl.sign.detached = function (msg, secretKey) {\n    var signedMsg = nacl.sign(msg, secretKey);\n    var sig = new Uint8Array(crypto_sign_BYTES);\n    for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n    return sig;\n  };\n  nacl.sign.detached.verify = function (msg, sig, publicKey) {\n    checkArrayTypes(msg, sig, publicKey);\n    if (sig.length !== crypto_sign_BYTES) throw new Error('bad signature size');\n    if (publicKey.length !== crypto_sign_PUBLICKEYBYTES) throw new Error('bad public key size');\n    var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n    var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n    var i;\n    for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n    for (i = 0; i < msg.length; i++) sm[i + crypto_sign_BYTES] = msg[i];\n    return crypto_sign_open(m, sm, sm.length, publicKey) >= 0;\n  };\n  nacl.sign.keyPair = function () {\n    var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n    var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n    crypto_sign_keypair(pk, sk);\n    return {\n      publicKey: pk,\n      secretKey: sk\n    };\n  };\n  nacl.sign.keyPair.fromSecretKey = function (secretKey) {\n    checkArrayTypes(secretKey);\n    if (secretKey.length !== crypto_sign_SECRETKEYBYTES) throw new Error('bad secret key size');\n    var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n    for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32 + i];\n    return {\n      publicKey: pk,\n      secretKey: new Uint8Array(secretKey)\n    };\n  };\n  nacl.sign.keyPair.fromSeed = function (seed) {\n    checkArrayTypes(seed);\n    if (seed.length !== crypto_sign_SEEDBYTES) throw new Error('bad seed size');\n    var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n    var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n    for (var i = 0; i < 32; i++) sk[i] = seed[i];\n    crypto_sign_keypair(pk, sk, true);\n    return {\n      publicKey: pk,\n      secretKey: sk\n    };\n  };\n  nacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\n  nacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\n  nacl.sign.seedLength = crypto_sign_SEEDBYTES;\n  nacl.sign.signatureLength = crypto_sign_BYTES;\n  nacl.hash = function (msg) {\n    checkArrayTypes(msg);\n    var h = new Uint8Array(crypto_hash_BYTES);\n    crypto_hash(h, msg, msg.length);\n    return h;\n  };\n  nacl.hash.hashLength = crypto_hash_BYTES;\n  nacl.verify = function (x, y) {\n    checkArrayTypes(x, y);\n    if (x.length === 0 || y.length === 0) return false;\n    if (x.length !== y.length) return false;\n    return vn(x, 0, y, 0, x.length) === 0 ? true : false;\n  };\n  nacl.setPRNG = function (fn) {\n    randombytes = fn;\n  };\n  (function () {\n    var crypto1 = typeof globalThis !== 'undefined' ? globalThis.crypto || globalThis.msCrypto : null;\n    if (crypto1 && crypto1.getRandomValues) {\n      var QUOTA = 65536;\n      nacl.setPRNG(function (x, n) {\n        var i,\n          v = new Uint8Array(n);\n        for (i = 0; i < n; i += QUOTA) {\n          crypto1.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n        }\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    } else if (typeof require !== 'undefined') {\n      crypto1 = require('crypto');\n      if (crypto1 && crypto1.randomBytes) {\n        nacl.setPRNG(function (x, n) {\n          var i,\n            v = crypto1.randomBytes(n);\n          for (i = 0; i < n; i++) x[i] = v[i];\n          cleanup(v);\n        });\n      }\n    }\n  })();\n})(typeof module !== 'undefined' && module.exports ? module.exports : globalThis.nacl = globalThis.nacl || {});\nconst nacl = typeof module !== 'undefined' && module.exports ? module.exports : globalThis.nacl;\nconst denoHelper = {\n  fromSeed: nacl.sign.keyPair.fromSeed,\n  sign: nacl.sign.detached,\n  verify: nacl.sign.detached.verify,\n  randomBytes: nacl.randomBytes\n};\nlet helper;\nfunction setEd25519Helper(lib) {\n  helper = lib;\n}\nfunction getEd25519Helper() {\n  return helper;\n}\nconst crc16tab = new Uint16Array([0x0000, 0x1021, 0x2042, 0x3063, 0x4084, 0x50a5, 0x60c6, 0x70e7, 0x8108, 0x9129, 0xa14a, 0xb16b, 0xc18c, 0xd1ad, 0xe1ce, 0xf1ef, 0x1231, 0x0210, 0x3273, 0x2252, 0x52b5, 0x4294, 0x72f7, 0x62d6, 0x9339, 0x8318, 0xb37b, 0xa35a, 0xd3bd, 0xc39c, 0xf3ff, 0xe3de, 0x2462, 0x3443, 0x0420, 0x1401, 0x64e6, 0x74c7, 0x44a4, 0x5485, 0xa56a, 0xb54b, 0x8528, 0x9509, 0xe5ee, 0xf5cf, 0xc5ac, 0xd58d, 0x3653, 0x2672, 0x1611, 0x0630, 0x76d7, 0x66f6, 0x5695, 0x46b4, 0xb75b, 0xa77a, 0x9719, 0x8738, 0xf7df, 0xe7fe, 0xd79d, 0xc7bc, 0x48c4, 0x58e5, 0x6886, 0x78a7, 0x0840, 0x1861, 0x2802, 0x3823, 0xc9cc, 0xd9ed, 0xe98e, 0xf9af, 0x8948, 0x9969, 0xa90a, 0xb92b, 0x5af5, 0x4ad4, 0x7ab7, 0x6a96, 0x1a71, 0x0a50, 0x3a33, 0x2a12, 0xdbfd, 0xcbdc, 0xfbbf, 0xeb9e, 0x9b79, 0x8b58, 0xbb3b, 0xab1a, 0x6ca6, 0x7c87, 0x4ce4, 0x5cc5, 0x2c22, 0x3c03, 0x0c60, 0x1c41, 0xedae, 0xfd8f, 0xcdec, 0xddcd, 0xad2a, 0xbd0b, 0x8d68, 0x9d49, 0x7e97, 0x6eb6, 0x5ed5, 0x4ef4, 0x3e13, 0x2e32, 0x1e51, 0x0e70, 0xff9f, 0xefbe, 0xdfdd, 0xcffc, 0xbf1b, 0xaf3a, 0x9f59, 0x8f78, 0x9188, 0x81a9, 0xb1ca, 0xa1eb, 0xd10c, 0xc12d, 0xf14e, 0xe16f, 0x1080, 0x00a1, 0x30c2, 0x20e3, 0x5004, 0x4025, 0x7046, 0x6067, 0x83b9, 0x9398, 0xa3fb, 0xb3da, 0xc33d, 0xd31c, 0xe37f, 0xf35e, 0x02b1, 0x1290, 0x22f3, 0x32d2, 0x4235, 0x5214, 0x6277, 0x7256, 0xb5ea, 0xa5cb, 0x95a8, 0x8589, 0xf56e, 0xe54f, 0xd52c, 0xc50d, 0x34e2, 0x24c3, 0x14a0, 0x0481, 0x7466, 0x6447, 0x5424, 0x4405, 0xa7db, 0xb7fa, 0x8799, 0x97b8, 0xe75f, 0xf77e, 0xc71d, 0xd73c, 0x26d3, 0x36f2, 0x0691, 0x16b0, 0x6657, 0x7676, 0x4615, 0x5634, 0xd94c, 0xc96d, 0xf90e, 0xe92f, 0x99c8, 0x89e9, 0xb98a, 0xa9ab, 0x5844, 0x4865, 0x7806, 0x6827, 0x18c0, 0x08e1, 0x3882, 0x28a3, 0xcb7d, 0xdb5c, 0xeb3f, 0xfb1e, 0x8bf9, 0x9bd8, 0xabbb, 0xbb9a, 0x4a75, 0x5a54, 0x6a37, 0x7a16, 0x0af1, 0x1ad0, 0x2ab3, 0x3a92, 0xfd2e, 0xed0f, 0xdd6c, 0xcd4d, 0xbdaa, 0xad8b, 0x9de8, 0x8dc9, 0x7c26, 0x6c07, 0x5c64, 0x4c45, 0x3ca2, 0x2c83, 0x1ce0, 0x0cc1, 0xef1f, 0xff3e, 0xcf5d, 0xdf7c, 0xaf9b, 0xbfba, 0x8fd9, 0x9ff8, 0x6e17, 0x7e36, 0x4e55, 0x5e74, 0x2e93, 0x3eb2, 0x0ed1, 0x1ef0]);\nclass crc16 {\n  static checksum(data) {\n    let crc = 0;\n    for (let i = 0; i < data.byteLength; i++) {\n      let b = data[i];\n      crc = crc << 8 & 0xffff ^ crc16tab[(crc >> 8 ^ b) & 0x00FF];\n    }\n    return crc;\n  }\n  static validate(data, expected) {\n    let ba = crc16.checksum(data);\n    return ba == expected;\n  }\n}\nconst b32Alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nclass base32 {\n  static encode(src) {\n    let bits = 0;\n    let value = 0;\n    let a = new Uint8Array(src);\n    let buf = new Uint8Array(src.byteLength * 2);\n    let j = 0;\n    for (let i = 0; i < a.byteLength; i++) {\n      value = value << 8 | a[i];\n      bits += 8;\n      while (bits >= 5) {\n        let index = value >>> bits - 5 & 31;\n        buf[j++] = b32Alphabet.charAt(index).charCodeAt(0);\n        bits -= 5;\n      }\n    }\n    if (bits > 0) {\n      let index = value << 5 - bits & 31;\n      buf[j++] = b32Alphabet.charAt(index).charCodeAt(0);\n    }\n    return buf.slice(0, j);\n  }\n  static decode(src) {\n    let bits = 0;\n    let __byte = 0;\n    let j = 0;\n    let a = new Uint8Array(src);\n    let out = new Uint8Array(a.byteLength * 5 / 8 | 0);\n    for (let i = 0; i < a.byteLength; i++) {\n      let v = String.fromCharCode(a[i]);\n      let vv = b32Alphabet.indexOf(v);\n      if (vv === -1) {\n        throw new Error(\"Illegal Base32 character: \" + a[i]);\n      }\n      __byte = __byte << 5 | vv;\n      bits += 5;\n      if (bits >= 8) {\n        out[j++] = __byte >>> bits - 8 & 255;\n        bits -= 8;\n      }\n    }\n    return out.slice(0, j);\n  }\n}\nclass NKeysError extends Error {\n  name;\n  code;\n  chainedError;\n  constructor(code, chainedError) {\n    super(code);\n    this.name = \"NKeysError\";\n    this.code = code;\n    this.chainedError = chainedError;\n  }\n}\nfunction createOperator() {\n  return createPair(Prefix.Operator);\n}\nfunction createAccount() {\n  return createPair(Prefix.Account);\n}\nfunction createUser() {\n  return createPair(Prefix.User);\n}\nvar NKeysErrorCode;\n(function (NKeysErrorCode) {\n  NKeysErrorCode[\"InvalidPrefixByte\"] = \"nkeys: invalid prefix byte\";\n  NKeysErrorCode[\"InvalidKey\"] = \"nkeys: invalid key\";\n  NKeysErrorCode[\"InvalidPublicKey\"] = \"nkeys: invalid public key\";\n  NKeysErrorCode[\"InvalidSeedLen\"] = \"nkeys: invalid seed length\";\n  NKeysErrorCode[\"InvalidSeed\"] = \"nkeys: invalid seed\";\n  NKeysErrorCode[\"InvalidEncoding\"] = \"nkeys: invalid encoded key\";\n  NKeysErrorCode[\"InvalidSignature\"] = \"nkeys: signature verification failed\";\n  NKeysErrorCode[\"CannotSign\"] = \"nkeys: cannot sign, no private key available\";\n  NKeysErrorCode[\"PublicKeyOnly\"] = \"nkeys: no seed or private key available\";\n  NKeysErrorCode[\"InvalidChecksum\"] = \"nkeys: invalid checksum\";\n  NKeysErrorCode[\"SerializationError\"] = \"nkeys: serialization error\";\n  NKeysErrorCode[\"ApiError\"] = \"nkeys: api error\";\n  NKeysErrorCode[\"ClearedPair\"] = \"nkeys: pair is cleared\";\n})(NKeysErrorCode || (NKeysErrorCode = {}));\nvar Prefix;\n(function (Prefix) {\n  Prefix[Prefix[\"Seed\"] = 144] = \"Seed\";\n  Prefix[Prefix[\"Private\"] = 120] = \"Private\";\n  Prefix[Prefix[\"Operator\"] = 112] = \"Operator\";\n  Prefix[Prefix[\"Server\"] = 104] = \"Server\";\n  Prefix[Prefix[\"Cluster\"] = 16] = \"Cluster\";\n  Prefix[Prefix[\"Account\"] = 0] = \"Account\";\n  Prefix[Prefix[\"User\"] = 160] = \"User\";\n})(Prefix || (Prefix = {}));\nclass Prefixes {\n  static isValidPublicPrefix(prefix) {\n    return prefix == Prefix.Server || prefix == Prefix.Operator || prefix == Prefix.Cluster || prefix == Prefix.Account || prefix == Prefix.User;\n  }\n  static startsWithValidPrefix(s) {\n    let c = s[0];\n    return c == \"S\" || c == \"P\" || c == \"O\" || c == \"N\" || c == \"C\" || c == \"A\" || c == \"U\";\n  }\n  static isValidPrefix(prefix) {\n    let v = this.parsePrefix(prefix);\n    return v != -1;\n  }\n  static parsePrefix(v) {\n    switch (v) {\n      case Prefix.Seed:\n        return Prefix.Seed;\n      case Prefix.Private:\n        return Prefix.Private;\n      case Prefix.Operator:\n        return Prefix.Operator;\n      case Prefix.Server:\n        return Prefix.Server;\n      case Prefix.Cluster:\n        return Prefix.Cluster;\n      case Prefix.Account:\n        return Prefix.Account;\n      case Prefix.User:\n        return Prefix.User;\n      default:\n        return -1;\n    }\n  }\n}\nclass Codec {\n  static encode(prefix, src) {\n    if (!src || !(src instanceof Uint8Array)) {\n      throw new NKeysError(NKeysErrorCode.SerializationError);\n    }\n    if (!Prefixes.isValidPrefix(prefix)) {\n      throw new NKeysError(NKeysErrorCode.InvalidPrefixByte);\n    }\n    return Codec._encode(false, prefix, src);\n  }\n  static encodeSeed(role, src) {\n    if (!src) {\n      throw new NKeysError(NKeysErrorCode.ApiError);\n    }\n    if (!Prefixes.isValidPublicPrefix(role)) {\n      throw new NKeysError(NKeysErrorCode.InvalidPrefixByte);\n    }\n    if (src.byteLength !== 32) {\n      throw new NKeysError(NKeysErrorCode.InvalidSeedLen);\n    }\n    return Codec._encode(true, role, src);\n  }\n  static decode(expected, src) {\n    if (!Prefixes.isValidPrefix(expected)) {\n      throw new NKeysError(NKeysErrorCode.InvalidPrefixByte);\n    }\n    const raw = Codec._decode(src);\n    if (raw[0] !== expected) {\n      throw new NKeysError(NKeysErrorCode.InvalidPrefixByte);\n    }\n    return raw.slice(1);\n  }\n  static decodeSeed(src) {\n    const raw = Codec._decode(src);\n    const prefix = Codec._decodePrefix(raw);\n    if (prefix[0] != Prefix.Seed) {\n      throw new NKeysError(NKeysErrorCode.InvalidSeed);\n    }\n    if (!Prefixes.isValidPublicPrefix(prefix[1])) {\n      throw new NKeysError(NKeysErrorCode.InvalidPrefixByte);\n    }\n    return {\n      buf: raw.slice(2),\n      prefix: prefix[1]\n    };\n  }\n  static _encode(seed, role, payload) {\n    const payloadOffset = seed ? 2 : 1;\n    const payloadLen = payload.byteLength;\n    const cap = payloadOffset + payloadLen + 2;\n    const checkOffset = payloadOffset + payloadLen;\n    const raw = new Uint8Array(cap);\n    if (seed) {\n      const encodedPrefix = Codec._encodePrefix(Prefix.Seed, role);\n      raw.set(encodedPrefix);\n    } else {\n      raw[0] = role;\n    }\n    raw.set(payload, payloadOffset);\n    const checksum = crc16.checksum(raw.slice(0, checkOffset));\n    const dv = new DataView(raw.buffer);\n    dv.setUint16(checkOffset, checksum, true);\n    return base32.encode(raw);\n  }\n  static _decode(src) {\n    if (src.byteLength < 4) {\n      throw new NKeysError(NKeysErrorCode.InvalidEncoding);\n    }\n    let raw;\n    try {\n      raw = base32.decode(src);\n    } catch (ex) {\n      throw new NKeysError(NKeysErrorCode.InvalidEncoding, ex);\n    }\n    const checkOffset = raw.byteLength - 2;\n    const dv = new DataView(raw.buffer);\n    const checksum = dv.getUint16(checkOffset, true);\n    const payload = raw.slice(0, checkOffset);\n    if (!crc16.validate(payload, checksum)) {\n      throw new NKeysError(NKeysErrorCode.InvalidChecksum);\n    }\n    return payload;\n  }\n  static _encodePrefix(kind, role) {\n    const b1 = kind | role >> 5;\n    const b2 = (role & 31) << 3;\n    return new Uint8Array([b1, b2]);\n  }\n  static _decodePrefix(raw) {\n    const b1 = raw[0] & 248;\n    const b2 = (raw[0] & 7) << 5 | (raw[1] & 248) >> 3;\n    return new Uint8Array([b1, b2]);\n  }\n}\nclass KP {\n  seed;\n  constructor(seed) {\n    this.seed = seed;\n  }\n  getRawSeed() {\n    if (!this.seed) {\n      throw new NKeysError(NKeysErrorCode.ClearedPair);\n    }\n    let sd = Codec.decodeSeed(this.seed);\n    return sd.buf;\n  }\n  getSeed() {\n    if (!this.seed) {\n      throw new NKeysError(NKeysErrorCode.ClearedPair);\n    }\n    return this.seed;\n  }\n  getPublicKey() {\n    if (!this.seed) {\n      throw new NKeysError(NKeysErrorCode.ClearedPair);\n    }\n    const sd = Codec.decodeSeed(this.seed);\n    const kp = getEd25519Helper().fromSeed(this.getRawSeed());\n    const buf = Codec.encode(sd.prefix, kp.publicKey);\n    return new TextDecoder().decode(buf);\n  }\n  getPrivateKey() {\n    if (!this.seed) {\n      throw new NKeysError(NKeysErrorCode.ClearedPair);\n    }\n    const kp = getEd25519Helper().fromSeed(this.getRawSeed());\n    return Codec.encode(Prefix.Private, kp.secretKey);\n  }\n  sign(input) {\n    if (!this.seed) {\n      throw new NKeysError(NKeysErrorCode.ClearedPair);\n    }\n    const kp = getEd25519Helper().fromSeed(this.getRawSeed());\n    return getEd25519Helper().sign(input, kp.secretKey);\n  }\n  verify(input, sig) {\n    if (!this.seed) {\n      throw new NKeysError(NKeysErrorCode.ClearedPair);\n    }\n    const kp = getEd25519Helper().fromSeed(this.getRawSeed());\n    return getEd25519Helper().verify(input, sig, kp.publicKey);\n  }\n  clear() {\n    if (!this.seed) {\n      return;\n    }\n    this.seed.fill(0);\n    this.seed = undefined;\n  }\n}\nfunction createPair(prefix) {\n  const rawSeed = getEd25519Helper().randomBytes(32);\n  let str = Codec.encodeSeed(prefix, new Uint8Array(rawSeed));\n  return new KP(str);\n}\nclass PublicKey {\n  publicKey;\n  constructor(publicKey) {\n    this.publicKey = publicKey;\n  }\n  getPublicKey() {\n    if (!this.publicKey) {\n      throw new NKeysError(NKeysErrorCode.ClearedPair);\n    }\n    return new TextDecoder().decode(this.publicKey);\n  }\n  getPrivateKey() {\n    if (!this.publicKey) {\n      throw new NKeysError(NKeysErrorCode.ClearedPair);\n    }\n    throw new NKeysError(NKeysErrorCode.PublicKeyOnly);\n  }\n  getSeed() {\n    if (!this.publicKey) {\n      throw new NKeysError(NKeysErrorCode.ClearedPair);\n    }\n    throw new NKeysError(NKeysErrorCode.PublicKeyOnly);\n  }\n  sign(_) {\n    if (!this.publicKey) {\n      throw new NKeysError(NKeysErrorCode.ClearedPair);\n    }\n    throw new NKeysError(NKeysErrorCode.CannotSign);\n  }\n  verify(input, sig) {\n    if (!this.publicKey) {\n      throw new NKeysError(NKeysErrorCode.ClearedPair);\n    }\n    let buf = Codec._decode(this.publicKey);\n    return getEd25519Helper().verify(input, sig, buf.slice(1));\n  }\n  clear() {\n    if (!this.publicKey) {\n      return;\n    }\n    this.publicKey.fill(0);\n    this.publicKey = undefined;\n  }\n}\nfunction fromPublic(src) {\n  const ba = new TextEncoder().encode(src);\n  const raw = Codec._decode(ba);\n  const prefix = Prefixes.parsePrefix(raw[0]);\n  if (Prefixes.isValidPublicPrefix(prefix)) {\n    return new PublicKey(ba);\n  }\n  throw new NKeysError(NKeysErrorCode.InvalidPublicKey);\n}\nfunction fromSeed(src) {\n  Codec.decodeSeed(src);\n  return new KP(src);\n}\nfunction encode1(bytes) {\n  return btoa(String.fromCharCode(...bytes));\n}\nfunction decode1(b64str) {\n  const bin = atob(b64str);\n  const bytes = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; i++) {\n    bytes[i] = bin.charCodeAt(i);\n  }\n  return bytes;\n}\nsetEd25519Helper(denoHelper);\nconst mod = {\n  createAccount,\n  createOperator,\n  createPair,\n  createUser,\n  fromPublic,\n  fromSeed,\n  NKeysError,\n  NKeysErrorCode,\n  Prefix,\n  decode: decode1,\n  encode: encode1\n};\nfunction multiAuthenticator(authenticators) {\n  return nonce => {\n    let auth = {};\n    authenticators.forEach(a => {\n      const args = a(nonce) || {};\n      auth = Object.assign(auth, args);\n    });\n    return auth;\n  };\n}\nfunction noAuthFn() {\n  return () => {\n    return;\n  };\n}\nfunction usernamePasswordAuthenticator(user, pass) {\n  return () => {\n    const u = typeof user === \"function\" ? user() : user;\n    const p = typeof pass === \"function\" ? pass() : pass;\n    return {\n      user: u,\n      pass: p\n    };\n  };\n}\nfunction tokenAuthenticator(token) {\n  return () => {\n    const auth_token = typeof token === \"function\" ? token() : token;\n    return {\n      auth_token\n    };\n  };\n}\nfunction nkeyAuthenticator(seed) {\n  return nonce => {\n    const s = typeof seed === \"function\" ? seed() : seed;\n    const kp = s ? mod.fromSeed(s) : undefined;\n    const nkey = kp ? kp.getPublicKey() : \"\";\n    const challenge = TE.encode(nonce || \"\");\n    const sigBytes = kp !== undefined && nonce ? kp.sign(challenge) : undefined;\n    const sig = sigBytes ? mod.encode(sigBytes) : \"\";\n    return {\n      nkey,\n      sig\n    };\n  };\n}\nfunction jwtAuthenticator(ajwt, seed) {\n  return nonce => {\n    const jwt = typeof ajwt === \"function\" ? ajwt() : ajwt;\n    const fn = nkeyAuthenticator(seed);\n    const {\n      nkey,\n      sig\n    } = fn(nonce);\n    return {\n      jwt,\n      nkey,\n      sig\n    };\n  };\n}\nfunction credsAuthenticator(creds) {\n  const fn = typeof creds !== \"function\" ? () => creds : creds;\n  const parse = () => {\n    const CREDS = /\\s*(?:(?:[-]{3,}[^\\n]*[-]{3,}\\n)(.+)(?:\\n\\s*[-]{3,}[^\\n]*[-]{3,}\\n))/ig;\n    const s = TD.decode(fn());\n    let m = CREDS.exec(s);\n    if (!m) {\n      throw NatsError.errorForCode(ErrorCode.BadCreds);\n    }\n    const jwt = m[1].trim();\n    m = CREDS.exec(s);\n    if (!m) {\n      throw NatsError.errorForCode(ErrorCode.BadCreds);\n    }\n    if (!m) {\n      throw NatsError.errorForCode(ErrorCode.BadCreds);\n    }\n    const seed = TE.encode(m[1].trim());\n    return {\n      jwt,\n      seed\n    };\n  };\n  const jwtFn = () => {\n    const {\n      jwt\n    } = parse();\n    return jwt;\n  };\n  const nkeyFn = () => {\n    const {\n      seed\n    } = parse();\n    return seed;\n  };\n  return jwtAuthenticator(jwtFn, nkeyFn);\n}\nconst DEFAULT_PING_INTERVAL = 2 * 60 * 1000;\nconst DEFAULT_MAX_PING_OUT = 2;\nconst DEFAULT_RECONNECT_TIME_WAIT = 2 * 1000;\nfunction defaultOptions() {\n  return {\n    maxPingOut: 2,\n    maxReconnectAttempts: 10,\n    noRandomize: false,\n    pedantic: false,\n    pingInterval: DEFAULT_PING_INTERVAL,\n    reconnect: true,\n    reconnectJitter: 100,\n    reconnectJitterTLS: 1000,\n    reconnectTimeWait: DEFAULT_RECONNECT_TIME_WAIT,\n    tls: undefined,\n    verbose: false,\n    waitOnFirstConnect: false,\n    ignoreAuthErrorAbort: false\n  };\n}\nfunction buildAuthenticator(opts) {\n  const buf = [];\n  if (typeof opts.authenticator === \"function\") {\n    buf.push(opts.authenticator);\n  }\n  if (Array.isArray(opts.authenticator)) {\n    buf.push(...opts.authenticator);\n  }\n  if (opts.token) {\n    buf.push(tokenAuthenticator(opts.token));\n  }\n  if (opts.user) {\n    buf.push(usernamePasswordAuthenticator(opts.user, opts.pass));\n  }\n  return buf.length === 0 ? noAuthFn() : multiAuthenticator(buf);\n}\nfunction parseOptions(opts) {\n  const dhp = `${DEFAULT_HOST}:${defaultPort()}`;\n  opts = opts || {\n    servers: [dhp]\n  };\n  opts.servers = opts.servers || [];\n  if (typeof opts.servers === \"string\") {\n    opts.servers = [opts.servers];\n  }\n  if (opts.servers.length > 0 && opts.port) {\n    throw new NatsError(\"port and servers options are mutually exclusive\", ErrorCode.InvalidOption);\n  }\n  if (opts.servers.length === 0 && opts.port) {\n    opts.servers = [`${DEFAULT_HOST}:${opts.port}`];\n  }\n  if (opts.servers && opts.servers.length === 0) {\n    opts.servers = [dhp];\n  }\n  const options = extend(defaultOptions(), opts);\n  options.authenticator = buildAuthenticator(options);\n  [\"reconnectDelayHandler\", \"authenticator\"].forEach(n => {\n    if (options[n] && typeof options[n] !== \"function\") {\n      throw new NatsError(`${n} option should be a function`, ErrorCode.NotFunction);\n    }\n  });\n  if (!options.reconnectDelayHandler) {\n    options.reconnectDelayHandler = () => {\n      let extra = options.tls ? options.reconnectJitterTLS : options.reconnectJitter;\n      if (extra) {\n        extra++;\n        extra = Math.floor(Math.random() * extra);\n      }\n      return options.reconnectTimeWait + extra;\n    };\n  }\n  if (options.inboxPrefix) {\n    try {\n      createInbox(options.inboxPrefix);\n    } catch (err) {\n      throw new NatsError(err.message, ErrorCode.ApiError);\n    }\n  }\n  if (options.resolve) {\n    if (typeof getResolveFn() !== \"function\") {\n      throw new NatsError(`'resolve' is not supported on this client`, ErrorCode.InvalidOption);\n    }\n  }\n  return options;\n}\nfunction checkOptions(info, options) {\n  const {\n    proto,\n    tls_required: tlsRequired,\n    tls_available: tlsAvailable\n  } = info;\n  if ((proto === undefined || proto < 1) && options.noEcho) {\n    throw new NatsError(\"noEcho\", ErrorCode.ServerOptionNotAvailable);\n  }\n  const tls = tlsRequired || tlsAvailable || false;\n  if (options.tls && !tls) {\n    throw new NatsError(\"tls\", ErrorCode.ServerOptionNotAvailable);\n  }\n}\nconst FLUSH_THRESHOLD = 1024 * 32;\nconst INFO = /^INFO\\s+([^\\r\\n]+)\\r\\n/i;\nconst PONG_CMD = encode(\"PONG\\r\\n\");\nconst PING_CMD = encode(\"PING\\r\\n\");\nclass Connect {\n  echo;\n  no_responders;\n  protocol;\n  verbose;\n  pedantic;\n  jwt;\n  nkey;\n  sig;\n  user;\n  pass;\n  auth_token;\n  tls_required;\n  name;\n  lang;\n  version;\n  headers;\n  constructor(transport, opts, nonce) {\n    this.protocol = 1;\n    this.version = transport.version;\n    this.lang = transport.lang;\n    this.echo = opts.noEcho ? false : undefined;\n    this.verbose = opts.verbose;\n    this.pedantic = opts.pedantic;\n    this.tls_required = opts.tls ? true : undefined;\n    this.name = opts.name;\n    const creds = (opts && typeof opts.authenticator === \"function\" ? opts.authenticator(nonce) : {}) || {};\n    extend(this, creds);\n  }\n}\nclass SubscriptionImpl extends QueuedIteratorImpl {\n  sid;\n  queue;\n  draining;\n  max;\n  subject;\n  drained;\n  protocol;\n  timer;\n  info;\n  cleanupFn;\n  closed;\n  requestSubject;\n  constructor(protocol, subject, opts = {}) {\n    super();\n    extend(this, opts);\n    this.protocol = protocol;\n    this.subject = subject;\n    this.draining = false;\n    this.noIterator = typeof opts.callback === \"function\";\n    this.closed = deferred();\n    const asyncTraces = !(protocol.options?.noAsyncTraces || false);\n    if (opts.timeout) {\n      this.timer = timeout(opts.timeout, asyncTraces);\n      this.timer.then(() => {\n        this.timer = undefined;\n      }).catch(err => {\n        this.stop(err);\n        if (this.noIterator) {\n          this.callback(err, {});\n        }\n      });\n    }\n    if (!this.noIterator) {\n      this.iterClosed.then(() => {\n        this.closed.resolve();\n        this.unsubscribe();\n      });\n    }\n  }\n  setPrePostHandlers(opts) {\n    if (this.noIterator) {\n      const uc = this.callback;\n      const ingestion = opts.ingestionFilterFn ? opts.ingestionFilterFn : () => {\n        return {\n          ingest: true,\n          protocol: false\n        };\n      };\n      const filter = opts.protocolFilterFn ? opts.protocolFilterFn : () => {\n        return true;\n      };\n      const dispatched = opts.dispatchedFn ? opts.dispatchedFn : () => {};\n      this.callback = (err, msg) => {\n        const {\n          ingest\n        } = ingestion(msg);\n        if (!ingest) {\n          return;\n        }\n        if (filter(msg)) {\n          uc(err, msg);\n          dispatched(msg);\n        }\n      };\n    } else {\n      this.protocolFilterFn = opts.protocolFilterFn;\n      this.dispatchedFn = opts.dispatchedFn;\n    }\n  }\n  callback(err, msg) {\n    this.cancelTimeout();\n    err ? this.stop(err) : this.push(msg);\n  }\n  close() {\n    if (!this.isClosed()) {\n      this.cancelTimeout();\n      const fn = () => {\n        this.stop();\n        if (this.cleanupFn) {\n          try {\n            this.cleanupFn(this, this.info);\n          } catch (_err) {}\n        }\n        this.closed.resolve();\n      };\n      if (this.noIterator) {\n        fn();\n      } else {\n        this.push(fn);\n      }\n    }\n  }\n  unsubscribe(max) {\n    this.protocol.unsubscribe(this, max);\n  }\n  cancelTimeout() {\n    if (this.timer) {\n      this.timer.cancel();\n      this.timer = undefined;\n    }\n  }\n  drain() {\n    if (this.protocol.isClosed()) {\n      return Promise.reject(NatsError.errorForCode(ErrorCode.ConnectionClosed));\n    }\n    if (this.isClosed()) {\n      return Promise.reject(NatsError.errorForCode(ErrorCode.SubClosed));\n    }\n    if (!this.drained) {\n      this.draining = true;\n      this.protocol.unsub(this);\n      this.drained = this.protocol.flush(deferred()).then(() => {\n        this.protocol.subscriptions.cancel(this);\n      }).catch(() => {\n        this.protocol.subscriptions.cancel(this);\n      });\n    }\n    return this.drained;\n  }\n  isDraining() {\n    return this.draining;\n  }\n  isClosed() {\n    return this.done;\n  }\n  getSubject() {\n    return this.subject;\n  }\n  getMax() {\n    return this.max;\n  }\n  getID() {\n    return this.sid;\n  }\n}\nclass Subscriptions {\n  mux;\n  subs;\n  sidCounter;\n  constructor() {\n    this.sidCounter = 0;\n    this.mux = null;\n    this.subs = new Map();\n  }\n  size() {\n    return this.subs.size;\n  }\n  add(s) {\n    this.sidCounter++;\n    s.sid = this.sidCounter;\n    this.subs.set(s.sid, s);\n    return s;\n  }\n  setMux(s) {\n    this.mux = s;\n    return s;\n  }\n  getMux() {\n    return this.mux;\n  }\n  get(sid) {\n    return this.subs.get(sid);\n  }\n  resub(s) {\n    this.sidCounter++;\n    this.subs.delete(s.sid);\n    s.sid = this.sidCounter;\n    this.subs.set(s.sid, s);\n    return s;\n  }\n  all() {\n    return Array.from(this.subs.values());\n  }\n  cancel(s) {\n    if (s) {\n      s.close();\n      this.subs.delete(s.sid);\n    }\n  }\n  handleError(err) {\n    if (err && err.permissionContext) {\n      const ctx = err.permissionContext;\n      const subs = this.all();\n      let sub;\n      if (ctx.operation === \"subscription\") {\n        sub = subs.find(s => {\n          return s.subject === ctx.subject;\n        });\n      }\n      if (ctx.operation === \"publish\") {\n        sub = subs.find(s => {\n          return s.requestSubject === ctx.subject;\n        });\n      }\n      if (sub) {\n        sub.callback(err, {});\n        sub.close();\n        this.subs.delete(sub.sid);\n        return sub !== this.mux;\n      }\n    }\n    return false;\n  }\n  close() {\n    this.subs.forEach(sub => {\n      sub.close();\n    });\n  }\n}\nclass ProtocolHandler {\n  connected;\n  connectedOnce;\n  infoReceived;\n  info;\n  muxSubscriptions;\n  options;\n  outbound;\n  pongs;\n  subscriptions;\n  transport;\n  noMorePublishing;\n  connectError;\n  publisher;\n  _closed;\n  closed;\n  listeners;\n  heartbeats;\n  parser;\n  outMsgs;\n  inMsgs;\n  outBytes;\n  inBytes;\n  pendingLimit;\n  lastError;\n  abortReconnect;\n  servers;\n  server;\n  features;\n  connectPromise;\n  constructor(options, publisher) {\n    this._closed = false;\n    this.connected = false;\n    this.connectedOnce = false;\n    this.infoReceived = false;\n    this.noMorePublishing = false;\n    this.abortReconnect = false;\n    this.listeners = [];\n    this.pendingLimit = FLUSH_THRESHOLD;\n    this.outMsgs = 0;\n    this.inMsgs = 0;\n    this.outBytes = 0;\n    this.inBytes = 0;\n    this.options = options;\n    this.publisher = publisher;\n    this.subscriptions = new Subscriptions();\n    this.muxSubscriptions = new MuxSubscription();\n    this.outbound = new DataBuffer();\n    this.pongs = [];\n    this.pendingLimit = options.pendingLimit || this.pendingLimit;\n    this.features = new Features({\n      major: 0,\n      minor: 0,\n      micro: 0\n    });\n    this.connectPromise = null;\n    const servers = typeof options.servers === \"string\" ? [options.servers] : options.servers;\n    this.servers = new Servers(servers, {\n      randomize: !options.noRandomize\n    });\n    this.closed = deferred();\n    this.parser = new Parser(this);\n    this.heartbeats = new Heartbeat(this, this.options.pingInterval || DEFAULT_PING_INTERVAL, this.options.maxPingOut || DEFAULT_MAX_PING_OUT);\n  }\n  resetOutbound() {\n    this.outbound.reset();\n    const pongs = this.pongs;\n    this.pongs = [];\n    const err = NatsError.errorForCode(ErrorCode.Disconnect);\n    err.stack = \"\";\n    pongs.forEach(p => {\n      p.reject(err);\n    });\n    this.parser = new Parser(this);\n    this.infoReceived = false;\n  }\n  dispatchStatus(status) {\n    this.listeners.forEach(q => {\n      q.push(status);\n    });\n  }\n  status() {\n    const iter = new QueuedIteratorImpl();\n    this.listeners.push(iter);\n    return iter;\n  }\n  prepare() {\n    if (this.transport) {\n      this.transport.discard();\n    }\n    this.info = undefined;\n    this.resetOutbound();\n    const pong = deferred();\n    pong.catch(() => {});\n    this.pongs.unshift(pong);\n    this.connectError = err => {\n      pong.reject(err);\n    };\n    this.transport = newTransport();\n    this.transport.closed().then(async _err => {\n      this.connected = false;\n      if (!this.isClosed()) {\n        await this.disconnected(this.transport.closeError || this.lastError);\n        return;\n      }\n    });\n    return pong;\n  }\n  disconnect() {\n    this.dispatchStatus({\n      type: DebugEvents.StaleConnection,\n      data: \"\"\n    });\n    this.transport.disconnect();\n  }\n  reconnect() {\n    if (this.connected) {\n      this.dispatchStatus({\n        type: DebugEvents.ClientInitiatedReconnect,\n        data: \"\"\n      });\n      this.transport.disconnect();\n    }\n    return Promise.resolve();\n  }\n  async disconnected(err) {\n    this.dispatchStatus({\n      type: Events.Disconnect,\n      data: this.servers.getCurrentServer().toString()\n    });\n    if (this.options.reconnect) {\n      await this.dialLoop().then(() => {\n        this.dispatchStatus({\n          type: Events.Reconnect,\n          data: this.servers.getCurrentServer().toString()\n        });\n        if (this.lastError?.code === ErrorCode.AuthenticationExpired) {\n          this.lastError = undefined;\n        }\n      }).catch(err => {\n        this._close(err);\n      });\n    } else {\n      await this._close(err);\n    }\n  }\n  async dial(srv) {\n    const pong = this.prepare();\n    let timer;\n    try {\n      timer = timeout(this.options.timeout || 20000);\n      const cp = this.transport.connect(srv, this.options);\n      await Promise.race([cp, timer]);\n      (async () => {\n        try {\n          for await (const b of this.transport) {\n            this.parser.parse(b);\n          }\n        } catch (err) {\n          console.log(\"reader closed\", err);\n        }\n      })().then();\n    } catch (err) {\n      pong.reject(err);\n    }\n    try {\n      await Promise.race([timer, pong]);\n      if (timer) {\n        timer.cancel();\n      }\n      this.connected = true;\n      this.connectError = undefined;\n      this.sendSubscriptions();\n      this.connectedOnce = true;\n      this.server.didConnect = true;\n      this.server.reconnects = 0;\n      this.flushPending();\n      this.heartbeats.start();\n    } catch (err) {\n      if (timer) {\n        timer.cancel();\n      }\n      await this.transport.close(err);\n      throw err;\n    }\n  }\n  async _doDial(srv) {\n    const alts = await srv.resolve({\n      fn: getResolveFn(),\n      debug: this.options.debug,\n      randomize: !this.options.noRandomize\n    });\n    let lastErr = null;\n    for (const a of alts) {\n      try {\n        lastErr = null;\n        this.dispatchStatus({\n          type: DebugEvents.Reconnecting,\n          data: a.toString()\n        });\n        await this.dial(a);\n        return;\n      } catch (err) {\n        lastErr = err;\n      }\n    }\n    throw lastErr;\n  }\n  dialLoop() {\n    if (this.connectPromise === null) {\n      this.connectPromise = this.dodialLoop();\n      this.connectPromise.then(() => {}).catch(() => {}).finally(() => {\n        this.connectPromise = null;\n      });\n    }\n    return this.connectPromise;\n  }\n  async dodialLoop() {\n    let lastError;\n    while (true) {\n      if (this._closed) {\n        this.servers.clear();\n      }\n      const wait = this.options.reconnectDelayHandler ? this.options.reconnectDelayHandler() : DEFAULT_RECONNECT_TIME_WAIT;\n      let maxWait = wait;\n      const srv = this.selectServer();\n      if (!srv || this.abortReconnect) {\n        if (lastError) {\n          throw lastError;\n        } else if (this.lastError) {\n          throw this.lastError;\n        } else {\n          throw NatsError.errorForCode(ErrorCode.ConnectionRefused);\n        }\n      }\n      const now = Date.now();\n      if (srv.lastConnect === 0 || srv.lastConnect + wait <= now) {\n        srv.lastConnect = Date.now();\n        try {\n          await this._doDial(srv);\n          break;\n        } catch (err) {\n          lastError = err;\n          if (!this.connectedOnce) {\n            if (this.options.waitOnFirstConnect) {\n              continue;\n            }\n            this.servers.removeCurrentServer();\n          }\n          srv.reconnects++;\n          const mra = this.options.maxReconnectAttempts || 0;\n          if (mra !== -1 && srv.reconnects >= mra) {\n            this.servers.removeCurrentServer();\n          }\n        }\n      } else {\n        maxWait = Math.min(maxWait, srv.lastConnect + wait - now);\n        await delay(maxWait);\n      }\n    }\n  }\n  static async connect(options, publisher) {\n    const h = new ProtocolHandler(options, publisher);\n    await h.dialLoop();\n    return h;\n  }\n  static toError(s) {\n    const t = s ? s.toLowerCase() : \"\";\n    if (t.indexOf(\"permissions violation\") !== -1) {\n      const err = new NatsError(s, ErrorCode.PermissionsViolation);\n      const m = s.match(/(Publish|Subscription) to \"(\\S+)\"/);\n      if (m) {\n        err.permissionContext = {\n          operation: m[1].toLowerCase(),\n          subject: m[2]\n        };\n      }\n      return err;\n    } else if (t.indexOf(\"authorization violation\") !== -1) {\n      return new NatsError(s, ErrorCode.AuthorizationViolation);\n    } else if (t.indexOf(\"user authentication expired\") !== -1) {\n      return new NatsError(s, ErrorCode.AuthenticationExpired);\n    } else if (t.indexOf(\"authentication timeout\") !== -1) {\n      return new NatsError(s, ErrorCode.AuthenticationTimeout);\n    } else {\n      return new NatsError(s, ErrorCode.ProtocolError);\n    }\n  }\n  processMsg(msg, data) {\n    this.inMsgs++;\n    this.inBytes += data.length;\n    if (!this.subscriptions.sidCounter) {\n      return;\n    }\n    const sub = this.subscriptions.get(msg.sid);\n    if (!sub) {\n      return;\n    }\n    sub.received += 1;\n    if (sub.callback) {\n      sub.callback(null, new MsgImpl(msg, data, this));\n    }\n    if (sub.max !== undefined && sub.received >= sub.max) {\n      sub.unsubscribe();\n    }\n  }\n  processError(m) {\n    const s = decode(m);\n    const err = ProtocolHandler.toError(s);\n    const status = {\n      type: Events.Error,\n      data: err.code\n    };\n    if (err.isPermissionError()) {\n      let isMuxPermissionError = false;\n      if (err.permissionContext) {\n        status.permissionContext = err.permissionContext;\n        const mux = this.subscriptions.getMux();\n        isMuxPermissionError = mux?.subject === err.permissionContext.subject;\n      }\n      this.subscriptions.handleError(err);\n      this.muxSubscriptions.handleError(isMuxPermissionError, err);\n      if (isMuxPermissionError) {\n        this.subscriptions.setMux(null);\n      }\n    }\n    this.dispatchStatus(status);\n    this.handleError(err);\n  }\n  handleError(err) {\n    if (err.isAuthError()) {\n      this.handleAuthError(err);\n    } else if (err.isProtocolError()) {\n      this.lastError = err;\n    } else if (err.isAuthTimeout()) {\n      this.lastError = err;\n    }\n    if (!err.isPermissionError()) {\n      this.lastError = err;\n    }\n  }\n  handleAuthError(err) {\n    if (this.lastError && err.code === this.lastError.code && this.options.ignoreAuthErrorAbort === false) {\n      this.abortReconnect = true;\n    }\n    if (this.connectError) {\n      this.connectError(err);\n    } else {\n      this.disconnect();\n    }\n  }\n  processPing() {\n    this.transport.send(PONG_CMD);\n  }\n  processPong() {\n    const cb = this.pongs.shift();\n    if (cb) {\n      cb.resolve();\n    }\n  }\n  processInfo(m) {\n    const info = JSON.parse(decode(m));\n    this.info = info;\n    const updates = this.options && this.options.ignoreClusterUpdates ? undefined : this.servers.update(info);\n    if (!this.infoReceived) {\n      this.features.update(parseSemVer(info.version));\n      this.infoReceived = true;\n      if (this.transport.isEncrypted()) {\n        this.servers.updateTLSName();\n      }\n      const {\n        version,\n        lang\n      } = this.transport;\n      try {\n        const c = new Connect({\n          version,\n          lang\n        }, this.options, info.nonce);\n        if (info.headers) {\n          c.headers = true;\n          c.no_responders = true;\n        }\n        const cs = JSON.stringify(c);\n        this.transport.send(encode(`CONNECT ${cs}${CR_LF}`));\n        this.transport.send(PING_CMD);\n      } catch (err) {\n        this._close(err);\n      }\n    }\n    if (updates) {\n      this.dispatchStatus({\n        type: Events.Update,\n        data: updates\n      });\n    }\n    const ldm = info.ldm !== undefined ? info.ldm : false;\n    if (ldm) {\n      this.dispatchStatus({\n        type: Events.LDM,\n        data: this.servers.getCurrentServer().toString()\n      });\n    }\n  }\n  push(e) {\n    switch (e.kind) {\n      case Kind.MSG:\n        {\n          const {\n            msg,\n            data\n          } = e;\n          this.processMsg(msg, data);\n          break;\n        }\n      case Kind.OK:\n        break;\n      case Kind.ERR:\n        this.processError(e.data);\n        break;\n      case Kind.PING:\n        this.processPing();\n        break;\n      case Kind.PONG:\n        this.processPong();\n        break;\n      case Kind.INFO:\n        this.processInfo(e.data);\n        break;\n    }\n  }\n  sendCommand(cmd, ...payloads) {\n    const len = this.outbound.length();\n    let buf;\n    if (typeof cmd === \"string\") {\n      buf = encode(cmd);\n    } else {\n      buf = cmd;\n    }\n    this.outbound.fill(buf, ...payloads);\n    if (len === 0) {\n      queueMicrotask(() => {\n        this.flushPending();\n      });\n    } else if (this.outbound.size() >= this.pendingLimit) {\n      this.flushPending();\n    }\n  }\n  publish(subject, payload = Empty, options) {\n    let data;\n    if (payload instanceof Uint8Array) {\n      data = payload;\n    } else if (typeof payload === \"string\") {\n      data = TE.encode(payload);\n    } else {\n      throw NatsError.errorForCode(ErrorCode.BadPayload);\n    }\n    let len = data.length;\n    options = options || {};\n    options.reply = options.reply || \"\";\n    let headers = Empty;\n    let hlen = 0;\n    if (options.headers) {\n      if (this.info && !this.info.headers) {\n        throw new NatsError(\"headers\", ErrorCode.ServerOptionNotAvailable);\n      }\n      const hdrs = options.headers;\n      headers = hdrs.encode();\n      hlen = headers.length;\n      len = data.length + hlen;\n    }\n    if (this.info && len > this.info.max_payload) {\n      throw NatsError.errorForCode(ErrorCode.MaxPayloadExceeded);\n    }\n    this.outBytes += len;\n    this.outMsgs++;\n    let proto;\n    if (options.headers) {\n      if (options.reply) {\n        proto = `HPUB ${subject} ${options.reply} ${hlen} ${len}\\r\\n`;\n      } else {\n        proto = `HPUB ${subject} ${hlen} ${len}\\r\\n`;\n      }\n      this.sendCommand(proto, headers, data, CRLF);\n    } else {\n      if (options.reply) {\n        proto = `PUB ${subject} ${options.reply} ${len}\\r\\n`;\n      } else {\n        proto = `PUB ${subject} ${len}\\r\\n`;\n      }\n      this.sendCommand(proto, data, CRLF);\n    }\n  }\n  request(r) {\n    this.initMux();\n    this.muxSubscriptions.add(r);\n    return r;\n  }\n  subscribe(s) {\n    this.subscriptions.add(s);\n    this._subunsub(s);\n    return s;\n  }\n  _sub(s) {\n    if (s.queue) {\n      this.sendCommand(`SUB ${s.subject} ${s.queue} ${s.sid}\\r\\n`);\n    } else {\n      this.sendCommand(`SUB ${s.subject} ${s.sid}\\r\\n`);\n    }\n  }\n  _subunsub(s) {\n    this._sub(s);\n    if (s.max) {\n      this.unsubscribe(s, s.max);\n    }\n    return s;\n  }\n  unsubscribe(s, max) {\n    this.unsub(s, max);\n    if (s.max === undefined || s.received >= s.max) {\n      this.subscriptions.cancel(s);\n    }\n  }\n  unsub(s, max) {\n    if (!s || this.isClosed()) {\n      return;\n    }\n    if (max) {\n      this.sendCommand(`UNSUB ${s.sid} ${max}\\r\\n`);\n    } else {\n      this.sendCommand(`UNSUB ${s.sid}\\r\\n`);\n    }\n    s.max = max;\n  }\n  resub(s, subject) {\n    if (!s || this.isClosed()) {\n      return;\n    }\n    s.subject = subject;\n    this.subscriptions.resub(s);\n    this._sub(s);\n  }\n  flush(p) {\n    if (!p) {\n      p = deferred();\n    }\n    this.pongs.push(p);\n    this.outbound.fill(PING_CMD);\n    this.flushPending();\n    return p;\n  }\n  sendSubscriptions() {\n    const cmds = [];\n    this.subscriptions.all().forEach(s => {\n      const sub = s;\n      if (sub.queue) {\n        cmds.push(`SUB ${sub.subject} ${sub.queue} ${sub.sid}${CR_LF}`);\n      } else {\n        cmds.push(`SUB ${sub.subject} ${sub.sid}${CR_LF}`);\n      }\n    });\n    if (cmds.length) {\n      this.transport.send(encode(cmds.join(\"\")));\n    }\n  }\n  async _close(err) {\n    if (this._closed) {\n      return;\n    }\n    this.heartbeats.cancel();\n    if (this.connectError) {\n      this.connectError(err);\n      this.connectError = undefined;\n    }\n    this.muxSubscriptions.close();\n    this.subscriptions.close();\n    this.listeners.forEach(l => {\n      l.stop();\n    });\n    this._closed = true;\n    await this.transport.close(err);\n    await this.closed.resolve(err);\n  }\n  close() {\n    return this._close();\n  }\n  isClosed() {\n    return this._closed;\n  }\n  drain() {\n    const subs = this.subscriptions.all();\n    const promises = [];\n    subs.forEach(sub => {\n      promises.push(sub.drain());\n    });\n    return Promise.all(promises).then(async () => {\n      this.noMorePublishing = true;\n      await this.flush();\n      return this.close();\n    }).catch(() => {});\n  }\n  flushPending() {\n    if (!this.infoReceived || !this.connected) {\n      return;\n    }\n    if (this.outbound.size()) {\n      const d = this.outbound.drain();\n      this.transport.send(d);\n    }\n  }\n  initMux() {\n    const mux = this.subscriptions.getMux();\n    if (!mux) {\n      const inbox = this.muxSubscriptions.init(this.options.inboxPrefix);\n      const sub = new SubscriptionImpl(this, `${inbox}*`);\n      sub.callback = this.muxSubscriptions.dispatcher();\n      this.subscriptions.setMux(sub);\n      this.subscribe(sub);\n    }\n  }\n  selectServer() {\n    const server = this.servers.selectServer();\n    if (server === undefined) {\n      return undefined;\n    }\n    this.server = server;\n    return this.server;\n  }\n  getServer() {\n    return this.server;\n  }\n}\nclass BaseRequest {\n  token;\n  received;\n  ctx;\n  requestSubject;\n  mux;\n  constructor(mux, requestSubject, asyncTraces = true) {\n    this.mux = mux;\n    this.requestSubject = requestSubject;\n    this.received = 0;\n    this.token = nuid.next();\n    if (asyncTraces) {\n      this.ctx = new Error();\n    }\n  }\n}\nclass RequestMany extends BaseRequest {\n  callback;\n  done;\n  timer;\n  max;\n  opts;\n  constructor(mux, requestSubject, opts = {\n    maxWait: 1000\n  }) {\n    super(mux, requestSubject);\n    this.opts = opts;\n    if (typeof this.opts.callback !== \"function\") {\n      throw new Error(\"callback is required\");\n    }\n    this.callback = this.opts.callback;\n    this.max = typeof opts.maxMessages === \"number\" && opts.maxMessages > 0 ? opts.maxMessages : -1;\n    this.done = deferred();\n    this.done.then(() => {\n      this.callback(null, null);\n    });\n    this.timer = setTimeout(() => {\n      this.cancel();\n    }, opts.maxWait);\n  }\n  cancel(err) {\n    if (err) {\n      this.callback(err, null);\n    }\n    clearTimeout(this.timer);\n    this.mux.cancel(this);\n    this.done.resolve();\n  }\n  resolver(err, msg) {\n    if (err) {\n      if (this.ctx) {\n        err.stack += `\\n\\n${this.ctx.stack}`;\n      }\n      this.cancel(err);\n    } else {\n      this.callback(null, msg);\n      if (this.opts.strategy === RequestStrategy.Count) {\n        this.max--;\n        if (this.max === 0) {\n          this.cancel();\n        }\n      }\n      if (this.opts.strategy === RequestStrategy.JitterTimer) {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n          this.cancel();\n        }, this.opts.jitter || 300);\n      }\n      if (this.opts.strategy === RequestStrategy.SentinelMsg) {\n        if (msg && msg.data.length === 0) {\n          this.cancel();\n        }\n      }\n    }\n  }\n}\nclass RequestOne extends BaseRequest {\n  deferred;\n  timer;\n  constructor(mux, requestSubject, opts = {\n    timeout: 1000\n  }, asyncTraces = true) {\n    super(mux, requestSubject, asyncTraces);\n    this.deferred = deferred();\n    this.timer = timeout(opts.timeout, asyncTraces);\n  }\n  resolver(err, msg) {\n    if (this.timer) {\n      this.timer.cancel();\n    }\n    if (err) {\n      if (this.ctx) {\n        err.stack += `\\n\\n${this.ctx.stack}`;\n      }\n      this.deferred.reject(err);\n    } else {\n      this.deferred.resolve(msg);\n    }\n    this.cancel();\n  }\n  cancel(err) {\n    if (this.timer) {\n      this.timer.cancel();\n    }\n    this.mux.cancel(this);\n    this.deferred.reject(err ? err : NatsError.errorForCode(ErrorCode.Cancelled));\n  }\n}\nfunction validateDurableName(name) {\n  return minValidation(\"durable\", name);\n}\nfunction validateStreamName(name) {\n  return minValidation(\"stream\", name);\n}\nfunction minValidation(context, name = \"\") {\n  if (name === \"\") {\n    throw Error(`${context} name required`);\n  }\n  const bad = [\".\", \"*\", \">\", \"/\", \"\\\\\", \" \", \"\\t\", \"\\n\", \"\\r\"];\n  bad.forEach(v => {\n    if (name.indexOf(v) !== -1) {\n      switch (v) {\n        case \"\\n\":\n          v = \"\\\\n\";\n          break;\n        case \"\\r\":\n          v = \"\\\\r\";\n          break;\n        case \"\\t\":\n          v = \"\\\\t\";\n          break;\n        default:\n      }\n      throw Error(`invalid ${context} name - ${context} name cannot contain '${v}'`);\n    }\n  });\n  return \"\";\n}\nfunction validateName(context, name = \"\") {\n  if (name === \"\") {\n    throw Error(`${context} name required`);\n  }\n  const m = validName(name);\n  if (m.length) {\n    throw new Error(`invalid ${context} name - ${context} name ${m}`);\n  }\n}\nfunction validName(name = \"\") {\n  if (name === \"\") {\n    throw Error(`name required`);\n  }\n  const RE = /^[-\\w]+$/g;\n  const m = name.match(RE);\n  if (m === null) {\n    for (const c of name.split(\"\")) {\n      const mm = c.match(RE);\n      if (mm === null) {\n        return `cannot contain '${c}'`;\n      }\n    }\n  }\n  return \"\";\n}\nfunction nanos(millis) {\n  return millis * 1000000;\n}\nfunction millis(ns) {\n  return Math.floor(ns / 1000000);\n}\nfunction isFlowControlMsg(msg) {\n  if (msg.data.length > 0) {\n    return false;\n  }\n  const h = msg.headers;\n  if (!h) {\n    return false;\n  }\n  return h.code >= 100 && h.code < 200;\n}\nfunction isHeartbeatMsg(msg) {\n  return isFlowControlMsg(msg) && msg.headers?.description === \"Idle Heartbeat\";\n}\nfunction newJsErrorMsg(code, description, subject) {\n  const h = headers(code, description);\n  const arg = {\n    hdr: 1,\n    sid: 0,\n    size: 0\n  };\n  const msg = new MsgImpl(arg, Empty, {});\n  msg._headers = h;\n  msg._subject = subject;\n  return msg;\n}\nfunction checkJsError(msg) {\n  if (msg.data.length !== 0) {\n    return null;\n  }\n  const h = msg.headers;\n  if (!h) {\n    return null;\n  }\n  return checkJsErrorCode(h.code, h.description);\n}\nvar Js409Errors;\n(function (Js409Errors) {\n  Js409Errors[\"MaxBatchExceeded\"] = \"exceeded maxrequestbatch of\";\n  Js409Errors[\"MaxExpiresExceeded\"] = \"exceeded maxrequestexpires of\";\n  Js409Errors[\"MaxBytesExceeded\"] = \"exceeded maxrequestmaxbytes of\";\n  Js409Errors[\"MaxMessageSizeExceeded\"] = \"message size exceeds maxbytes\";\n  Js409Errors[\"PushConsumer\"] = \"consumer is push based\";\n  Js409Errors[\"MaxWaitingExceeded\"] = \"exceeded maxwaiting\";\n  Js409Errors[\"IdleHeartbeatMissed\"] = \"idle heartbeats missed\";\n  Js409Errors[\"ConsumerDeleted\"] = \"consumer deleted\";\n})(Js409Errors || (Js409Errors = {}));\nlet MAX_WAITING_FAIL = false;\nfunction isTerminal409(err) {\n  if (err.code !== ErrorCode.JetStream409) {\n    return false;\n  }\n  const fatal = [Js409Errors.MaxBatchExceeded, Js409Errors.MaxExpiresExceeded, Js409Errors.MaxBytesExceeded, Js409Errors.MaxMessageSizeExceeded, Js409Errors.PushConsumer, Js409Errors.IdleHeartbeatMissed, Js409Errors.ConsumerDeleted];\n  if (MAX_WAITING_FAIL) {\n    fatal.push(Js409Errors.MaxWaitingExceeded);\n  }\n  return fatal.find(s => {\n    return err.message.indexOf(s) !== -1;\n  }) !== undefined;\n}\nfunction checkJsErrorCode(code, description = \"\") {\n  if (code < 300) {\n    return null;\n  }\n  description = description.toLowerCase();\n  switch (code) {\n    case 404:\n      return new NatsError(description, ErrorCode.JetStream404NoMessages);\n    case 408:\n      return new NatsError(description, ErrorCode.JetStream408RequestTimeout);\n    case 409:\n      {\n        const ec = description.startsWith(Js409Errors.IdleHeartbeatMissed) ? ErrorCode.JetStreamIdleHeartBeat : ErrorCode.JetStream409;\n        return new NatsError(description, ec);\n      }\n    case 503:\n      return NatsError.errorForCode(ErrorCode.JetStreamNotEnabled, new Error(description));\n    default:\n      if (description === \"\") {\n        description = ErrorCode.Unknown;\n      }\n      return new NatsError(description, `${code}`);\n  }\n}\nconst defaultPrefix = \"$JS.API\";\nfunction defaultJsOptions(opts) {\n  opts = opts || {};\n  if (opts.domain) {\n    opts.apiPrefix = `$JS.${opts.domain}.API`;\n    delete opts.domain;\n  }\n  return extend({\n    apiPrefix: defaultPrefix,\n    timeout: 5000\n  }, opts);\n}\nclass BaseApiClient {\n  nc;\n  opts;\n  prefix;\n  timeout;\n  jc;\n  constructor(nc, opts) {\n    this.nc = nc;\n    this.opts = defaultJsOptions(opts);\n    this._parseOpts();\n    this.prefix = this.opts.apiPrefix;\n    this.timeout = this.opts.timeout;\n    this.jc = JSONCodec();\n  }\n  getOptions() {\n    return Object.assign({}, this.opts);\n  }\n  _parseOpts() {\n    let prefix = this.opts.apiPrefix;\n    if (!prefix || prefix.length === 0) {\n      throw new Error(\"invalid empty prefix\");\n    }\n    const c = prefix[prefix.length - 1];\n    if (c === \".\") {\n      prefix = prefix.substr(0, prefix.length - 1);\n    }\n    this.opts.apiPrefix = prefix;\n  }\n  async _request(subj, data = null, opts) {\n    opts = opts || {};\n    opts.timeout = this.timeout;\n    let a = Empty;\n    if (data) {\n      a = this.jc.encode(data);\n    }\n    const m = await this.nc.request(subj, a, opts);\n    return this.parseJsResponse(m);\n  }\n  async findStream(subject) {\n    const q = {\n      subject\n    };\n    const r = await this._request(`${this.prefix}.STREAM.NAMES`, q);\n    const names = r;\n    if (!names.streams || names.streams.length !== 1) {\n      throw new Error(\"no stream matches subject\");\n    }\n    return names.streams[0];\n  }\n  getConnection() {\n    return this.nc;\n  }\n  parseJsResponse(m) {\n    const v = this.jc.decode(m.data);\n    const r = v;\n    if (r.error) {\n      const err = checkJsErrorCode(r.error.code, r.error.description);\n      if (err !== null) {\n        err.api_error = r.error;\n        throw err;\n      }\n    }\n    return v;\n  }\n}\nclass Base64Codec {\n  static encode(bytes) {\n    if (typeof bytes === \"string\") {\n      return btoa(bytes);\n    }\n    const a = Array.from(bytes);\n    return btoa(String.fromCharCode(...a));\n  }\n  static decode(s, binary = false) {\n    const bin = atob(s);\n    if (!binary) {\n      return bin;\n    }\n    return Uint8Array.from(bin, c => c.charCodeAt(0));\n  }\n}\nclass Base64UrlPaddedCodec {\n  static encode(bytes) {\n    return Base64UrlPaddedCodec.toB64URLEncoding(Base64Codec.encode(bytes));\n  }\n  static decode(s, binary = false) {\n    return Base64UrlPaddedCodec.decode(Base64UrlPaddedCodec.fromB64URLEncoding(s), binary);\n  }\n  static toB64URLEncoding(b64str) {\n    return b64str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n  }\n  static fromB64URLEncoding(b64str) {\n    return b64str.replace(/_/g, \"/\").replace(/-/g, \"+\");\n  }\n}\nvar RetentionPolicy;\n(function (RetentionPolicy) {\n  RetentionPolicy[\"Limits\"] = \"limits\";\n  RetentionPolicy[\"Interest\"] = \"interest\";\n  RetentionPolicy[\"Workqueue\"] = \"workqueue\";\n})(RetentionPolicy || (RetentionPolicy = {}));\nvar DiscardPolicy;\n(function (DiscardPolicy) {\n  DiscardPolicy[\"Old\"] = \"old\";\n  DiscardPolicy[\"New\"] = \"new\";\n})(DiscardPolicy || (DiscardPolicy = {}));\nvar StorageType;\n(function (StorageType) {\n  StorageType[\"File\"] = \"file\";\n  StorageType[\"Memory\"] = \"memory\";\n})(StorageType || (StorageType = {}));\nvar DeliverPolicy;\n(function (DeliverPolicy) {\n  DeliverPolicy[\"All\"] = \"all\";\n  DeliverPolicy[\"Last\"] = \"last\";\n  DeliverPolicy[\"New\"] = \"new\";\n  DeliverPolicy[\"StartSequence\"] = \"by_start_sequence\";\n  DeliverPolicy[\"StartTime\"] = \"by_start_time\";\n  DeliverPolicy[\"LastPerSubject\"] = \"last_per_subject\";\n})(DeliverPolicy || (DeliverPolicy = {}));\nvar AckPolicy;\n(function (AckPolicy) {\n  AckPolicy[\"None\"] = \"none\";\n  AckPolicy[\"All\"] = \"all\";\n  AckPolicy[\"Explicit\"] = \"explicit\";\n  AckPolicy[\"NotSet\"] = \"\";\n})(AckPolicy || (AckPolicy = {}));\nvar ReplayPolicy;\n(function (ReplayPolicy) {\n  ReplayPolicy[\"Instant\"] = \"instant\";\n  ReplayPolicy[\"Original\"] = \"original\";\n})(ReplayPolicy || (ReplayPolicy = {}));\nvar StoreCompression;\n(function (StoreCompression) {\n  StoreCompression[\"None\"] = \"none\";\n  StoreCompression[\"S2\"] = \"s2\";\n})(StoreCompression || (StoreCompression = {}));\nvar ConsumerApiAction;\n(function (ConsumerApiAction) {\n  ConsumerApiAction[\"CreateOrUpdate\"] = \"\";\n  ConsumerApiAction[\"Update\"] = \"update\";\n  ConsumerApiAction[\"Create\"] = \"create\";\n})(ConsumerApiAction || (ConsumerApiAction = {}));\nfunction defaultConsumer(name, opts = {}) {\n  return Object.assign({\n    name: name,\n    deliver_policy: DeliverPolicy.All,\n    ack_policy: AckPolicy.Explicit,\n    ack_wait: nanos(30 * 1000),\n    replay_policy: ReplayPolicy.Instant\n  }, opts);\n}\nvar AdvisoryKind;\n(function (AdvisoryKind) {\n  AdvisoryKind[\"API\"] = \"api_audit\";\n  AdvisoryKind[\"StreamAction\"] = \"stream_action\";\n  AdvisoryKind[\"ConsumerAction\"] = \"consumer_action\";\n  AdvisoryKind[\"SnapshotCreate\"] = \"snapshot_create\";\n  AdvisoryKind[\"SnapshotComplete\"] = \"snapshot_complete\";\n  AdvisoryKind[\"RestoreCreate\"] = \"restore_create\";\n  AdvisoryKind[\"RestoreComplete\"] = \"restore_complete\";\n  AdvisoryKind[\"MaxDeliver\"] = \"max_deliver\";\n  AdvisoryKind[\"Terminated\"] = \"terminated\";\n  AdvisoryKind[\"Ack\"] = \"consumer_ack\";\n  AdvisoryKind[\"StreamLeaderElected\"] = \"stream_leader_elected\";\n  AdvisoryKind[\"StreamQuorumLost\"] = \"stream_quorum_lost\";\n  AdvisoryKind[\"ConsumerLeaderElected\"] = \"consumer_leader_elected\";\n  AdvisoryKind[\"ConsumerQuorumLost\"] = \"consumer_quorum_lost\";\n})(AdvisoryKind || (AdvisoryKind = {}));\nvar JsHeaders;\n(function (JsHeaders) {\n  JsHeaders[\"StreamSourceHdr\"] = \"Nats-Stream-Source\";\n  JsHeaders[\"LastConsumerSeqHdr\"] = \"Nats-Last-Consumer\";\n  JsHeaders[\"LastStreamSeqHdr\"] = \"Nats-Last-Stream\";\n  JsHeaders[\"ConsumerStalledHdr\"] = \"Nats-Consumer-Stalled\";\n  JsHeaders[\"MessageSizeHdr\"] = \"Nats-Msg-Size\";\n  JsHeaders[\"RollupHdr\"] = \"Nats-Rollup\";\n  JsHeaders[\"RollupValueSubject\"] = \"sub\";\n  JsHeaders[\"RollupValueAll\"] = \"all\";\n  JsHeaders[\"PendingMessagesHdr\"] = \"Nats-Pending-Messages\";\n  JsHeaders[\"PendingBytesHdr\"] = \"Nats-Pending-Bytes\";\n})(JsHeaders || (JsHeaders = {}));\nvar KvWatchInclude;\n(function (KvWatchInclude) {\n  KvWatchInclude[\"LastValue\"] = \"\";\n  KvWatchInclude[\"AllHistory\"] = \"history\";\n  KvWatchInclude[\"UpdatesOnly\"] = \"updates\";\n})(KvWatchInclude || (KvWatchInclude = {}));\nvar DirectMsgHeaders;\n(function (DirectMsgHeaders) {\n  DirectMsgHeaders[\"Stream\"] = \"Nats-Stream\";\n  DirectMsgHeaders[\"Sequence\"] = \"Nats-Sequence\";\n  DirectMsgHeaders[\"TimeStamp\"] = \"Nats-Time-Stamp\";\n  DirectMsgHeaders[\"Subject\"] = \"Nats-Subject\";\n})(DirectMsgHeaders || (DirectMsgHeaders = {}));\nvar RepublishHeaders;\n(function (RepublishHeaders) {\n  RepublishHeaders[\"Stream\"] = \"Nats-Stream\";\n  RepublishHeaders[\"Subject\"] = \"Nats-Subject\";\n  RepublishHeaders[\"Sequence\"] = \"Nats-Sequence\";\n  RepublishHeaders[\"LastSequence\"] = \"Nats-Last-Sequence\";\n  RepublishHeaders[\"Size\"] = \"Nats-Msg-Size\";\n})(RepublishHeaders || (RepublishHeaders = {}));\nconst kvPrefix = \"KV_\";\nclass ConsumerOptsBuilderImpl {\n  config;\n  ordered;\n  mack;\n  stream;\n  callbackFn;\n  max;\n  qname;\n  isBind;\n  filters;\n  constructor(opts) {\n    this.stream = \"\";\n    this.mack = false;\n    this.ordered = false;\n    this.config = defaultConsumer(\"\", opts || {});\n  }\n  getOpts() {\n    const o = {};\n    o.config = Object.assign({}, this.config);\n    if (o.config.filter_subject) {\n      this.filterSubject(o.config.filter_subject);\n      o.config.filter_subject = undefined;\n    }\n    if (o.config.filter_subjects) {\n      o.config.filter_subjects?.forEach(v => {\n        this.filterSubject(v);\n      });\n      o.config.filter_subjects = undefined;\n    }\n    o.mack = this.mack;\n    o.stream = this.stream;\n    o.callbackFn = this.callbackFn;\n    o.max = this.max;\n    o.queue = this.qname;\n    o.ordered = this.ordered;\n    o.config.ack_policy = o.ordered ? AckPolicy.None : o.config.ack_policy;\n    o.isBind = o.isBind || false;\n    if (this.filters) {\n      switch (this.filters.length) {\n        case 0:\n          break;\n        case 1:\n          o.config.filter_subject = this.filters[0];\n          break;\n        default:\n          o.config.filter_subjects = this.filters;\n      }\n    }\n    return o;\n  }\n  description(description) {\n    this.config.description = description;\n    return this;\n  }\n  deliverTo(subject) {\n    this.config.deliver_subject = subject;\n    return this;\n  }\n  durable(name) {\n    validateDurableName(name);\n    this.config.durable_name = name;\n    return this;\n  }\n  startSequence(seq) {\n    if (seq <= 0) {\n      throw new Error(\"sequence must be greater than 0\");\n    }\n    this.config.deliver_policy = DeliverPolicy.StartSequence;\n    this.config.opt_start_seq = seq;\n    return this;\n  }\n  startTime(time) {\n    this.config.deliver_policy = DeliverPolicy.StartTime;\n    this.config.opt_start_time = time.toISOString();\n    return this;\n  }\n  deliverAll() {\n    this.config.deliver_policy = DeliverPolicy.All;\n    return this;\n  }\n  deliverLastPerSubject() {\n    this.config.deliver_policy = DeliverPolicy.LastPerSubject;\n    return this;\n  }\n  deliverLast() {\n    this.config.deliver_policy = DeliverPolicy.Last;\n    return this;\n  }\n  deliverNew() {\n    this.config.deliver_policy = DeliverPolicy.New;\n    return this;\n  }\n  startAtTimeDelta(millis) {\n    this.startTime(new Date(Date.now() - millis));\n    return this;\n  }\n  headersOnly() {\n    this.config.headers_only = true;\n    return this;\n  }\n  ackNone() {\n    this.config.ack_policy = AckPolicy.None;\n    return this;\n  }\n  ackAll() {\n    this.config.ack_policy = AckPolicy.All;\n    return this;\n  }\n  ackExplicit() {\n    this.config.ack_policy = AckPolicy.Explicit;\n    return this;\n  }\n  ackWait(millis) {\n    this.config.ack_wait = nanos(millis);\n    return this;\n  }\n  maxDeliver(max) {\n    this.config.max_deliver = max;\n    return this;\n  }\n  filterSubject(s) {\n    this.filters = this.filters || [];\n    this.filters.push(s);\n    return this;\n  }\n  replayInstantly() {\n    this.config.replay_policy = ReplayPolicy.Instant;\n    return this;\n  }\n  replayOriginal() {\n    this.config.replay_policy = ReplayPolicy.Original;\n    return this;\n  }\n  sample(n) {\n    n = Math.trunc(n);\n    if (n < 0 || n > 100) {\n      throw new Error(`value must be between 0-100`);\n    }\n    this.config.sample_freq = `${n}%`;\n    return this;\n  }\n  limit(n) {\n    this.config.rate_limit_bps = n;\n    return this;\n  }\n  maxWaiting(max) {\n    this.config.max_waiting = max;\n    return this;\n  }\n  maxAckPending(max) {\n    this.config.max_ack_pending = max;\n    return this;\n  }\n  idleHeartbeat(millis) {\n    this.config.idle_heartbeat = nanos(millis);\n    return this;\n  }\n  flowControl() {\n    this.config.flow_control = true;\n    return this;\n  }\n  deliverGroup(name) {\n    this.queue(name);\n    return this;\n  }\n  manualAck() {\n    this.mack = true;\n    return this;\n  }\n  maxMessages(max) {\n    this.max = max;\n    return this;\n  }\n  callback(fn) {\n    this.callbackFn = fn;\n    return this;\n  }\n  queue(n) {\n    this.qname = n;\n    this.config.deliver_group = n;\n    return this;\n  }\n  orderedConsumer() {\n    this.ordered = true;\n    return this;\n  }\n  bind(stream, durable) {\n    this.stream = stream;\n    this.config.durable_name = durable;\n    this.isBind = true;\n    return this;\n  }\n  bindStream(stream) {\n    this.stream = stream;\n    return this;\n  }\n  inactiveEphemeralThreshold(millis) {\n    this.config.inactive_threshold = nanos(millis);\n    return this;\n  }\n  maxPullBatch(n) {\n    this.config.max_batch = n;\n    return this;\n  }\n  maxPullRequestExpires(millis) {\n    this.config.max_expires = nanos(millis);\n    return this;\n  }\n  memory() {\n    this.config.mem_storage = true;\n    return this;\n  }\n  numReplicas(n) {\n    this.config.num_replicas = n;\n    return this;\n  }\n}\nfunction consumerOpts(opts) {\n  return new ConsumerOptsBuilderImpl(opts);\n}\nfunction isConsumerOptsBuilder(o) {\n  return typeof o.getOpts === \"function\";\n}\nfunction getLengths(b64) {\n  const len = b64.length;\n  let validLen = b64.indexOf(\"=\");\n  if (validLen === -1) {\n    validLen = len;\n  }\n  const placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n}\nfunction init(lookup, revLookup, urlsafe = false) {\n  function _byteLength(validLen, placeHoldersLen) {\n    return Math.floor((validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen);\n  }\n  function tripletToBase64(num) {\n    return lookup[num >> 18 & 0x3f] + lookup[num >> 12 & 0x3f] + lookup[num >> 6 & 0x3f] + lookup[num & 0x3f];\n  }\n  function encodeChunk(buf, start, end) {\n    const out = new Array((end - start) / 3);\n    for (let i = start, curTriplet = 0; i < end; i += 3) {\n      out[curTriplet++] = tripletToBase64((buf[i] << 16) + (buf[i + 1] << 8) + buf[i + 2]);\n    }\n    return out.join(\"\");\n  }\n  return {\n    byteLength(b64) {\n      return _byteLength.apply(null, getLengths(b64));\n    },\n    toUint8Array(b64) {\n      const [validLen, placeHoldersLen] = getLengths(b64);\n      const buf = new Uint8Array(_byteLength(validLen, placeHoldersLen));\n      const len = placeHoldersLen ? validLen - 4 : validLen;\n      let tmp;\n      let curByte = 0;\n      let i;\n      for (i = 0; i < len; i += 4) {\n        tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n        buf[curByte++] = tmp >> 16 & 0xff;\n        buf[curByte++] = tmp >> 8 & 0xff;\n        buf[curByte++] = tmp & 0xff;\n      }\n      if (placeHoldersLen === 2) {\n        tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n        buf[curByte++] = tmp & 0xff;\n      } else if (placeHoldersLen === 1) {\n        tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n        buf[curByte++] = tmp >> 8 & 0xff;\n        buf[curByte++] = tmp & 0xff;\n      }\n      return buf;\n    },\n    fromUint8Array(buf) {\n      const maxChunkLength = 16383;\n      const len = buf.length;\n      const extraBytes = len % 3;\n      const len2 = len - extraBytes;\n      const parts = new Array(Math.ceil(len2 / 16383) + (extraBytes ? 1 : 0));\n      let curChunk = 0;\n      let chunkEnd;\n      for (let i = 0; i < len2; i += maxChunkLength) {\n        chunkEnd = i + maxChunkLength;\n        parts[curChunk++] = encodeChunk(buf, i, chunkEnd > len2 ? len2 : chunkEnd);\n      }\n      let tmp;\n      if (extraBytes === 1) {\n        tmp = buf[len2];\n        parts[curChunk] = lookup[tmp >> 2] + lookup[tmp << 4 & 0x3f];\n        if (!urlsafe) parts[curChunk] += \"==\";\n      } else if (extraBytes === 2) {\n        tmp = buf[len2] << 8 | buf[len2 + 1] & 0xff;\n        parts[curChunk] = lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3f] + lookup[tmp << 2 & 0x3f];\n        if (!urlsafe) parts[curChunk] += \"=\";\n      }\n      return parts.join(\"\");\n    }\n  };\n}\nconst lookup = [];\nconst revLookup = [];\nconst code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\nfor (let i = 0, l = code.length; i < l; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n}\nconst {\n  byteLength,\n  toUint8Array,\n  fromUint8Array\n} = init(lookup, revLookup, true);\nconst decoder = new TextDecoder();\nconst encoder = new TextEncoder();\nfunction toHexString(buf) {\n  return buf.reduce((hex, __byte) => `${hex}${__byte < 16 ? \"0\" : \"\"}${__byte.toString(16)}`, \"\");\n}\nfunction fromHexString(hex) {\n  const len = hex.length;\n  if (len % 2 || !/^[0-9a-fA-F]+$/.test(hex)) {\n    throw new TypeError(\"Invalid hex string.\");\n  }\n  hex = hex.toLowerCase();\n  const buf = new Uint8Array(Math.floor(len / 2));\n  const end = len / 2;\n  for (let i = 0; i < end; ++i) {\n    buf[i] = parseInt(hex.substr(i * 2, 2), 16);\n  }\n  return buf;\n}\nfunction decode2(buf, encoding = \"utf8\") {\n  if (/^utf-?8$/i.test(encoding)) {\n    return decoder.decode(buf);\n  } else if (/^base64$/i.test(encoding)) {\n    return fromUint8Array(buf);\n  } else if (/^hex(?:adecimal)?$/i.test(encoding)) {\n    return toHexString(buf);\n  } else {\n    throw new TypeError(\"Unsupported string encoding.\");\n  }\n}\nfunction encode2(str, encoding = \"utf8\") {\n  if (/^utf-?8$/i.test(encoding)) {\n    return encoder.encode(str);\n  } else if (/^base64$/i.test(encoding)) {\n    return toUint8Array(str);\n  } else if (/^hex(?:adecimal)?$/i.test(encoding)) {\n    return fromHexString(str);\n  } else {\n    throw new TypeError(\"Unsupported string encoding.\");\n  }\n}\nclass SHA256 {\n  hashSize = 32;\n  _buf;\n  _bufIdx;\n  _count;\n  _K;\n  _H;\n  _finalized;\n  constructor() {\n    this._buf = new Uint8Array(64);\n    this._K = new Uint32Array([0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2]);\n    this.init();\n  }\n  init() {\n    this._H = new Uint32Array([0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19]);\n    this._bufIdx = 0;\n    this._count = new Uint32Array(2);\n    this._buf.fill(0);\n    this._finalized = false;\n    return this;\n  }\n  update(msg, inputEncoding) {\n    if (msg === null) {\n      throw new TypeError(\"msg must be a string or Uint8Array.\");\n    } else if (typeof msg === \"string\") {\n      msg = encode2(msg, inputEncoding);\n    }\n    for (let i = 0, len = msg.length; i < len; i++) {\n      this._buf[this._bufIdx++] = msg[i];\n      if (this._bufIdx === 64) {\n        this._transform();\n        this._bufIdx = 0;\n      }\n    }\n    const c = this._count;\n    if ((c[0] += msg.length << 3) < msg.length << 3) {\n      c[1]++;\n    }\n    c[1] += msg.length >>> 29;\n    return this;\n  }\n  digest(outputEncoding) {\n    if (this._finalized) {\n      throw new Error(\"digest has already been called.\");\n    }\n    this._finalized = true;\n    const b = this._buf;\n    let idx = this._bufIdx;\n    b[idx++] = 0x80;\n    while (idx !== 56) {\n      if (idx === 64) {\n        this._transform();\n        idx = 0;\n      }\n      b[idx++] = 0;\n    }\n    const c = this._count;\n    b[56] = c[1] >>> 24 & 0xff;\n    b[57] = c[1] >>> 16 & 0xff;\n    b[58] = c[1] >>> 8 & 0xff;\n    b[59] = c[1] >>> 0 & 0xff;\n    b[60] = c[0] >>> 24 & 0xff;\n    b[61] = c[0] >>> 16 & 0xff;\n    b[62] = c[0] >>> 8 & 0xff;\n    b[63] = c[0] >>> 0 & 0xff;\n    this._transform();\n    const hash = new Uint8Array(32);\n    for (let i = 0; i < 8; i++) {\n      hash[(i << 2) + 0] = this._H[i] >>> 24 & 0xff;\n      hash[(i << 2) + 1] = this._H[i] >>> 16 & 0xff;\n      hash[(i << 2) + 2] = this._H[i] >>> 8 & 0xff;\n      hash[(i << 2) + 3] = this._H[i] >>> 0 & 0xff;\n    }\n    this.init();\n    return outputEncoding ? decode2(hash, outputEncoding) : hash;\n  }\n  _transform() {\n    const h = this._H;\n    let h0 = h[0];\n    let h1 = h[1];\n    let h2 = h[2];\n    let h3 = h[3];\n    let h4 = h[4];\n    let h5 = h[5];\n    let h6 = h[6];\n    let h7 = h[7];\n    const w = new Uint32Array(16);\n    let i;\n    for (i = 0; i < 16; i++) {\n      w[i] = this._buf[(i << 2) + 3] | this._buf[(i << 2) + 2] << 8 | this._buf[(i << 2) + 1] << 16 | this._buf[i << 2] << 24;\n    }\n    for (i = 0; i < 64; i++) {\n      let tmp;\n      if (i < 16) {\n        tmp = w[i];\n      } else {\n        let a = w[i + 1 & 15];\n        let b = w[i + 14 & 15];\n        tmp = w[i & 15] = (a >>> 7 ^ a >>> 18 ^ a >>> 3 ^ a << 25 ^ a << 14) + (b >>> 17 ^ b >>> 19 ^ b >>> 10 ^ b << 15 ^ b << 13) + w[i & 15] + w[i + 9 & 15] | 0;\n      }\n      tmp = tmp + h7 + (h4 >>> 6 ^ h4 >>> 11 ^ h4 >>> 25 ^ h4 << 26 ^ h4 << 21 ^ h4 << 7) + (h6 ^ h4 & (h5 ^ h6)) + this._K[i] | 0;\n      h7 = h6;\n      h6 = h5;\n      h5 = h4;\n      h4 = h3 + tmp;\n      h3 = h2;\n      h2 = h1;\n      h1 = h0;\n      h0 = tmp + (h1 & h2 ^ h3 & (h1 ^ h2)) + (h1 >>> 2 ^ h1 >>> 13 ^ h1 >>> 22 ^ h1 << 30 ^ h1 << 19 ^ h1 << 10) | 0;\n    }\n    h[0] = h[0] + h0 | 0;\n    h[1] = h[1] + h1 | 0;\n    h[2] = h[2] + h2 | 0;\n    h[3] = h[3] + h3 | 0;\n    h[4] = h[4] + h4 | 0;\n    h[5] = h[5] + h5 | 0;\n    h[6] = h[6] + h6 | 0;\n    h[7] = h[7] + h7 | 0;\n  }\n}\nclass ListerImpl {\n  err;\n  offset;\n  pageInfo;\n  subject;\n  jsm;\n  filter;\n  payload;\n  constructor(subject, filter, jsm, payload) {\n    if (!subject) {\n      throw new Error(\"subject is required\");\n    }\n    this.subject = subject;\n    this.jsm = jsm;\n    this.offset = 0;\n    this.pageInfo = {};\n    this.filter = filter;\n    this.payload = payload || {};\n  }\n  async next() {\n    if (this.err) {\n      return [];\n    }\n    if (this.pageInfo && this.offset >= this.pageInfo.total) {\n      return [];\n    }\n    const offset = {\n      offset: this.offset\n    };\n    if (this.payload) {\n      Object.assign(offset, this.payload);\n    }\n    try {\n      const r = await this.jsm._request(this.subject, offset, {\n        timeout: this.jsm.timeout\n      });\n      this.pageInfo = r;\n      this.offset += this.countResponse(r);\n      const a = this.filter(r);\n      return a;\n    } catch (err) {\n      this.err = err;\n      throw err;\n    }\n  }\n  countResponse(r) {\n    switch (r?.type) {\n      case \"io.nats.jetstream.api.v1.stream_names_response\":\n      case \"io.nats.jetstream.api.v1.stream_list_response\":\n        return r.streams.length;\n      case \"io.nats.jetstream.api.v1.consumer_list_response\":\n        return r.consumers.length;\n      default:\n        console.error(`jslister.ts: unknown API response for paged output: ${r?.type}`);\n        return r.streams?.length || 0;\n    }\n    return 0;\n  }\n  async *[Symbol.asyncIterator]() {\n    let page = await this.next();\n    while (page.length > 0) {\n      for (const item of page) {\n        yield item;\n      }\n      page = await this.next();\n    }\n  }\n}\nclass ConsumerAPIImpl extends BaseApiClient {\n  constructor(nc, opts) {\n    super(nc, opts);\n  }\n  async add(stream, cfg, action = ConsumerApiAction.Create) {\n    validateStreamName(stream);\n    if (cfg.deliver_group && cfg.flow_control) {\n      throw new Error(\"jetstream flow control is not supported with queue groups\");\n    }\n    if (cfg.deliver_group && cfg.idle_heartbeat) {\n      throw new Error(\"jetstream idle heartbeat is not supported with queue groups\");\n    }\n    const cr = {};\n    cr.config = cfg;\n    cr.stream_name = stream;\n    cr.action = action;\n    if (cr.config.durable_name) {\n      validateDurableName(cr.config.durable_name);\n    }\n    const nci = this.nc;\n    let {\n      min,\n      ok: newAPI\n    } = nci.features.get(Feature.JS_NEW_CONSUMER_CREATE_API);\n    const name = cfg.name === \"\" ? undefined : cfg.name;\n    if (name && !newAPI) {\n      throw new Error(`consumer 'name' requires server ${min}`);\n    }\n    if (name) {\n      try {\n        minValidation(\"name\", name);\n      } catch (err) {\n        const m = err.message;\n        const idx = m.indexOf(\"cannot contain\");\n        if (idx !== -1) {\n          throw new Error(`consumer 'name' ${m.substring(idx)}`);\n        }\n        throw err;\n      }\n    }\n    let subj;\n    let consumerName = \"\";\n    if (Array.isArray(cfg.filter_subjects)) {\n      const {\n        min,\n        ok\n      } = nci.features.get(Feature.JS_MULTIPLE_CONSUMER_FILTER);\n      if (!ok) {\n        throw new Error(`consumer 'filter_subjects' requires server ${min}`);\n      }\n      newAPI = false;\n    }\n    if (cfg.metadata) {\n      const {\n        min,\n        ok\n      } = nci.features.get(Feature.JS_STREAM_CONSUMER_METADATA);\n      if (!ok) {\n        throw new Error(`consumer 'metadata' requires server ${min}`);\n      }\n    }\n    if (newAPI) {\n      consumerName = cfg.name ?? cfg.durable_name ?? \"\";\n    }\n    if (consumerName !== \"\") {\n      let fs = cfg.filter_subject ?? undefined;\n      if (fs === \">\") {\n        fs = undefined;\n      }\n      subj = fs !== undefined ? `${this.prefix}.CONSUMER.CREATE.${stream}.${consumerName}.${fs}` : `${this.prefix}.CONSUMER.CREATE.${stream}.${consumerName}`;\n    } else {\n      subj = cfg.durable_name ? `${this.prefix}.CONSUMER.DURABLE.CREATE.${stream}.${cfg.durable_name}` : `${this.prefix}.CONSUMER.CREATE.${stream}`;\n    }\n    const r = await this._request(subj, cr);\n    return r;\n  }\n  async update(stream, durable, cfg) {\n    const ci = await this.info(stream, durable);\n    const changable = cfg;\n    return this.add(stream, Object.assign(ci.config, changable), ConsumerApiAction.Update);\n  }\n  async info(stream, name) {\n    validateStreamName(stream);\n    validateDurableName(name);\n    const r = await this._request(`${this.prefix}.CONSUMER.INFO.${stream}.${name}`);\n    return r;\n  }\n  async delete(stream, name) {\n    validateStreamName(stream);\n    validateDurableName(name);\n    const r = await this._request(`${this.prefix}.CONSUMER.DELETE.${stream}.${name}`);\n    const cr = r;\n    return cr.success;\n  }\n  list(stream) {\n    validateStreamName(stream);\n    const filter = v => {\n      const clr = v;\n      return clr.consumers;\n    };\n    const subj = `${this.prefix}.CONSUMER.LIST.${stream}`;\n    return new ListerImpl(subj, filter, this);\n  }\n}\nconst ACK = Uint8Array.of(43, 65, 67, 75);\nconst NAK = Uint8Array.of(45, 78, 65, 75);\nconst WPI = Uint8Array.of(43, 87, 80, 73);\nconst NXT = Uint8Array.of(43, 78, 88, 84);\nconst TERM = Uint8Array.of(43, 84, 69, 82, 77);\nconst SPACE = Uint8Array.of(32);\nfunction toJsMsg(m) {\n  return new JsMsgImpl(m);\n}\nfunction parseInfo(s) {\n  const tokens = s.split(\".\");\n  if (tokens.length === 9) {\n    tokens.splice(2, 0, \"_\", \"\");\n  }\n  if (tokens.length < 11 || tokens[0] !== \"$JS\" || tokens[1] !== \"ACK\") {\n    throw new Error(`not js message`);\n  }\n  const di = {};\n  di.domain = tokens[2] === \"_\" ? \"\" : tokens[2];\n  di.account_hash = tokens[3];\n  di.stream = tokens[4];\n  di.consumer = tokens[5];\n  di.redeliveryCount = parseInt(tokens[6], 10);\n  di.redelivered = di.redeliveryCount > 1;\n  di.streamSequence = parseInt(tokens[7], 10);\n  di.deliverySequence = parseInt(tokens[8], 10);\n  di.timestampNanos = parseInt(tokens[9], 10);\n  di.pending = parseInt(tokens[10], 10);\n  return di;\n}\nclass JsMsgImpl {\n  msg;\n  di;\n  didAck;\n  constructor(msg) {\n    this.msg = msg;\n    this.didAck = false;\n  }\n  get subject() {\n    return this.msg.subject;\n  }\n  get sid() {\n    return this.msg.sid;\n  }\n  get data() {\n    return this.msg.data;\n  }\n  get headers() {\n    return this.msg.headers;\n  }\n  get info() {\n    if (!this.di) {\n      this.di = parseInfo(this.reply);\n    }\n    return this.di;\n  }\n  get redelivered() {\n    return this.info.redeliveryCount > 1;\n  }\n  get reply() {\n    return this.msg.reply || \"\";\n  }\n  get seq() {\n    return this.info.streamSequence;\n  }\n  doAck(payload) {\n    if (!this.didAck) {\n      this.didAck = !this.isWIP(payload);\n      this.msg.respond(payload);\n    }\n  }\n  isWIP(p) {\n    return p.length === 4 && p[0] === WPI[0] && p[1] === WPI[1] && p[2] === WPI[2] && p[3] === WPI[3];\n  }\n  async ackAck() {\n    if (!this.didAck) {\n      this.didAck = true;\n      if (this.msg.reply) {\n        const mi = this.msg;\n        const proto = mi.publisher;\n        const trace = !(proto.options?.noAsyncTraces || false);\n        const r = new RequestOne(proto.muxSubscriptions, this.msg.reply, {\n          timeout: 1000\n        }, trace);\n        proto.request(r);\n        try {\n          proto.publish(this.msg.reply, ACK, {\n            reply: `${proto.muxSubscriptions.baseInbox}${r.token}`\n          });\n        } catch (err) {\n          r.cancel(err);\n        }\n        try {\n          await Promise.race([r.timer, r.deferred]);\n          return true;\n        } catch (err) {\n          r.cancel(err);\n        }\n      }\n    }\n    return false;\n  }\n  ack() {\n    this.doAck(ACK);\n  }\n  nak(millis) {\n    let payload = NAK;\n    if (millis) {\n      payload = StringCodec().encode(`-NAK ${JSON.stringify({\n        delay: nanos(millis)\n      })}`);\n    }\n    this.doAck(payload);\n  }\n  working() {\n    this.doAck(WPI);\n  }\n  next(subj, opts = {\n    batch: 1\n  }) {\n    const args = {};\n    args.batch = opts.batch || 1;\n    args.no_wait = opts.no_wait || false;\n    if (opts.expires && opts.expires > 0) {\n      args.expires = nanos(opts.expires);\n    }\n    const data = JSONCodec().encode(args);\n    const payload = DataBuffer.concat(NXT, SPACE, data);\n    const reqOpts = subj ? {\n      reply: subj\n    } : undefined;\n    this.msg.respond(payload, reqOpts);\n  }\n  term(reason = \"\") {\n    let term = TERM;\n    if (reason?.length > 0) {\n      term = StringCodec().encode(`+TERM ${reason}`);\n    }\n    this.doAck(term);\n  }\n  json() {\n    return this.msg.json();\n  }\n  string() {\n    return this.msg.string();\n  }\n}\nfunction checkFn(fn, name, required = false) {\n  if (required === true && !fn) {\n    throw NatsError.errorForCode(ErrorCode.ApiError, new Error(`${name} is not a function`));\n  }\n  if (fn && typeof fn !== \"function\") {\n    throw NatsError.errorForCode(ErrorCode.ApiError, new Error(`${name} is not a function`));\n  }\n}\nclass TypedSubscription extends QueuedIteratorImpl {\n  sub;\n  adapter;\n  subIterDone;\n  constructor(nc, subject, opts) {\n    super();\n    checkFn(opts.adapter, \"adapter\", true);\n    this.adapter = opts.adapter;\n    if (opts.callback) {\n      checkFn(opts.callback, \"callback\");\n    }\n    this.noIterator = typeof opts.callback === \"function\";\n    if (opts.ingestionFilterFn) {\n      checkFn(opts.ingestionFilterFn, \"ingestionFilterFn\");\n      this.ingestionFilterFn = opts.ingestionFilterFn;\n    }\n    if (opts.protocolFilterFn) {\n      checkFn(opts.protocolFilterFn, \"protocolFilterFn\");\n      this.protocolFilterFn = opts.protocolFilterFn;\n    }\n    if (opts.dispatchedFn) {\n      checkFn(opts.dispatchedFn, \"dispatchedFn\");\n      this.dispatchedFn = opts.dispatchedFn;\n    }\n    if (opts.cleanupFn) {\n      checkFn(opts.cleanupFn, \"cleanupFn\");\n    }\n    let callback = (err, msg) => {\n      this.callback(err, msg);\n    };\n    if (opts.callback) {\n      const uh = opts.callback;\n      callback = (err, msg) => {\n        const [jer, tm] = this.adapter(err, msg);\n        if (jer) {\n          uh(jer, null);\n          return;\n        }\n        const {\n          ingest\n        } = this.ingestionFilterFn ? this.ingestionFilterFn(tm, this) : {\n          ingest: true\n        };\n        if (ingest) {\n          const ok = this.protocolFilterFn ? this.protocolFilterFn(tm) : true;\n          if (ok) {\n            uh(jer, tm);\n            if (this.dispatchedFn && tm) {\n              this.dispatchedFn(tm);\n            }\n          }\n        }\n      };\n    }\n    const {\n      max,\n      queue,\n      timeout\n    } = opts;\n    const sopts = {\n      queue,\n      timeout,\n      callback\n    };\n    if (max && max > 0) {\n      sopts.max = max;\n    }\n    this.sub = nc.subscribe(subject, sopts);\n    if (opts.cleanupFn) {\n      this.sub.cleanupFn = opts.cleanupFn;\n    }\n    if (!this.noIterator) {\n      this.iterClosed.then(() => {\n        this.unsubscribe();\n      });\n    }\n    this.subIterDone = deferred();\n    Promise.all([this.sub.closed, this.iterClosed]).then(() => {\n      this.subIterDone.resolve();\n    }).catch(() => {\n      this.subIterDone.resolve();\n    });\n    (async s => {\n      await s.closed;\n      this.stop();\n    })(this.sub).then().catch();\n  }\n  unsubscribe(max) {\n    this.sub.unsubscribe(max);\n  }\n  drain() {\n    return this.sub.drain();\n  }\n  isDraining() {\n    return this.sub.isDraining();\n  }\n  isClosed() {\n    return this.sub.isClosed();\n  }\n  callback(e, msg) {\n    this.sub.cancelTimeout();\n    const [err, tm] = this.adapter(e, msg);\n    if (err) {\n      this.stop(err);\n    }\n    if (tm) {\n      this.push(tm);\n    }\n  }\n  getSubject() {\n    return this.sub.getSubject();\n  }\n  getReceived() {\n    return this.sub.getReceived();\n  }\n  getProcessed() {\n    return this.sub.getProcessed();\n  }\n  getPending() {\n    return this.sub.getPending();\n  }\n  getID() {\n    return this.sub.getID();\n  }\n  getMax() {\n    return this.sub.getMax();\n  }\n  get closed() {\n    return this.sub.closed;\n  }\n}\nclass IdleHeartbeatMonitor {\n  interval;\n  maxOut;\n  cancelAfter;\n  timer;\n  autoCancelTimer;\n  last;\n  missed;\n  count;\n  callback;\n  constructor(interval, cb, opts = {\n    maxOut: 2\n  }) {\n    this.interval = interval;\n    this.maxOut = opts?.maxOut || 2;\n    this.cancelAfter = opts?.cancelAfter || 0;\n    this.last = Date.now();\n    this.missed = 0;\n    this.count = 0;\n    this.callback = cb;\n    this._schedule();\n  }\n  cancel() {\n    if (this.autoCancelTimer) {\n      clearTimeout(this.autoCancelTimer);\n    }\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n    this.timer = 0;\n    this.autoCancelTimer = 0;\n  }\n  work() {\n    this.last = Date.now();\n    this.missed = 0;\n  }\n  _change(interval, cancelAfter = 0, maxOut = 2) {\n    this.interval = interval;\n    this.maxOut = maxOut;\n    this.cancelAfter = cancelAfter;\n    this.restart();\n  }\n  restart() {\n    this.cancel();\n    this._schedule();\n  }\n  _schedule() {\n    if (this.cancelAfter > 0) {\n      this.autoCancelTimer = setTimeout(() => {\n        this.cancel();\n      }, this.cancelAfter);\n    }\n    this.timer = setInterval(() => {\n      this.count++;\n      if (Date.now() - this.last > this.interval) {\n        this.missed++;\n      }\n      if (this.missed >= this.maxOut) {\n        try {\n          if (this.callback(this.missed) === true) {\n            this.cancel();\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    }, this.interval);\n  }\n}\nvar PullConsumerType;\n(function (PullConsumerType) {\n  PullConsumerType[PullConsumerType[\"Unset\"] = -1] = \"Unset\";\n  PullConsumerType[PullConsumerType[\"Consume\"] = 0] = \"Consume\";\n  PullConsumerType[PullConsumerType[\"Fetch\"] = 1] = \"Fetch\";\n})(PullConsumerType || (PullConsumerType = {}));\nvar ConsumerEvents;\n(function (ConsumerEvents) {\n  ConsumerEvents[\"HeartbeatsMissed\"] = \"heartbeats_missed\";\n  ConsumerEvents[\"ConsumerNotFound\"] = \"consumer_not_found\";\n  ConsumerEvents[\"OrderedConsumerRecreated\"] = \"ordered_consumer_recreated\";\n})(ConsumerEvents || (ConsumerEvents = {}));\nvar ConsumerDebugEvents;\n(function (ConsumerDebugEvents) {\n  ConsumerDebugEvents[\"DebugEvent\"] = \"debug\";\n  ConsumerDebugEvents[\"Discard\"] = \"discard\";\n  ConsumerDebugEvents[\"Next\"] = \"next\";\n})(ConsumerDebugEvents || (ConsumerDebugEvents = {}));\nclass PullConsumerMessagesImpl extends QueuedIteratorImpl {\n  consumer;\n  opts;\n  sub;\n  monitor;\n  pending;\n  inbox;\n  refilling;\n  stack;\n  pong;\n  callback;\n  timeout;\n  cleanupHandler;\n  listeners;\n  statusIterator;\n  forOrderedConsumer;\n  resetHandler;\n  constructor(c, opts, refilling = false) {\n    super();\n    this.consumer = c;\n    this.opts = this.parseOptions(opts, refilling);\n    this.callback = opts.callback || null;\n    this.noIterator = typeof this.callback === \"function\";\n    this.monitor = null;\n    this.pong = null;\n    this.pending = {\n      msgs: 0,\n      bytes: 0,\n      requests: 0\n    };\n    this.refilling = refilling;\n    this.stack = new Error().stack.split(\"\\n\").slice(1).join(\"\\n\");\n    this.timeout = null;\n    this.inbox = createInbox(c.api.nc.options.inboxPrefix);\n    this.listeners = [];\n    this.forOrderedConsumer = false;\n    this.start();\n  }\n  start() {\n    const {\n      max_messages,\n      max_bytes,\n      idle_heartbeat,\n      threshold_bytes,\n      threshold_messages\n    } = this.opts;\n    this.closed().then(() => {\n      if (this.cleanupHandler) {\n        try {\n          this.cleanupHandler();\n        } catch (_err) {}\n      }\n    });\n    const {\n      sub\n    } = this;\n    if (sub) {\n      sub.unsubscribe();\n    }\n    this.sub = this.consumer.api.nc.subscribe(this.inbox, {\n      callback: (err, msg) => {\n        if (err) {\n          this.stop();\n          return;\n        }\n        this.monitor?.work();\n        const isProtocol = msg.subject === this.inbox;\n        if (isProtocol) {\n          if (isHeartbeatMsg(msg)) {\n            return;\n          }\n          const code = msg.headers?.code;\n          const description = msg.headers?.description?.toLowerCase() || \"unknown\";\n          const {\n            msgsLeft,\n            bytesLeft\n          } = this.parseDiscard(msg.headers);\n          if (msgsLeft > 0 || bytesLeft > 0) {\n            this.pending.msgs -= msgsLeft;\n            this.pending.bytes -= bytesLeft;\n            this.pending.requests--;\n            this.notify(ConsumerDebugEvents.Discard, {\n              msgsLeft,\n              bytesLeft\n            });\n          } else {\n            const toErr = () => {\n              const err = new NatsError(description, `${code}`);\n              err.stack += `\\n\\n${this.stack}`;\n              return err;\n            };\n            if (code === 400) {\n              const error = toErr();\n              this._push(() => {\n                this.stop(error);\n              });\n            } else if (code === 409 && description === \"consumer deleted\") {\n              const error = toErr();\n              this.stop(error);\n            } else {\n              this.notify(ConsumerDebugEvents.DebugEvent, `${code} ${description}`);\n            }\n          }\n        } else {\n          this._push(toJsMsg(msg));\n          this.received++;\n          if (this.pending.msgs) {\n            this.pending.msgs--;\n          }\n          if (this.pending.bytes) {\n            this.pending.bytes -= msg.size();\n          }\n        }\n        if (this.pending.msgs === 0 && this.pending.bytes === 0) {\n          this.pending.requests = 0;\n        }\n        if (this.refilling) {\n          if (max_messages && this.pending.msgs <= threshold_messages || max_bytes && this.pending.bytes <= threshold_bytes) {\n            const batch = this.pullOptions();\n            this.pull(batch);\n          }\n        } else if (this.pending.requests === 0) {\n          this._push(() => {\n            this.stop();\n          });\n        }\n      }\n    });\n    this.sub.closed.then(() => {\n      if (this.sub.draining) {\n        this._push(() => {\n          this.stop();\n        });\n      }\n    });\n    if (idle_heartbeat) {\n      this.monitor = new IdleHeartbeatMonitor(idle_heartbeat, data => {\n        this.notify(ConsumerEvents.HeartbeatsMissed, data);\n        this.resetPending().then(() => {}).catch(() => {});\n        return false;\n      }, {\n        maxOut: 2\n      });\n    }\n    (async () => {\n      const status = this.consumer.api.nc.status();\n      this.statusIterator = status;\n      for await (const s of status) {\n        switch (s.type) {\n          case Events.Disconnect:\n            this.monitor?.cancel();\n            break;\n          case Events.Reconnect:\n            this.resetPending().then(ok => {\n              if (ok) {\n                this.monitor?.restart();\n              }\n            }).catch(() => {});\n            break;\n          default:\n        }\n      }\n    })();\n    this.pull(this.pullOptions());\n  }\n  _push(r) {\n    if (!this.callback) {\n      super.push(r);\n    } else {\n      const fn = typeof r === \"function\" ? r : null;\n      try {\n        if (!fn) {\n          this.callback(r);\n        } else {\n          fn();\n        }\n      } catch (err) {\n        this.stop(err);\n      }\n    }\n  }\n  notify(type, data) {\n    if (this.listeners.length > 0) {\n      (() => {\n        this.listeners.forEach(l => {\n          if (!l.done) {\n            l.push({\n              type,\n              data\n            });\n          }\n        });\n      })();\n    }\n  }\n  async resetPending() {\n    let notFound = 0;\n    const bo = backoff();\n    let attempt = 0;\n    while (true) {\n      if (this.consumer.api.nc.isClosed()) {\n        console.error(\"aborting resetPending - connection is closed\");\n        return false;\n      }\n      try {\n        await this.consumer.info();\n        notFound = 0;\n        this.pending.msgs = 0;\n        this.pending.bytes = 0;\n        this.pending.requests = 0;\n        this.pull(this.pullOptions());\n        return true;\n      } catch (err) {\n        if (err.message === \"consumer not found\") {\n          notFound++;\n          this.notify(ConsumerEvents.ConsumerNotFound, notFound);\n          if (this.resetHandler) {\n            try {\n              this.resetHandler();\n            } catch (_) {}\n          }\n          if (this.forOrderedConsumer) {\n            return false;\n          }\n        } else {\n          notFound = 0;\n        }\n        const to = bo.backoff(attempt);\n        await Promise.race([delay(to), this.consumer.api.nc.closed()]);\n        attempt++;\n      }\n    }\n  }\n  pull(opts) {\n    this.pending.bytes += opts.max_bytes ?? 0;\n    this.pending.msgs += opts.batch ?? 0;\n    this.pending.requests++;\n    const nc = this.consumer.api.nc;\n    this._push(() => {\n      nc.publish(`${this.consumer.api.prefix}.CONSUMER.MSG.NEXT.${this.consumer.stream}.${this.consumer.name}`, this.consumer.api.jc.encode(opts), {\n        reply: this.inbox\n      });\n      this.notify(ConsumerDebugEvents.Next, opts);\n    });\n  }\n  pullOptions() {\n    const batch = this.opts.max_messages - this.pending.msgs;\n    const max_bytes = this.opts.max_bytes - this.pending.bytes;\n    const idle_heartbeat = nanos(this.opts.idle_heartbeat);\n    const expires = nanos(this.opts.expires);\n    return {\n      batch,\n      max_bytes,\n      idle_heartbeat,\n      expires\n    };\n  }\n  parseDiscard(headers) {\n    const discard = {\n      msgsLeft: 0,\n      bytesLeft: 0\n    };\n    const msgsLeft = headers?.get(JsHeaders.PendingMessagesHdr);\n    if (msgsLeft) {\n      discard.msgsLeft = parseInt(msgsLeft);\n    }\n    const bytesLeft = headers?.get(JsHeaders.PendingBytesHdr);\n    if (bytesLeft) {\n      discard.bytesLeft = parseInt(bytesLeft);\n    }\n    return discard;\n  }\n  trackTimeout(t) {\n    this.timeout = t;\n  }\n  close() {\n    this.stop();\n    return this.iterClosed;\n  }\n  closed() {\n    return this.iterClosed;\n  }\n  clearTimers() {\n    this.monitor?.cancel();\n    this.monitor = null;\n    this.timeout?.cancel();\n    this.timeout = null;\n  }\n  setCleanupHandler(fn) {\n    this.cleanupHandler = fn;\n  }\n  stop(err) {\n    this.sub?.unsubscribe();\n    this.clearTimers();\n    this.statusIterator?.stop();\n    this._push(() => {\n      super.stop(err);\n      this.listeners.forEach(n => {\n        n.stop();\n      });\n    });\n  }\n  parseOptions(opts, refilling = false) {\n    const args = opts || {};\n    args.max_messages = args.max_messages || 0;\n    args.max_bytes = args.max_bytes || 0;\n    if (args.max_messages !== 0 && args.max_bytes !== 0) {\n      throw new Error(`only specify one of max_messages or max_bytes`);\n    }\n    if (args.max_messages === 0) {\n      args.max_messages = 100;\n    }\n    args.expires = args.expires || 30_000;\n    if (args.expires < 1000) {\n      throw new Error(\"expires should be at least 1000ms\");\n    }\n    args.idle_heartbeat = args.idle_heartbeat || args.expires / 2;\n    args.idle_heartbeat = args.idle_heartbeat > 30_000 ? 30_000 : args.idle_heartbeat;\n    if (refilling) {\n      const minMsgs = Math.round(args.max_messages * .75) || 1;\n      args.threshold_messages = args.threshold_messages || minMsgs;\n      const minBytes = Math.round(args.max_bytes * .75) || 1;\n      args.threshold_bytes = args.threshold_bytes || minBytes;\n    }\n    return args;\n  }\n  status() {\n    const iter = new QueuedIteratorImpl();\n    this.listeners.push(iter);\n    return Promise.resolve(iter);\n  }\n}\nclass OrderedConsumerMessages extends QueuedIteratorImpl {\n  src;\n  listeners;\n  constructor() {\n    super();\n    this.listeners = [];\n  }\n  setSource(src) {\n    if (this.src) {\n      this.src.resetHandler = undefined;\n      this.src.setCleanupHandler();\n      this.src.stop();\n    }\n    this.src = src;\n    this.src.setCleanupHandler(() => {\n      this.close().catch();\n    });\n    (async () => {\n      const status = await this.src.status();\n      for await (const s of status) {\n        this.notify(s.type, s.data);\n      }\n    })().catch(() => {});\n  }\n  notify(type, data) {\n    if (this.listeners.length > 0) {\n      (() => {\n        this.listeners.forEach(l => {\n          if (!l.done) {\n            l.push({\n              type,\n              data\n            });\n          }\n        });\n      })();\n    }\n  }\n  stop(err) {\n    this.src?.stop(err);\n    super.stop(err);\n    this.listeners.forEach(n => {\n      n.stop();\n    });\n  }\n  close() {\n    this.stop();\n    return this.iterClosed;\n  }\n  status() {\n    const iter = new QueuedIteratorImpl();\n    this.listeners.push(iter);\n    return Promise.resolve(iter);\n  }\n}\nclass PullConsumerImpl {\n  api;\n  _info;\n  stream;\n  name;\n  constructor(api, info) {\n    this.api = api;\n    this._info = info;\n    this.stream = info.stream_name;\n    this.name = info.name;\n  }\n  consume(opts = {\n    max_messages: 100,\n    expires: 30_000\n  }) {\n    return Promise.resolve(new PullConsumerMessagesImpl(this, opts, true));\n  }\n  fetch(opts = {\n    max_messages: 100,\n    expires: 30_000\n  }) {\n    const m = new PullConsumerMessagesImpl(this, opts, false);\n    const to = Math.round(m.opts.expires * 1.05);\n    const timer = timeout(to);\n    m.closed().then(() => {\n      timer.cancel();\n    });\n    timer.catch(() => {\n      m.close().catch();\n    });\n    m.trackTimeout(timer);\n    return Promise.resolve(m);\n  }\n  next(opts = {\n    expires: 30_000\n  }) {\n    const d = deferred();\n    const fopts = opts;\n    fopts.max_messages = 1;\n    const iter = new PullConsumerMessagesImpl(this, fopts, false);\n    const to = Math.round(iter.opts.expires * 1.05);\n    if (to >= 60_000) {\n      (async () => {\n        for await (const s of await iter.status()) {\n          if (s.type === ConsumerEvents.HeartbeatsMissed && s.data >= 2) {\n            d.reject(new Error(\"consumer missed heartbeats\"));\n            break;\n          }\n        }\n      })().catch();\n    }\n    (async () => {\n      for await (const m of iter) {\n        d.resolve(m);\n        break;\n      }\n    })().catch();\n    const timer = timeout(to);\n    iter.closed().then(() => {\n      d.resolve(null);\n      timer.cancel();\n    }).catch(err => {\n      d.reject(err);\n    });\n    timer.catch(_err => {\n      d.resolve(null);\n      iter.close().catch();\n    });\n    iter.trackTimeout(timer);\n    return d;\n  }\n  delete() {\n    const {\n      stream_name,\n      name\n    } = this._info;\n    return this.api.delete(stream_name, name);\n  }\n  info(cached = false) {\n    if (cached) {\n      return Promise.resolve(this._info);\n    }\n    const {\n      stream_name,\n      name\n    } = this._info;\n    return this.api.info(stream_name, name).then(ci => {\n      this._info = ci;\n      return this._info;\n    });\n  }\n}\nclass OrderedPullConsumerImpl {\n  api;\n  consumerOpts;\n  consumer;\n  opts;\n  cursor;\n  stream;\n  namePrefix;\n  serial;\n  currentConsumer;\n  userCallback;\n  iter;\n  type;\n  startSeq;\n  constructor(api, stream, opts = {}) {\n    this.api = api;\n    this.stream = stream;\n    this.cursor = {\n      stream_seq: 1,\n      deliver_seq: 0\n    };\n    this.namePrefix = nuid.next();\n    this.serial = 0;\n    this.currentConsumer = null;\n    this.userCallback = null;\n    this.iter = null;\n    this.type = PullConsumerType.Unset;\n    this.consumerOpts = opts;\n    this.startSeq = this.consumerOpts.opt_start_seq || 0;\n    this.cursor.stream_seq = this.startSeq > 0 ? this.startSeq - 1 : 0;\n  }\n  getConsumerOpts(seq) {\n    this.serial++;\n    const name = `${this.namePrefix}_${this.serial}`;\n    seq = seq === 0 ? 1 : seq;\n    const config = {\n      name,\n      deliver_policy: DeliverPolicy.StartSequence,\n      opt_start_seq: seq,\n      ack_policy: AckPolicy.None,\n      inactive_threshold: nanos(5 * 60 * 1000),\n      num_replicas: 1\n    };\n    if (this.consumerOpts.headers_only === true) {\n      config.headers_only = true;\n    }\n    if (Array.isArray(this.consumerOpts.filterSubjects)) {\n      config.filter_subjects = this.consumerOpts.filterSubjects;\n    }\n    if (typeof this.consumerOpts.filterSubjects === \"string\") {\n      config.filter_subject = this.consumerOpts.filterSubjects;\n    }\n    if (seq === this.startSeq + 1) {\n      config.deliver_policy = this.consumerOpts.deliver_policy || DeliverPolicy.StartSequence;\n      if (this.consumerOpts.deliver_policy === DeliverPolicy.LastPerSubject || this.consumerOpts.deliver_policy === DeliverPolicy.New || this.consumerOpts.deliver_policy === DeliverPolicy.Last) {\n        delete config.opt_start_seq;\n        config.deliver_policy = this.consumerOpts.deliver_policy;\n      }\n      if (config.deliver_policy === DeliverPolicy.LastPerSubject) {\n        if (typeof config.filter_subjects === \"undefined\" && typeof config.filter_subject === \"undefined\") {\n          config.filter_subject = \">\";\n        }\n      }\n      if (this.consumerOpts.opt_start_time) {\n        delete config.opt_start_seq;\n        config.deliver_policy = DeliverPolicy.StartTime;\n        config.opt_start_time = this.consumerOpts.opt_start_time;\n      }\n      if (this.consumerOpts.inactive_threshold) {\n        config.inactive_threshold = nanos(this.consumerOpts.inactive_threshold);\n      }\n    }\n    return config;\n  }\n  async resetConsumer(seq = 0) {\n    this.consumer?.delete().catch(() => {});\n    seq = seq === 0 ? 1 : seq;\n    this.cursor.deliver_seq = 0;\n    const config = this.getConsumerOpts(seq);\n    config.max_deliver = 1;\n    config.mem_storage = true;\n    const bo = backoff();\n    let ci;\n    for (let i = 0;; i++) {\n      try {\n        ci = await this.api.add(this.stream, config);\n        this.iter?.notify(ConsumerEvents.OrderedConsumerRecreated, ci.name);\n        break;\n      } catch (err) {\n        if (seq === 0 && i >= 30) {\n          throw err;\n        } else {\n          await delay(bo.backoff(i + 1));\n        }\n      }\n    }\n    return ci;\n  }\n  internalHandler(serial) {\n    return m => {\n      if (this.serial !== serial) {\n        return;\n      }\n      const dseq = m.info.deliverySequence;\n      if (dseq !== this.cursor.deliver_seq + 1) {\n        this.reset(this.opts);\n        return;\n      }\n      this.cursor.deliver_seq = dseq;\n      this.cursor.stream_seq = m.info.streamSequence;\n      if (this.userCallback) {\n        this.userCallback(m);\n      } else {\n        this.iter?.push(m);\n      }\n    };\n  }\n  async reset(opts = {\n    max_messages: 100,\n    expires: 30_000\n  }, fromFetch = false) {\n    this.currentConsumer = await this.resetConsumer(this.cursor.stream_seq + 1);\n    if (this.iter === null) {\n      this.iter = new OrderedConsumerMessages();\n    }\n    this.consumer = new PullConsumerImpl(this.api, this.currentConsumer);\n    const copts = opts;\n    copts.callback = this.internalHandler(this.serial);\n    let msgs = null;\n    if (this.type === PullConsumerType.Fetch && fromFetch) {\n      msgs = await this.consumer.fetch(opts);\n    } else if (this.type === PullConsumerType.Consume) {\n      msgs = await this.consumer.consume(opts);\n    } else {\n      return Promise.reject(\"reset called with unset consumer type\");\n    }\n    const msgsImpl = msgs;\n    msgsImpl.forOrderedConsumer = true;\n    msgsImpl.resetHandler = () => {\n      this.reset(this.opts);\n    };\n    this.iter.setSource(msgsImpl);\n    return this.iter;\n  }\n  consume(opts = {\n    max_messages: 100,\n    expires: 30_000\n  }) {\n    if (this.type === PullConsumerType.Fetch) {\n      return Promise.reject(new Error(\"ordered consumer initialized as fetch\"));\n    }\n    if (this.type === PullConsumerType.Consume) {\n      return Promise.reject(new Error(\"ordered consumer doesn't support concurrent consume\"));\n    }\n    const {\n      callback\n    } = opts;\n    if (callback) {\n      this.userCallback = callback;\n    }\n    this.type = PullConsumerType.Consume;\n    this.opts = opts;\n    return this.reset(opts);\n  }\n  fetch(opts = {\n    max_messages: 100,\n    expires: 30_000\n  }) {\n    if (this.type === PullConsumerType.Consume) {\n      return Promise.reject(new Error(\"ordered consumer already initialized as consume\"));\n    }\n    if (this.iter?.done === false) {\n      return Promise.reject(new Error(\"ordered consumer doesn't support concurrent fetch\"));\n    }\n    const {\n      callback\n    } = opts;\n    if (callback) {\n      this.userCallback = callback;\n    }\n    this.type = PullConsumerType.Fetch;\n    this.opts = opts;\n    this.iter = new OrderedConsumerMessages();\n    return this.reset(opts, true);\n  }\n  async next(opts = {\n    expires: 30_000\n  }) {\n    const d = deferred();\n    const copts = opts;\n    copts.max_messages = 1;\n    copts.callback = m => {\n      this.userCallback = null;\n      d.resolve(m);\n    };\n    const iter = await this.fetch(copts);\n    iter.iterClosed.then(() => {\n      d.resolve(null);\n    }).catch(err => {\n      d.reject(err);\n    });\n    return d;\n  }\n  delete() {\n    if (!this.currentConsumer) {\n      return Promise.resolve(false);\n    }\n    return this.api.delete(this.stream, this.currentConsumer.name).then(tf => {\n      return Promise.resolve(tf);\n    }).catch(err => {\n      return Promise.reject(err);\n    }).finally(() => {\n      this.currentConsumer = null;\n    });\n  }\n  async info(cached) {\n    if (this.currentConsumer == null) {\n      this.currentConsumer = await this.resetConsumer(this.serial);\n      return Promise.resolve(this.currentConsumer);\n    }\n    if (cached && this.currentConsumer) {\n      return Promise.resolve(this.currentConsumer);\n    }\n    return this.api.info(this.stream, this.currentConsumer.name);\n  }\n}\nfunction convertStreamSourceDomain(s) {\n  if (s === undefined) {\n    return undefined;\n  }\n  const {\n    domain\n  } = s;\n  if (domain === undefined) {\n    return s;\n  }\n  const copy = Object.assign({}, s);\n  delete copy.domain;\n  if (domain === \"\") {\n    return copy;\n  }\n  if (copy.external) {\n    throw new Error(\"domain and external are both set\");\n  }\n  copy.external = {\n    api: `$JS.${domain}.API`\n  };\n  return copy;\n}\nvar PubHeaders;\nconst osPrefix = \"OBJ_\";\nclass ConsumersImpl {\n  api;\n  notified;\n  constructor(api) {\n    this.api = api;\n    this.notified = false;\n  }\n  checkVersion() {\n    const fv = this.api.nc.features.get(Feature.JS_SIMPLIFICATION);\n    if (!fv.ok) {\n      return Promise.reject(new Error(`consumers framework is only supported on servers ${fv.min} or better`));\n    }\n    return Promise.resolve();\n  }\n  async get(stream, name = {}) {\n    if (typeof name === \"object\") {\n      return this.ordered(stream, name);\n    }\n    await this.checkVersion();\n    return this.api.info(stream, name).then(ci => {\n      if (ci.config.deliver_subject !== undefined) {\n        return Promise.reject(new Error(\"push consumer not supported\"));\n      }\n      return new PullConsumerImpl(this.api, ci);\n    }).catch(err => {\n      return Promise.reject(err);\n    });\n  }\n  async ordered(stream, opts) {\n    await this.checkVersion();\n    const impl = this.api;\n    const sapi = new StreamAPIImpl(impl.nc, impl.opts);\n    return sapi.info(stream).then(_si => {\n      return Promise.resolve(new OrderedPullConsumerImpl(this.api, stream, opts));\n    }).catch(err => {\n      return Promise.reject(err);\n    });\n  }\n}\nclass StreamImpl {\n  api;\n  _info;\n  constructor(api, info) {\n    this.api = api;\n    this._info = info;\n  }\n  get name() {\n    return this._info.config.name;\n  }\n  alternates() {\n    return this.info().then(si => {\n      return si.alternates ? si.alternates : [];\n    });\n  }\n  async best() {\n    await this.info();\n    if (this._info.alternates) {\n      const asi = await this.api.info(this._info.alternates[0].name);\n      return new StreamImpl(this.api, asi);\n    } else {\n      return this;\n    }\n  }\n  info(cached = false, opts) {\n    if (cached) {\n      return Promise.resolve(this._info);\n    }\n    return this.api.info(this.name, opts).then(si => {\n      this._info = si;\n      return this._info;\n    });\n  }\n  getConsumer(name) {\n    return new ConsumersImpl(new ConsumerAPIImpl(this.api.nc, this.api.opts)).get(this.name, name);\n  }\n  getMessage(query) {\n    return this.api.getMessage(this.name, query);\n  }\n  deleteMessage(seq, erase) {\n    return this.api.deleteMessage(this.name, seq, erase);\n  }\n}\nfunction NoopKvCodecs() {\n  return {\n    key: {\n      encode(k) {\n        return k;\n      },\n      decode(k) {\n        return k;\n      }\n    },\n    value: {\n      encode(v) {\n        return v;\n      },\n      decode(v) {\n        return v;\n      }\n    }\n  };\n}\nfunction defaultBucketOpts() {\n  return {\n    replicas: 1,\n    history: 1,\n    timeout: 2000,\n    maxBucketSize: -1,\n    maxValueSize: -1,\n    codec: NoopKvCodecs(),\n    storage: StorageType.File\n  };\n}\nconst kvOperationHdr = \"KV-Operation\";\nconst kvSubjectPrefix = \"$KV\";\nconst validKeyRe = /^[-/=.\\w]+$/;\nconst validSearchKey = /^[-/=.>*\\w]+$/;\nconst validBucketRe = /^[-\\w]+$/;\nfunction validateKey(k) {\n  if (k.startsWith(\".\") || k.endsWith(\".\") || !validKeyRe.test(k)) {\n    throw new Error(`invalid key: ${k}`);\n  }\n}\nfunction validateSearchKey(k) {\n  if (k.startsWith(\".\") || k.endsWith(\".\") || !validSearchKey.test(k)) {\n    throw new Error(`invalid key: ${k}`);\n  }\n}\nfunction hasWildcards(k) {\n  if (k.startsWith(\".\") || k.endsWith(\".\")) {\n    throw new Error(`invalid key: ${k}`);\n  }\n  const chunks = k.split(\".\");\n  let hasWildcards = false;\n  for (let i = 0; i < chunks.length; i++) {\n    switch (chunks[i]) {\n      case \"*\":\n        hasWildcards = true;\n        break;\n      case \">\":\n        if (i !== chunks.length - 1) {\n          throw new Error(`invalid key: ${k}`);\n        }\n        hasWildcards = true;\n        break;\n      default:\n    }\n  }\n  return hasWildcards;\n}\nfunction validateBucket(name) {\n  if (!validBucketRe.test(name)) {\n    throw new Error(`invalid bucket name: ${name}`);\n  }\n}\n(function (PubHeaders) {\n  PubHeaders[\"MsgIdHdr\"] = \"Nats-Msg-Id\";\n  PubHeaders[\"ExpectedStreamHdr\"] = \"Nats-Expected-Stream\";\n  PubHeaders[\"ExpectedLastSeqHdr\"] = \"Nats-Expected-Last-Sequence\";\n  PubHeaders[\"ExpectedLastMsgIdHdr\"] = \"Nats-Expected-Last-Msg-Id\";\n  PubHeaders[\"ExpectedLastSubjectSequenceHdr\"] = \"Nats-Expected-Last-Subject-Sequence\";\n})(PubHeaders || (PubHeaders = {}));\nclass Bucket {\n  js;\n  jsm;\n  stream;\n  bucket;\n  direct;\n  codec;\n  prefix;\n  editPrefix;\n  useJsPrefix;\n  _prefixLen;\n  constructor(bucket, js, jsm) {\n    validateBucket(bucket);\n    this.js = js;\n    this.jsm = jsm;\n    this.bucket = bucket;\n    this.prefix = kvSubjectPrefix;\n    this.editPrefix = \"\";\n    this.useJsPrefix = false;\n    this._prefixLen = 0;\n  }\n  static async create(js, name, opts = {}) {\n    validateBucket(name);\n    const jsm = await js.jetstreamManager();\n    const bucket = new Bucket(name, js, jsm);\n    await bucket.init(opts);\n    return bucket;\n  }\n  static async bind(js, name, opts = {}) {\n    const jsm = await js.jetstreamManager();\n    const info = await jsm.streams.info(`${kvPrefix}${name}`);\n    validateBucket(info.config.name);\n    const bucket = new Bucket(name, js, jsm);\n    Object.assign(bucket, info);\n    bucket.codec = opts.codec || NoopKvCodecs();\n    bucket.direct = info.config.allow_direct ?? false;\n    bucket.initializePrefixes(info);\n    return bucket;\n  }\n  async init(opts = {}) {\n    const bo = Object.assign(defaultBucketOpts(), opts);\n    this.codec = bo.codec;\n    const sc = {};\n    this.stream = sc.name = opts.streamName ?? this.bucketName();\n    sc.retention = RetentionPolicy.Limits;\n    sc.max_msgs_per_subject = bo.history;\n    if (bo.maxBucketSize) {\n      bo.max_bytes = bo.maxBucketSize;\n    }\n    if (bo.max_bytes) {\n      sc.max_bytes = bo.max_bytes;\n    }\n    sc.max_msg_size = bo.maxValueSize;\n    sc.storage = bo.storage;\n    const location = opts.placementCluster ?? \"\";\n    if (location) {\n      opts.placement = {};\n      opts.placement.cluster = location;\n      opts.placement.tags = [];\n    }\n    if (opts.placement) {\n      sc.placement = opts.placement;\n    }\n    if (opts.republish) {\n      sc.republish = opts.republish;\n    }\n    if (opts.description) {\n      sc.description = opts.description;\n    }\n    if (opts.mirror) {\n      const mirror = Object.assign({}, opts.mirror);\n      if (!mirror.name.startsWith(kvPrefix)) {\n        mirror.name = `${kvPrefix}${mirror.name}`;\n      }\n      sc.mirror = mirror;\n      sc.mirror_direct = true;\n    } else if (opts.sources) {\n      const sources = opts.sources.map(s => {\n        const c = Object.assign({}, s);\n        if (!c.name.startsWith(kvPrefix)) {\n          c.name = `${kvPrefix}${c.name}`;\n        }\n      });\n      sc.sources = sources;\n    } else {\n      sc.subjects = [this.subjectForBucket()];\n    }\n    if (opts.metadata) {\n      sc.metadata = opts.metadata;\n    }\n    if (typeof opts.compression === \"boolean\") {\n      sc.compression = opts.compression ? StoreCompression.S2 : StoreCompression.None;\n    }\n    const nci = this.js.nc;\n    const have = nci.getServerVersion();\n    const discardNew = have ? compare(have, parseSemVer(\"2.7.2\")) >= 0 : false;\n    sc.discard = discardNew ? DiscardPolicy.New : DiscardPolicy.Old;\n    const {\n      ok: direct,\n      min\n    } = nci.features.get(Feature.JS_ALLOW_DIRECT);\n    if (!direct && opts.allow_direct === true) {\n      const v = have ? `${have.major}.${have.minor}.${have.micro}` : \"unknown\";\n      return Promise.reject(new Error(`allow_direct is not available on server version ${v} - requires ${min}`));\n    }\n    opts.allow_direct = typeof opts.allow_direct === \"boolean\" ? opts.allow_direct : direct;\n    sc.allow_direct = opts.allow_direct;\n    this.direct = sc.allow_direct;\n    sc.num_replicas = bo.replicas;\n    if (bo.ttl) {\n      sc.max_age = nanos(bo.ttl);\n    }\n    sc.allow_rollup_hdrs = true;\n    let info;\n    try {\n      info = await this.jsm.streams.info(sc.name);\n      if (!info.config.allow_direct && this.direct === true) {\n        this.direct = false;\n      }\n    } catch (err) {\n      if (err.message === \"stream not found\") {\n        info = await this.jsm.streams.add(sc);\n      } else {\n        throw err;\n      }\n    }\n    this.initializePrefixes(info);\n  }\n  initializePrefixes(info) {\n    this._prefixLen = 0;\n    this.prefix = `$KV.${this.bucket}`;\n    this.useJsPrefix = this.js.apiPrefix !== \"$JS.API\";\n    const {\n      mirror\n    } = info.config;\n    if (mirror) {\n      let n = mirror.name;\n      if (n.startsWith(kvPrefix)) {\n        n = n.substring(kvPrefix.length);\n      }\n      if (mirror.external && mirror.external.api !== \"\") {\n        const mb = mirror.name.substring(kvPrefix.length);\n        this.useJsPrefix = false;\n        this.prefix = `$KV.${mb}`;\n        this.editPrefix = `${mirror.external.api}.$KV.${n}`;\n      } else {\n        this.editPrefix = this.prefix;\n      }\n    }\n  }\n  bucketName() {\n    return this.stream ?? `${kvPrefix}${this.bucket}`;\n  }\n  subjectForBucket() {\n    return `${this.prefix}.${this.bucket}.>`;\n  }\n  subjectForKey(k, edit = false) {\n    const builder = [];\n    if (edit) {\n      if (this.useJsPrefix) {\n        builder.push(this.js.apiPrefix);\n      }\n      if (this.editPrefix !== \"\") {\n        builder.push(this.editPrefix);\n      } else {\n        builder.push(this.prefix);\n      }\n    } else {\n      if (this.prefix) {\n        builder.push(this.prefix);\n      }\n    }\n    builder.push(k);\n    return builder.join(\".\");\n  }\n  fullKeyName(k) {\n    if (this.prefix !== \"\") {\n      return `${this.prefix}.${k}`;\n    }\n    return `${kvSubjectPrefix}.${this.bucket}.${k}`;\n  }\n  get prefixLen() {\n    if (this._prefixLen === 0) {\n      this._prefixLen = this.prefix.length + 1;\n    }\n    return this._prefixLen;\n  }\n  encodeKey(key) {\n    const chunks = [];\n    for (const t of key.split(\".\")) {\n      switch (t) {\n        case \">\":\n        case \"*\":\n          chunks.push(t);\n          break;\n        default:\n          chunks.push(this.codec.key.encode(t));\n          break;\n      }\n    }\n    return chunks.join(\".\");\n  }\n  decodeKey(ekey) {\n    const chunks = [];\n    for (const t of ekey.split(\".\")) {\n      switch (t) {\n        case \">\":\n        case \"*\":\n          chunks.push(t);\n          break;\n        default:\n          chunks.push(this.codec.key.decode(t));\n          break;\n      }\n    }\n    return chunks.join(\".\");\n  }\n  validateKey = validateKey;\n  validateSearchKey = validateSearchKey;\n  hasWildcards = hasWildcards;\n  close() {\n    return Promise.resolve();\n  }\n  dataLen(data, h) {\n    const slen = h ? h.get(JsHeaders.MessageSizeHdr) || \"\" : \"\";\n    if (slen !== \"\") {\n      return parseInt(slen, 10);\n    }\n    return data.length;\n  }\n  smToEntry(sm) {\n    return new KvStoredEntryImpl(this.bucket, this.prefixLen, sm);\n  }\n  jmToEntry(jm) {\n    const key = this.decodeKey(jm.subject.substring(this.prefixLen));\n    return new KvJsMsgEntryImpl(this.bucket, key, jm);\n  }\n  async create(k, data) {\n    let firstErr;\n    try {\n      const n = await this.put(k, data, {\n        previousSeq: 0\n      });\n      return Promise.resolve(n);\n    } catch (err) {\n      firstErr = err;\n      if (err?.api_error?.err_code !== 10071) {\n        return Promise.reject(err);\n      }\n    }\n    let rev = 0;\n    try {\n      const e = await this.get(k);\n      if (e?.operation === \"DEL\" || e?.operation === \"PURGE\") {\n        rev = e !== null ? e.revision : 0;\n        return this.update(k, data, rev);\n      } else {\n        return Promise.reject(firstErr);\n      }\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n  update(k, data, version) {\n    if (version <= 0) {\n      throw new Error(\"version must be greater than 0\");\n    }\n    return this.put(k, data, {\n      previousSeq: version\n    });\n  }\n  async put(k, data, opts = {}) {\n    const ek = this.encodeKey(k);\n    this.validateKey(ek);\n    const o = {};\n    if (opts.previousSeq !== undefined) {\n      const h = headers();\n      o.headers = h;\n      h.set(PubHeaders.ExpectedLastSubjectSequenceHdr, `${opts.previousSeq}`);\n    }\n    try {\n      const pa = await this.js.publish(this.subjectForKey(ek, true), data, o);\n      return pa.seq;\n    } catch (err) {\n      const ne = err;\n      if (ne.isJetStreamError()) {\n        ne.message = ne.api_error?.description;\n        ne.code = `${ne.api_error?.code}`;\n        return Promise.reject(ne);\n      }\n      return Promise.reject(err);\n    }\n  }\n  async get(k, opts) {\n    const ek = this.encodeKey(k);\n    this.validateKey(ek);\n    let arg = {\n      last_by_subj: this.subjectForKey(ek)\n    };\n    if (opts && opts.revision > 0) {\n      arg = {\n        seq: opts.revision\n      };\n    }\n    let sm;\n    try {\n      if (this.direct) {\n        const direct = this.jsm.direct;\n        sm = await direct.getMessage(this.bucketName(), arg);\n      } else {\n        sm = await this.jsm.streams.getMessage(this.bucketName(), arg);\n      }\n      const ke = this.smToEntry(sm);\n      if (ke.key !== ek) {\n        return null;\n      }\n      return ke;\n    } catch (err) {\n      if (err.code === ErrorCode.JetStream404NoMessages) {\n        return null;\n      }\n      throw err;\n    }\n  }\n  purge(k) {\n    return this._deleteOrPurge(k, \"PURGE\");\n  }\n  delete(k) {\n    return this._deleteOrPurge(k, \"DEL\");\n  }\n  async purgeDeletes(olderMillis = 30 * 60 * 1000) {\n    const done = deferred();\n    const buf = [];\n    const i = await this.watch({\n      key: \">\",\n      initializedFn: () => {\n        done.resolve();\n      }\n    });\n    (async () => {\n      for await (const e of i) {\n        if (e.operation === \"DEL\" || e.operation === \"PURGE\") {\n          buf.push(e);\n        }\n      }\n    })().then();\n    await done;\n    i.stop();\n    const min = Date.now() - olderMillis;\n    const proms = buf.map(e => {\n      const subj = this.subjectForKey(e.key);\n      if (e.created.getTime() >= min) {\n        return this.jsm.streams.purge(this.stream, {\n          filter: subj,\n          keep: 1\n        });\n      } else {\n        return this.jsm.streams.purge(this.stream, {\n          filter: subj,\n          keep: 0\n        });\n      }\n    });\n    const purged = await Promise.all(proms);\n    purged.unshift({\n      success: true,\n      purged: 0\n    });\n    return purged.reduce((pv, cv) => {\n      pv.purged += cv.purged;\n      return pv;\n    });\n  }\n  async _deleteOrPurge(k, op) {\n    if (!this.hasWildcards(k)) {\n      return this._doDeleteOrPurge(k, op);\n    }\n    const iter = await this.keys(k);\n    const buf = [];\n    for await (const k of iter) {\n      buf.push(this._doDeleteOrPurge(k, op));\n      if (buf.length === 100) {\n        await Promise.all(buf);\n        buf.length = 0;\n      }\n    }\n    if (buf.length > 0) {\n      await Promise.all(buf);\n    }\n  }\n  async _doDeleteOrPurge(k, op) {\n    const ek = this.encodeKey(k);\n    this.validateKey(ek);\n    const h = headers();\n    h.set(kvOperationHdr, op);\n    if (op === \"PURGE\") {\n      h.set(JsHeaders.RollupHdr, JsHeaders.RollupValueSubject);\n    }\n    await this.js.publish(this.subjectForKey(ek, true), Empty, {\n      headers: h\n    });\n  }\n  _buildCC(k, content, opts = {}) {\n    const ek = this.encodeKey(k);\n    this.validateSearchKey(k);\n    let deliver_policy = DeliverPolicy.LastPerSubject;\n    if (content === KvWatchInclude.AllHistory) {\n      deliver_policy = DeliverPolicy.All;\n    }\n    if (content === KvWatchInclude.UpdatesOnly) {\n      deliver_policy = DeliverPolicy.New;\n    }\n    return Object.assign({\n      deliver_policy,\n      \"ack_policy\": AckPolicy.None,\n      \"filter_subject\": this.fullKeyName(ek),\n      \"flow_control\": true,\n      \"idle_heartbeat\": nanos(5 * 1000)\n    }, opts);\n  }\n  remove(k) {\n    return this.purge(k);\n  }\n  async history(opts = {}) {\n    const k = opts.key ?? \">\";\n    const qi = new QueuedIteratorImpl();\n    const co = {};\n    co.headers_only = opts.headers_only || false;\n    let fn;\n    fn = () => {\n      qi.stop();\n    };\n    let count = 0;\n    const cc = this._buildCC(k, KvWatchInclude.AllHistory, co);\n    const subj = cc.filter_subject;\n    const copts = consumerOpts(cc);\n    copts.bindStream(this.stream);\n    copts.orderedConsumer();\n    copts.callback((err, jm) => {\n      if (err) {\n        qi.stop(err);\n        return;\n      }\n      if (jm) {\n        const e = this.jmToEntry(jm);\n        qi.push(e);\n        qi.received++;\n        if (fn && count > 0 && qi.received >= count || jm.info.pending === 0) {\n          qi.push(fn);\n          fn = undefined;\n        }\n      }\n    });\n    const sub = await this.js.subscribe(subj, copts);\n    if (fn) {\n      const {\n        info: {\n          last\n        }\n      } = sub;\n      const expect = last.num_pending + last.delivered.consumer_seq;\n      if (expect === 0 || qi.received >= expect) {\n        try {\n          fn();\n        } catch (err) {\n          qi.stop(err);\n        } finally {\n          fn = undefined;\n        }\n      } else {\n        count = expect;\n      }\n    }\n    qi._data = sub;\n    qi.iterClosed.then(() => {\n      sub.unsubscribe();\n    });\n    sub.closed.then(() => {\n      qi.stop();\n    }).catch(err => {\n      qi.stop(err);\n    });\n    return qi;\n  }\n  async watch(opts = {}) {\n    const k = opts.key ?? \">\";\n    const qi = new QueuedIteratorImpl();\n    const co = {};\n    co.headers_only = opts.headers_only || false;\n    let content = KvWatchInclude.LastValue;\n    if (opts.include === KvWatchInclude.AllHistory) {\n      content = KvWatchInclude.AllHistory;\n    } else if (opts.include === KvWatchInclude.UpdatesOnly) {\n      content = KvWatchInclude.UpdatesOnly;\n    }\n    const ignoreDeletes = opts.ignoreDeletes === true;\n    let fn = opts.initializedFn;\n    let count = 0;\n    const cc = this._buildCC(k, content, co);\n    const subj = cc.filter_subject;\n    const copts = consumerOpts(cc);\n    copts.bindStream(this.stream);\n    copts.orderedConsumer();\n    copts.callback((err, jm) => {\n      if (err) {\n        qi.stop(err);\n        return;\n      }\n      if (jm) {\n        const e = this.jmToEntry(jm);\n        if (ignoreDeletes && e.operation === \"DEL\") {\n          return;\n        }\n        qi.push(e);\n        qi.received++;\n        if (fn && (count > 0 && qi.received >= count || jm.info.pending === 0)) {\n          qi.push(fn);\n          fn = undefined;\n        }\n      }\n    });\n    const sub = await this.js.subscribe(subj, copts);\n    if (fn) {\n      const {\n        info: {\n          last\n        }\n      } = sub;\n      const expect = last.num_pending + last.delivered.consumer_seq;\n      if (expect === 0 || qi.received >= expect) {\n        try {\n          fn();\n        } catch (err) {\n          qi.stop(err);\n        } finally {\n          fn = undefined;\n        }\n      } else {\n        count = expect;\n      }\n    }\n    qi._data = sub;\n    qi.iterClosed.then(() => {\n      sub.unsubscribe();\n    });\n    sub.closed.then(() => {\n      qi.stop();\n    }).catch(err => {\n      qi.stop(err);\n    });\n    return qi;\n  }\n  async keys(k = \">\") {\n    const keys = new QueuedIteratorImpl();\n    const cc = this._buildCC(k, KvWatchInclude.LastValue, {\n      headers_only: true\n    });\n    const subj = cc.filter_subject;\n    const copts = consumerOpts(cc);\n    copts.bindStream(this.stream);\n    copts.orderedConsumer();\n    const sub = await this.js.subscribe(subj, copts);\n    (async () => {\n      for await (const jm of sub) {\n        const op = jm.headers?.get(kvOperationHdr);\n        if (op !== \"DEL\" && op !== \"PURGE\") {\n          const key = this.decodeKey(jm.subject.substring(this.prefixLen));\n          keys.push(key);\n        }\n        if (jm.info.pending === 0) {\n          sub.unsubscribe();\n        }\n      }\n    })().then(() => {\n      keys.stop();\n    }).catch(err => {\n      keys.stop(err);\n    });\n    const si = sub;\n    if (si.info.last.num_pending === 0) {\n      sub.unsubscribe();\n    }\n    return keys;\n  }\n  purgeBucket(opts) {\n    return this.jsm.streams.purge(this.bucketName(), opts);\n  }\n  destroy() {\n    return this.jsm.streams.delete(this.bucketName());\n  }\n  async status() {\n    const nc = this.js.nc;\n    const cluster = nc.info?.cluster ?? \"\";\n    const bn = this.bucketName();\n    const si = await this.jsm.streams.info(bn);\n    return new KvStatusImpl(si, cluster);\n  }\n}\nclass KvStatusImpl {\n  si;\n  cluster;\n  constructor(si, cluster = \"\") {\n    this.si = si;\n    this.cluster = cluster;\n  }\n  get bucket() {\n    return this.si.config.name.startsWith(kvPrefix) ? this.si.config.name.substring(kvPrefix.length) : this.si.config.name;\n  }\n  get values() {\n    return this.si.state.messages;\n  }\n  get history() {\n    return this.si.config.max_msgs_per_subject;\n  }\n  get ttl() {\n    return millis(this.si.config.max_age);\n  }\n  get bucket_location() {\n    return this.cluster;\n  }\n  get backingStore() {\n    return this.si.config.storage;\n  }\n  get storage() {\n    return this.si.config.storage;\n  }\n  get replicas() {\n    return this.si.config.num_replicas;\n  }\n  get description() {\n    return this.si.config.description ?? \"\";\n  }\n  get maxBucketSize() {\n    return this.si.config.max_bytes;\n  }\n  get maxValueSize() {\n    return this.si.config.max_msg_size;\n  }\n  get max_bytes() {\n    return this.si.config.max_bytes;\n  }\n  get placement() {\n    return this.si.config.placement || {\n      cluster: \"\",\n      tags: []\n    };\n  }\n  get placementCluster() {\n    return this.si.config.placement?.cluster ?? \"\";\n  }\n  get republish() {\n    return this.si.config.republish ?? {\n      src: \"\",\n      dest: \"\"\n    };\n  }\n  get streamInfo() {\n    return this.si;\n  }\n  get size() {\n    return this.si.state.bytes;\n  }\n  get metadata() {\n    return this.si.config.metadata ?? {};\n  }\n  get compression() {\n    if (this.si.config.compression) {\n      return this.si.config.compression !== StoreCompression.None;\n    }\n    return false;\n  }\n}\nconst digestType = \"SHA-256=\";\nfunction objectStoreStreamName(bucket) {\n  validateBucket(bucket);\n  return `${osPrefix}${bucket}`;\n}\nfunction objectStoreBucketName(stream) {\n  if (stream.startsWith(osPrefix)) {\n    return stream.substring(4);\n  }\n  return stream;\n}\nclass ObjectStoreStatusImpl {\n  si;\n  backingStore;\n  constructor(si) {\n    this.si = si;\n    this.backingStore = \"JetStream\";\n  }\n  get bucket() {\n    return objectStoreBucketName(this.si.config.name);\n  }\n  get description() {\n    return this.si.config.description ?? \"\";\n  }\n  get ttl() {\n    return this.si.config.max_age;\n  }\n  get storage() {\n    return this.si.config.storage;\n  }\n  get replicas() {\n    return this.si.config.num_replicas;\n  }\n  get sealed() {\n    return this.si.config.sealed;\n  }\n  get size() {\n    return this.si.state.bytes;\n  }\n  get streamInfo() {\n    return this.si;\n  }\n  get metadata() {\n    return this.si.config.metadata;\n  }\n  get compression() {\n    if (this.si.config.compression) {\n      return this.si.config.compression !== StoreCompression.None;\n    }\n    return false;\n  }\n}\nclass StreamAPIImpl extends BaseApiClient {\n  constructor(nc, opts) {\n    super(nc, opts);\n  }\n  checkStreamConfigVersions(cfg) {\n    const nci = this.nc;\n    if (cfg.metadata) {\n      const {\n        min,\n        ok\n      } = nci.features.get(Feature.JS_STREAM_CONSUMER_METADATA);\n      if (!ok) {\n        throw new Error(`stream 'metadata' requires server ${min}`);\n      }\n    }\n    if (cfg.first_seq) {\n      const {\n        min,\n        ok\n      } = nci.features.get(Feature.JS_STREAM_FIRST_SEQ);\n      if (!ok) {\n        throw new Error(`stream 'first_seq' requires server ${min}`);\n      }\n    }\n    if (cfg.subject_transform) {\n      const {\n        min,\n        ok\n      } = nci.features.get(Feature.JS_STREAM_SUBJECT_TRANSFORM);\n      if (!ok) {\n        throw new Error(`stream 'subject_transform' requires server ${min}`);\n      }\n    }\n    if (cfg.compression) {\n      const {\n        min,\n        ok\n      } = nci.features.get(Feature.JS_STREAM_COMPRESSION);\n      if (!ok) {\n        throw new Error(`stream 'compression' requires server ${min}`);\n      }\n    }\n    if (cfg.consumer_limits) {\n      const {\n        min,\n        ok\n      } = nci.features.get(Feature.JS_DEFAULT_CONSUMER_LIMITS);\n      if (!ok) {\n        throw new Error(`stream 'consumer_limits' requires server ${min}`);\n      }\n    }\n    function validateStreamSource(context, src) {\n      const count = src.subject_transforms?.length || 0;\n      if (count > 0) {\n        const {\n          min,\n          ok\n        } = nci.features.get(Feature.JS_STREAM_SOURCE_SUBJECT_TRANSFORM);\n        if (!ok) {\n          throw new Error(`${context} 'subject_transforms' requires server ${min}`);\n        }\n      }\n    }\n    if (cfg.sources) {\n      cfg.sources.forEach(src => {\n        validateStreamSource(\"stream sources\", src);\n      });\n    }\n    if (cfg.mirror) {\n      validateStreamSource(\"stream mirror\", cfg.mirror);\n    }\n  }\n  async add(cfg = {}) {\n    this.checkStreamConfigVersions(cfg);\n    validateStreamName(cfg.name);\n    cfg.mirror = convertStreamSourceDomain(cfg.mirror);\n    cfg.sources = cfg.sources?.map(convertStreamSourceDomain);\n    const r = await this._request(`${this.prefix}.STREAM.CREATE.${cfg.name}`, cfg);\n    const si = r;\n    this._fixInfo(si);\n    return si;\n  }\n  async delete(stream) {\n    validateStreamName(stream);\n    const r = await this._request(`${this.prefix}.STREAM.DELETE.${stream}`);\n    const cr = r;\n    return cr.success;\n  }\n  async update(name, cfg = {}) {\n    if (typeof name === \"object\") {\n      const sc = name;\n      name = sc.name;\n      cfg = sc;\n      console.trace(`\\u001B[33m >> streams.update(config: StreamConfig) api changed to streams.update(name: string, config: StreamUpdateConfig) - this shim will be removed - update your code.  \\u001B[0m`);\n    }\n    this.checkStreamConfigVersions(cfg);\n    validateStreamName(name);\n    const old = await this.info(name);\n    const update = Object.assign(old.config, cfg);\n    update.mirror = convertStreamSourceDomain(update.mirror);\n    update.sources = update.sources?.map(convertStreamSourceDomain);\n    const r = await this._request(`${this.prefix}.STREAM.UPDATE.${name}`, update);\n    const si = r;\n    this._fixInfo(si);\n    return si;\n  }\n  async info(name, data) {\n    validateStreamName(name);\n    const subj = `${this.prefix}.STREAM.INFO.${name}`;\n    const r = await this._request(subj, data);\n    let si = r;\n    let {\n      total,\n      limit\n    } = si;\n    let have = si.state.subjects ? Object.getOwnPropertyNames(si.state.subjects).length : 1;\n    if (total && total > have) {\n      const infos = [si];\n      const paged = data || {};\n      let i = 0;\n      while (total > have) {\n        i++;\n        paged.offset = limit * i;\n        const r = await this._request(subj, paged);\n        total = r.total;\n        infos.push(r);\n        const count = Object.getOwnPropertyNames(r.state.subjects).length;\n        have += count;\n        if (count < limit) {\n          break;\n        }\n      }\n      let subjects = {};\n      for (let i = 0; i < infos.length; i++) {\n        si = infos[i];\n        if (si.state.subjects) {\n          subjects = Object.assign(subjects, si.state.subjects);\n        }\n      }\n      si.offset = 0;\n      si.total = 0;\n      si.limit = 0;\n      si.state.subjects = subjects;\n    }\n    this._fixInfo(si);\n    return si;\n  }\n  list(subject = \"\") {\n    const payload = subject?.length ? {\n      subject\n    } : {};\n    const listerFilter = v => {\n      const slr = v;\n      slr.streams.forEach(si => {\n        this._fixInfo(si);\n      });\n      return slr.streams;\n    };\n    const subj = `${this.prefix}.STREAM.LIST`;\n    return new ListerImpl(subj, listerFilter, this, payload);\n  }\n  _fixInfo(si) {\n    si.config.sealed = si.config.sealed || false;\n    si.config.deny_delete = si.config.deny_delete || false;\n    si.config.deny_purge = si.config.deny_purge || false;\n    si.config.allow_rollup_hdrs = si.config.allow_rollup_hdrs || false;\n  }\n  async purge(name, opts) {\n    if (opts) {\n      const {\n        keep,\n        seq\n      } = opts;\n      if (typeof keep === \"number\" && typeof seq === \"number\") {\n        throw new Error(\"can specify one of keep or seq\");\n      }\n    }\n    validateStreamName(name);\n    const v = await this._request(`${this.prefix}.STREAM.PURGE.${name}`, opts);\n    return v;\n  }\n  async deleteMessage(stream, seq, erase = true) {\n    validateStreamName(stream);\n    const dr = {\n      seq\n    };\n    if (!erase) {\n      dr.no_erase = true;\n    }\n    const r = await this._request(`${this.prefix}.STREAM.MSG.DELETE.${stream}`, dr);\n    const cr = r;\n    return cr.success;\n  }\n  async getMessage(stream, query) {\n    validateStreamName(stream);\n    const r = await this._request(`${this.prefix}.STREAM.MSG.GET.${stream}`, query);\n    const sm = r;\n    return new StoredMsgImpl(sm);\n  }\n  find(subject) {\n    return this.findStream(subject);\n  }\n  listKvs() {\n    const filter = v => {\n      const slr = v;\n      const kvStreams = slr.streams.filter(v => {\n        return v.config.name.startsWith(kvPrefix);\n      });\n      kvStreams.forEach(si => {\n        this._fixInfo(si);\n      });\n      let cluster = \"\";\n      if (kvStreams.length) {\n        cluster = this.nc.info?.cluster ?? \"\";\n      }\n      const status = kvStreams.map(si => {\n        return new KvStatusImpl(si, cluster);\n      });\n      return status;\n    };\n    const subj = `${this.prefix}.STREAM.LIST`;\n    return new ListerImpl(subj, filter, this);\n  }\n  listObjectStores() {\n    const filter = v => {\n      const slr = v;\n      const objStreams = slr.streams.filter(v => {\n        return v.config.name.startsWith(osPrefix);\n      });\n      objStreams.forEach(si => {\n        this._fixInfo(si);\n      });\n      const status = objStreams.map(si => {\n        return new ObjectStoreStatusImpl(si);\n      });\n      return status;\n    };\n    const subj = `${this.prefix}.STREAM.LIST`;\n    return new ListerImpl(subj, filter, this);\n  }\n  names(subject = \"\") {\n    const payload = subject?.length ? {\n      subject\n    } : {};\n    const listerFilter = v => {\n      const sr = v;\n      return sr.streams;\n    };\n    const subj = `${this.prefix}.STREAM.NAMES`;\n    return new ListerImpl(subj, listerFilter, this, payload);\n  }\n  async get(name) {\n    const si = await this.info(name);\n    return Promise.resolve(new StreamImpl(this, si));\n  }\n}\nclass StoredMsgImpl {\n  _header;\n  smr;\n  static jc;\n  constructor(smr) {\n    this.smr = smr;\n  }\n  get subject() {\n    return this.smr.message.subject;\n  }\n  get seq() {\n    return this.smr.message.seq;\n  }\n  get timestamp() {\n    return this.smr.message.time;\n  }\n  get time() {\n    return new Date(Date.parse(this.timestamp));\n  }\n  get data() {\n    return this.smr.message.data ? this._parse(this.smr.message.data) : Empty;\n  }\n  get header() {\n    if (!this._header) {\n      if (this.smr.message.hdrs) {\n        const hd = this._parse(this.smr.message.hdrs);\n        this._header = MsgHdrsImpl.decode(hd);\n      } else {\n        this._header = headers();\n      }\n    }\n    return this._header;\n  }\n  _parse(s) {\n    const bs = atob(s);\n    const len = bs.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n      bytes[i] = bs.charCodeAt(i);\n    }\n    return bytes;\n  }\n  json(reviver) {\n    return JSONCodec(reviver).decode(this.data);\n  }\n  string() {\n    return TD.decode(this.data);\n  }\n}\nclass StreamsImpl {\n  api;\n  constructor(api) {\n    this.api = api;\n  }\n  get(stream) {\n    return this.api.info(stream).then(si => {\n      return new StreamImpl(this.api, si);\n    });\n  }\n}\nclass KvStoredEntryImpl {\n  bucket;\n  sm;\n  prefixLen;\n  constructor(bucket, prefixLen, sm) {\n    this.bucket = bucket;\n    this.prefixLen = prefixLen;\n    this.sm = sm;\n  }\n  get key() {\n    return this.sm.subject.substring(this.prefixLen);\n  }\n  get value() {\n    return this.sm.data;\n  }\n  get delta() {\n    return 0;\n  }\n  get created() {\n    return this.sm.time;\n  }\n  get revision() {\n    return this.sm.seq;\n  }\n  get operation() {\n    return this.sm.header.get(kvOperationHdr) || \"PUT\";\n  }\n  get length() {\n    const slen = this.sm.header.get(JsHeaders.MessageSizeHdr) || \"\";\n    if (slen !== \"\") {\n      return parseInt(slen, 10);\n    }\n    return this.sm.data.length;\n  }\n  json() {\n    return this.sm.json();\n  }\n  string() {\n    return this.sm.string();\n  }\n}\nclass KvJsMsgEntryImpl {\n  bucket;\n  key;\n  sm;\n  constructor(bucket, key, sm) {\n    this.bucket = bucket;\n    this.key = key;\n    this.sm = sm;\n  }\n  get value() {\n    return this.sm.data;\n  }\n  get created() {\n    return new Date(millis(this.sm.info.timestampNanos));\n  }\n  get revision() {\n    return this.sm.seq;\n  }\n  get operation() {\n    return this.sm.headers?.get(kvOperationHdr) || \"PUT\";\n  }\n  get delta() {\n    return this.sm.info.pending;\n  }\n  get length() {\n    const slen = this.sm.headers?.get(JsHeaders.MessageSizeHdr) || \"\";\n    if (slen !== \"\") {\n      return parseInt(slen, 10);\n    }\n    return this.sm.data.length;\n  }\n  json() {\n    return this.sm.json();\n  }\n  string() {\n    return this.sm.string();\n  }\n}\nclass ObjectInfoImpl {\n  info;\n  hdrs;\n  constructor(oi) {\n    this.info = oi;\n  }\n  get name() {\n    return this.info.name;\n  }\n  get description() {\n    return this.info.description ?? \"\";\n  }\n  get headers() {\n    if (!this.hdrs) {\n      this.hdrs = MsgHdrsImpl.fromRecord(this.info.headers || {});\n    }\n    return this.hdrs;\n  }\n  get options() {\n    return this.info.options;\n  }\n  get bucket() {\n    return this.info.bucket;\n  }\n  get chunks() {\n    return this.info.chunks;\n  }\n  get deleted() {\n    return this.info.deleted ?? false;\n  }\n  get digest() {\n    return this.info.digest;\n  }\n  get mtime() {\n    return this.info.mtime;\n  }\n  get nuid() {\n    return this.info.nuid;\n  }\n  get size() {\n    return this.info.size;\n  }\n  get revision() {\n    return this.info.revision;\n  }\n  get metadata() {\n    return this.info.metadata || {};\n  }\n  isLink() {\n    return this.info.options?.link !== undefined && this.info.options?.link !== null;\n  }\n}\nfunction toServerObjectStoreMeta(meta) {\n  const v = {\n    name: meta.name,\n    description: meta.description ?? \"\",\n    options: meta.options,\n    metadata: meta.metadata\n  };\n  if (meta.headers) {\n    const mhi = meta.headers;\n    v.headers = mhi.toRecord();\n  }\n  return v;\n}\nfunction emptyReadableStream() {\n  return new ReadableStream({\n    pull(c) {\n      c.enqueue(new Uint8Array(0));\n      c.close();\n    }\n  });\n}\nclass ObjectStoreImpl {\n  jsm;\n  js;\n  stream;\n  name;\n  constructor(name, jsm, js) {\n    this.name = name;\n    this.jsm = jsm;\n    this.js = js;\n  }\n  _checkNotEmpty(name) {\n    if (!name || name.length === 0) {\n      return {\n        name,\n        error: new Error(\"name cannot be empty\")\n      };\n    }\n    return {\n      name\n    };\n  }\n  async info(name) {\n    const info = await this.rawInfo(name);\n    return info ? new ObjectInfoImpl(info) : null;\n  }\n  async list() {\n    const buf = [];\n    const iter = await this.watch({\n      ignoreDeletes: true,\n      includeHistory: true\n    });\n    for await (const info of iter) {\n      if (info === null) {\n        break;\n      }\n      buf.push(info);\n    }\n    return Promise.resolve(buf);\n  }\n  async rawInfo(name) {\n    const {\n      name: obj,\n      error\n    } = this._checkNotEmpty(name);\n    if (error) {\n      return Promise.reject(error);\n    }\n    const meta = this._metaSubject(obj);\n    try {\n      const m = await this.jsm.streams.getMessage(this.stream, {\n        last_by_subj: meta\n      });\n      const jc = JSONCodec();\n      const soi = jc.decode(m.data);\n      soi.revision = m.seq;\n      return soi;\n    } catch (err) {\n      if (err.code === \"404\") {\n        return null;\n      }\n      return Promise.reject(err);\n    }\n  }\n  async _si(opts) {\n    try {\n      return await this.jsm.streams.info(this.stream, opts);\n    } catch (err) {\n      const nerr = err;\n      if (nerr.code === \"404\") {\n        return null;\n      }\n      return Promise.reject(err);\n    }\n  }\n  async seal() {\n    let info = await this._si();\n    if (info === null) {\n      return Promise.reject(new Error(\"object store not found\"));\n    }\n    info.config.sealed = true;\n    info = await this.jsm.streams.update(this.stream, info.config);\n    return Promise.resolve(new ObjectStoreStatusImpl(info));\n  }\n  async status(opts) {\n    const info = await this._si(opts);\n    if (info === null) {\n      return Promise.reject(new Error(\"object store not found\"));\n    }\n    return Promise.resolve(new ObjectStoreStatusImpl(info));\n  }\n  destroy() {\n    return this.jsm.streams.delete(this.stream);\n  }\n  async _put(meta, rs, opts) {\n    const jsopts = this.js.getOptions();\n    opts = opts || {\n      timeout: jsopts.timeout\n    };\n    opts.timeout = opts.timeout || jsopts.timeout;\n    opts.previousRevision = opts.previousRevision ?? undefined;\n    const {\n      timeout,\n      previousRevision\n    } = opts;\n    const si = this.js.nc.info;\n    const maxPayload = si?.max_payload || 1024;\n    meta = meta || {};\n    meta.options = meta.options || {};\n    let maxChunk = meta.options?.max_chunk_size || 128 * 1024;\n    maxChunk = maxChunk > maxPayload ? maxPayload : maxChunk;\n    meta.options.max_chunk_size = maxChunk;\n    const old = await this.info(meta.name);\n    const {\n      name: n,\n      error\n    } = this._checkNotEmpty(meta.name);\n    if (error) {\n      return Promise.reject(error);\n    }\n    const id = nuid.next();\n    const chunkSubj = this._chunkSubject(id);\n    const metaSubj = this._metaSubject(n);\n    const info = Object.assign({\n      bucket: this.name,\n      nuid: id,\n      size: 0,\n      chunks: 0\n    }, toServerObjectStoreMeta(meta));\n    const d = deferred();\n    const proms = [];\n    const db = new DataBuffer();\n    try {\n      const reader = rs ? rs.getReader() : null;\n      const sha = new SHA256();\n      while (true) {\n        const {\n          done,\n          value\n        } = reader ? await reader.read() : {\n          done: true,\n          value: undefined\n        };\n        if (done) {\n          if (db.size() > 0) {\n            const payload = db.drain();\n            sha.update(payload);\n            info.chunks++;\n            info.size += payload.length;\n            proms.push(this.js.publish(chunkSubj, payload, {\n              timeout\n            }));\n          }\n          await Promise.all(proms);\n          proms.length = 0;\n          info.mtime = new Date().toISOString();\n          const digest = sha.digest(\"base64\");\n          const pad = digest.length % 3;\n          const padding = pad > 0 ? \"=\".repeat(pad) : \"\";\n          info.digest = `${digestType}${digest}${padding}`;\n          info.deleted = false;\n          const h = headers();\n          if (typeof previousRevision === \"number\") {\n            h.set(PubHeaders.ExpectedLastSubjectSequenceHdr, `${previousRevision}`);\n          }\n          h.set(JsHeaders.RollupHdr, JsHeaders.RollupValueSubject);\n          const pa = await this.js.publish(metaSubj, JSONCodec().encode(info), {\n            headers: h,\n            timeout\n          });\n          info.revision = pa.seq;\n          if (old) {\n            try {\n              await this.jsm.streams.purge(this.stream, {\n                filter: `$O.${this.name}.C.${old.nuid}`\n              });\n            } catch (_err) {}\n          }\n          d.resolve(new ObjectInfoImpl(info));\n          break;\n        }\n        if (value) {\n          db.fill(value);\n          while (db.size() > maxChunk) {\n            info.chunks++;\n            info.size += maxChunk;\n            const payload = db.drain(meta.options.max_chunk_size);\n            sha.update(payload);\n            proms.push(this.js.publish(chunkSubj, payload, {\n              timeout\n            }));\n          }\n        }\n      }\n    } catch (err) {\n      await this.jsm.streams.purge(this.stream, {\n        filter: chunkSubj\n      });\n      d.reject(err);\n    }\n    return d;\n  }\n  putBlob(meta, data, opts) {\n    function readableStreamFrom(data) {\n      return new ReadableStream({\n        pull(controller) {\n          controller.enqueue(data);\n          controller.close();\n        }\n      });\n    }\n    if (data === null) {\n      data = new Uint8Array(0);\n    }\n    return this.put(meta, readableStreamFrom(data), opts);\n  }\n  put(meta, rs, opts) {\n    if (meta?.options?.link) {\n      return Promise.reject(new Error(\"link cannot be set when putting the object in bucket\"));\n    }\n    return this._put(meta, rs, opts);\n  }\n  async getBlob(name) {\n    async function fromReadableStream(rs) {\n      const buf = new DataBuffer();\n      const reader = rs.getReader();\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) {\n          return buf.drain();\n        }\n        if (value && value.length) {\n          buf.fill(value);\n        }\n      }\n    }\n    const r = await this.get(name);\n    if (r === null) {\n      return Promise.resolve(null);\n    }\n    const vs = await Promise.all([r.error, fromReadableStream(r.data)]);\n    if (vs[0]) {\n      return Promise.reject(vs[0]);\n    } else {\n      return Promise.resolve(vs[1]);\n    }\n  }\n  async get(name) {\n    const info = await this.rawInfo(name);\n    if (info === null) {\n      return Promise.resolve(null);\n    }\n    if (info.deleted) {\n      return Promise.resolve(null);\n    }\n    if (info.options && info.options.link) {\n      const ln = info.options.link.name || \"\";\n      if (ln === \"\") {\n        throw new Error(\"link is a bucket\");\n      }\n      const os = info.options.link.bucket !== this.name ? await ObjectStoreImpl.create(this.js, info.options.link.bucket) : this;\n      return os.get(ln);\n    }\n    const d = deferred();\n    const r = {\n      info: new ObjectInfoImpl(info),\n      error: d\n    };\n    if (info.size === 0) {\n      r.data = emptyReadableStream();\n      d.resolve(null);\n      return Promise.resolve(r);\n    }\n    let controller;\n    const oc = consumerOpts();\n    oc.orderedConsumer();\n    const sha = new SHA256();\n    const subj = `$O.${this.name}.C.${info.nuid}`;\n    const sub = await this.js.subscribe(subj, oc);\n    (async () => {\n      for await (const jm of sub) {\n        if (jm.data.length > 0) {\n          sha.update(jm.data);\n          controller.enqueue(jm.data);\n        }\n        if (jm.info.pending === 0) {\n          const hash = sha.digest(\"base64\");\n          const pad = hash.length % 3;\n          const padding = pad > 0 ? \"=\".repeat(pad) : \"\";\n          const digest = `${digestType}${hash}${padding}`;\n          if (digest !== info.digest) {\n            controller.error(new Error(`received a corrupt object, digests do not match received: ${info.digest} calculated ${digest}`));\n          } else {\n            controller.close();\n          }\n          sub.unsubscribe();\n        }\n      }\n    })().then(() => {\n      d.resolve();\n    }).catch(err => {\n      controller.error(err);\n      d.reject(err);\n    });\n    r.data = new ReadableStream({\n      start(c) {\n        controller = c;\n      },\n      cancel() {\n        sub.unsubscribe();\n      }\n    });\n    return r;\n  }\n  linkStore(name, bucket) {\n    if (!(bucket instanceof ObjectStoreImpl)) {\n      return Promise.reject(\"bucket required\");\n    }\n    const osi = bucket;\n    const {\n      name: n,\n      error\n    } = this._checkNotEmpty(name);\n    if (error) {\n      return Promise.reject(error);\n    }\n    const meta = {\n      name: n,\n      options: {\n        link: {\n          bucket: osi.name\n        }\n      }\n    };\n    return this._put(meta, null);\n  }\n  async link(name, info) {\n    const {\n      name: n,\n      error\n    } = this._checkNotEmpty(name);\n    if (error) {\n      return Promise.reject(error);\n    }\n    if (info.deleted) {\n      return Promise.reject(new Error(\"src object is deleted\"));\n    }\n    if (info.isLink()) {\n      return Promise.reject(new Error(\"src object is a link\"));\n    }\n    const dest = await this.rawInfo(name);\n    if (dest !== null && !dest.deleted) {\n      return Promise.reject(new Error(\"an object already exists with that name\"));\n    }\n    const link = {\n      bucket: info.bucket,\n      name: info.name\n    };\n    const mm = {\n      name: n,\n      bucket: info.bucket,\n      options: {\n        link: link\n      }\n    };\n    await this.js.publish(this._metaSubject(name), JSON.stringify(mm));\n    const i = await this.info(name);\n    return Promise.resolve(i);\n  }\n  async delete(name) {\n    const info = await this.rawInfo(name);\n    if (info === null) {\n      return Promise.resolve({\n        purged: 0,\n        success: false\n      });\n    }\n    info.deleted = true;\n    info.size = 0;\n    info.chunks = 0;\n    info.digest = \"\";\n    const jc = JSONCodec();\n    const h = headers();\n    h.set(JsHeaders.RollupHdr, JsHeaders.RollupValueSubject);\n    await this.js.publish(this._metaSubject(info.name), jc.encode(info), {\n      headers: h\n    });\n    return this.jsm.streams.purge(this.stream, {\n      filter: this._chunkSubject(info.nuid)\n    });\n  }\n  async update(name, meta = {}) {\n    const info = await this.rawInfo(name);\n    if (info === null) {\n      return Promise.reject(new Error(\"object not found\"));\n    }\n    if (info.deleted) {\n      return Promise.reject(new Error(\"cannot update meta for a deleted object\"));\n    }\n    meta.name = meta.name ?? info.name;\n    const {\n      name: n,\n      error\n    } = this._checkNotEmpty(meta.name);\n    if (error) {\n      return Promise.reject(error);\n    }\n    if (name !== meta.name) {\n      const i = await this.info(meta.name);\n      if (i && !i.deleted) {\n        return Promise.reject(new Error(\"an object already exists with that name\"));\n      }\n    }\n    meta.name = n;\n    const ii = Object.assign({}, info, toServerObjectStoreMeta(meta));\n    const ack = await this.js.publish(this._metaSubject(ii.name), JSON.stringify(ii));\n    if (name !== meta.name) {\n      await this.jsm.streams.purge(this.stream, {\n        filter: this._metaSubject(name)\n      });\n    }\n    return Promise.resolve(ack);\n  }\n  async watch(opts = {}) {\n    opts.includeHistory = opts.includeHistory ?? false;\n    opts.ignoreDeletes = opts.ignoreDeletes ?? false;\n    let initialized = false;\n    const qi = new QueuedIteratorImpl();\n    const subj = this._metaSubjectAll();\n    try {\n      await this.jsm.streams.getMessage(this.stream, {\n        last_by_subj: subj\n      });\n    } catch (err) {\n      if (err.code === \"404\") {\n        qi.push(null);\n        initialized = true;\n      } else {\n        qi.stop(err);\n      }\n    }\n    const jc = JSONCodec();\n    const copts = consumerOpts();\n    copts.orderedConsumer();\n    if (opts.includeHistory) {\n      copts.deliverLastPerSubject();\n    } else {\n      initialized = true;\n      copts.deliverNew();\n    }\n    copts.callback((err, jm) => {\n      if (err) {\n        qi.stop(err);\n        return;\n      }\n      if (jm !== null) {\n        const oi = jc.decode(jm.data);\n        if (oi.deleted && opts.ignoreDeletes === true) {} else {\n          qi.push(oi);\n        }\n        if (jm.info?.pending === 0 && !initialized) {\n          initialized = true;\n          qi.push(null);\n        }\n      }\n    });\n    const sub = await this.js.subscribe(subj, copts);\n    qi._data = sub;\n    qi.iterClosed.then(() => {\n      sub.unsubscribe();\n    });\n    sub.closed.then(() => {\n      qi.stop();\n    }).catch(err => {\n      qi.stop(err);\n    });\n    return qi;\n  }\n  _chunkSubject(id) {\n    return `$O.${this.name}.C.${id}`;\n  }\n  _metaSubject(n) {\n    return `$O.${this.name}.M.${Base64UrlPaddedCodec.encode(n)}`;\n  }\n  _metaSubjectAll() {\n    return `$O.${this.name}.M.>`;\n  }\n  async init(opts = {}) {\n    try {\n      this.stream = objectStoreStreamName(this.name);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    const max_age = opts?.ttl || 0;\n    delete opts.ttl;\n    const sc = Object.assign({\n      max_age\n    }, opts);\n    sc.name = this.stream;\n    sc.allow_direct = true;\n    sc.allow_rollup_hdrs = true;\n    sc.discard = DiscardPolicy.New;\n    sc.subjects = [`$O.${this.name}.C.>`, `$O.${this.name}.M.>`];\n    if (opts.placement) {\n      sc.placement = opts.placement;\n    }\n    if (opts.metadata) {\n      sc.metadata = opts.metadata;\n    }\n    if (typeof opts.compression === \"boolean\") {\n      sc.compression = opts.compression ? StoreCompression.S2 : StoreCompression.None;\n    }\n    try {\n      await this.jsm.streams.info(sc.name);\n    } catch (err) {\n      if (err.message === \"stream not found\") {\n        await this.jsm.streams.add(sc);\n      }\n    }\n  }\n  static async create(js, name, opts = {}) {\n    const jsm = await js.jetstreamManager();\n    const os = new ObjectStoreImpl(name, jsm, js);\n    await os.init(opts);\n    return Promise.resolve(os);\n  }\n}\nclass ViewsImpl {\n  js;\n  jsm;\n  constructor(js) {\n    this.js = js;\n  }\n  kv(name, opts = {}) {\n    const jsi = this.js;\n    const {\n      ok,\n      min\n    } = jsi.nc.features.get(Feature.JS_KV);\n    if (!ok) {\n      return Promise.reject(new Error(`kv is only supported on servers ${min} or better`));\n    }\n    if (opts.bindOnly) {\n      return Bucket.bind(this.js, name);\n    }\n    return Bucket.create(this.js, name, opts);\n  }\n  os(name, opts = {}) {\n    if (typeof crypto?.subtle?.digest !== \"function\") {\n      return Promise.reject(new Error(\"objectstore: unable to calculate hashes - crypto.subtle.digest with sha256 support is required\"));\n    }\n    const jsi = this.js;\n    const {\n      ok,\n      min\n    } = jsi.nc.features.get(Feature.JS_OBJECTSTORE);\n    if (!ok) {\n      return Promise.reject(new Error(`objectstore is only supported on servers ${min} or better`));\n    }\n    return ObjectStoreImpl.create(this.js, name, opts);\n  }\n}\nclass JetStreamClientImpl extends BaseApiClient {\n  consumers;\n  streams;\n  consumerAPI;\n  streamAPI;\n  constructor(nc, opts) {\n    super(nc, opts);\n    this.consumerAPI = new ConsumerAPIImpl(nc, opts);\n    this.streamAPI = new StreamAPIImpl(nc, opts);\n    this.consumers = new ConsumersImpl(this.consumerAPI);\n    this.streams = new StreamsImpl(this.streamAPI);\n  }\n  jetstreamManager(checkAPI) {\n    const opts = Object.assign({\n      checkAPI\n    }, this.opts);\n    return this.nc.jetstreamManager(opts);\n  }\n  get apiPrefix() {\n    return this.prefix;\n  }\n  get views() {\n    return new ViewsImpl(this);\n  }\n  async publish(subj, data = Empty, opts) {\n    opts = opts || {};\n    opts.expect = opts.expect || {};\n    const mh = opts?.headers || headers();\n    if (opts) {\n      if (opts.msgID) {\n        mh.set(PubHeaders.MsgIdHdr, opts.msgID);\n      }\n      if (opts.expect.lastMsgID) {\n        mh.set(PubHeaders.ExpectedLastMsgIdHdr, opts.expect.lastMsgID);\n      }\n      if (opts.expect.streamName) {\n        mh.set(PubHeaders.ExpectedStreamHdr, opts.expect.streamName);\n      }\n      if (typeof opts.expect.lastSequence === \"number\") {\n        mh.set(PubHeaders.ExpectedLastSeqHdr, `${opts.expect.lastSequence}`);\n      }\n      if (typeof opts.expect.lastSubjectSequence === \"number\") {\n        mh.set(PubHeaders.ExpectedLastSubjectSequenceHdr, `${opts.expect.lastSubjectSequence}`);\n      }\n    }\n    const to = opts.timeout || this.timeout;\n    const ro = {};\n    if (to) {\n      ro.timeout = to;\n    }\n    if (opts) {\n      ro.headers = mh;\n    }\n    let {\n      retries,\n      retry_delay\n    } = opts;\n    retries = retries || 1;\n    retry_delay = retry_delay || 250;\n    let r;\n    for (let i = 0; i < retries; i++) {\n      try {\n        r = await this.nc.request(subj, data, ro);\n        break;\n      } catch (err) {\n        const ne = err;\n        if (ne.code === \"503\" && i + 1 < retries) {\n          await delay(retry_delay);\n        } else {\n          throw err;\n        }\n      }\n    }\n    const pa = this.parseJsResponse(r);\n    if (pa.stream === \"\") {\n      throw NatsError.errorForCode(ErrorCode.JetStreamInvalidAck);\n    }\n    pa.duplicate = pa.duplicate ? pa.duplicate : false;\n    return pa;\n  }\n  async pull(stream, durable, expires = 0) {\n    validateStreamName(stream);\n    validateDurableName(durable);\n    let timeout = this.timeout;\n    if (expires > timeout) {\n      timeout = expires;\n    }\n    expires = expires < 0 ? 0 : nanos(expires);\n    const pullOpts = {\n      batch: 1,\n      no_wait: expires === 0,\n      expires\n    };\n    const msg = await this.nc.request(`${this.prefix}.CONSUMER.MSG.NEXT.${stream}.${durable}`, this.jc.encode(pullOpts), {\n      noMux: true,\n      timeout\n    });\n    const err = checkJsError(msg);\n    if (err) {\n      throw err;\n    }\n    return toJsMsg(msg);\n  }\n  fetch(stream, durable, opts = {}) {\n    validateStreamName(stream);\n    validateDurableName(durable);\n    let timer = null;\n    const trackBytes = (opts.max_bytes ?? 0) > 0;\n    let receivedBytes = 0;\n    const max_bytes = trackBytes ? opts.max_bytes : 0;\n    let monitor = null;\n    const args = {};\n    args.batch = opts.batch || 1;\n    if (max_bytes) {\n      const fv = this.nc.features.get(Feature.JS_PULL_MAX_BYTES);\n      if (!fv.ok) {\n        throw new Error(`max_bytes is only supported on servers ${fv.min} or better`);\n      }\n      args.max_bytes = max_bytes;\n    }\n    args.no_wait = opts.no_wait || false;\n    if (args.no_wait && args.expires) {\n      args.expires = 0;\n    }\n    const expires = opts.expires || 0;\n    if (expires) {\n      args.expires = nanos(expires);\n    }\n    if (expires === 0 && args.no_wait === false) {\n      throw new Error(\"expires or no_wait is required\");\n    }\n    const hb = opts.idle_heartbeat || 0;\n    if (hb) {\n      args.idle_heartbeat = nanos(hb);\n      if (opts.delay_heartbeat === true) {\n        args.idle_heartbeat = nanos(hb * 4);\n      }\n    }\n    const qi = new QueuedIteratorImpl();\n    const wants = args.batch;\n    let received = 0;\n    qi.protocolFilterFn = (jm, _ingest = false) => {\n      const jsmi = jm;\n      if (isHeartbeatMsg(jsmi.msg)) {\n        monitor?.work();\n        return false;\n      }\n      return true;\n    };\n    qi.dispatchedFn = m => {\n      if (m) {\n        if (trackBytes) {\n          receivedBytes += m.data.length;\n        }\n        received++;\n        if (timer && m.info.pending === 0) {\n          return;\n        }\n        if (qi.getPending() === 1 && m.info.pending === 0 || wants === received || max_bytes > 0 && receivedBytes >= max_bytes) {\n          qi.stop();\n        }\n      }\n    };\n    const inbox = createInbox(this.nc.options.inboxPrefix);\n    const sub = this.nc.subscribe(inbox, {\n      max: opts.batch,\n      callback: (err, msg) => {\n        if (err === null) {\n          err = checkJsError(msg);\n        }\n        if (err !== null) {\n          if (timer) {\n            timer.cancel();\n            timer = null;\n          }\n          if (isNatsError(err)) {\n            qi.stop(hideNonTerminalJsErrors(err) === null ? undefined : err);\n          } else {\n            qi.stop(err);\n          }\n        } else {\n          monitor?.work();\n          qi.received++;\n          qi.push(toJsMsg(msg));\n        }\n      }\n    });\n    if (expires) {\n      timer = timeout(expires);\n      timer.catch(() => {\n        if (!sub.isClosed()) {\n          sub.drain().catch(() => {});\n          timer = null;\n        }\n        if (monitor) {\n          monitor.cancel();\n        }\n      });\n    }\n    (async () => {\n      try {\n        if (hb) {\n          monitor = new IdleHeartbeatMonitor(hb, v => {\n            qi.push(() => {\n              qi.err = new NatsError(`${Js409Errors.IdleHeartbeatMissed}: ${v}`, ErrorCode.JetStreamIdleHeartBeat);\n            });\n            return true;\n          });\n        }\n      } catch (_err) {}\n      await sub.closed;\n      if (timer !== null) {\n        timer.cancel();\n        timer = null;\n      }\n      if (monitor) {\n        monitor.cancel();\n      }\n      qi.stop();\n    })().catch();\n    this.nc.publish(`${this.prefix}.CONSUMER.MSG.NEXT.${stream}.${durable}`, this.jc.encode(args), {\n      reply: inbox\n    });\n    return qi;\n  }\n  async pullSubscribe(subject, opts = consumerOpts()) {\n    const cso = await this._processOptions(subject, opts);\n    if (cso.ordered) {\n      throw new Error(\"pull subscribers cannot be be ordered\");\n    }\n    if (cso.config.deliver_subject) {\n      throw new Error(\"consumer info specifies deliver_subject - pull consumers cannot have deliver_subject set\");\n    }\n    const ackPolicy = cso.config.ack_policy;\n    if (ackPolicy === AckPolicy.None || ackPolicy === AckPolicy.All) {\n      throw new Error(\"ack policy for pull consumers must be explicit\");\n    }\n    const so = this._buildTypedSubscriptionOpts(cso);\n    const sub = new JetStreamPullSubscriptionImpl(this, cso.deliver, so);\n    sub.info = cso;\n    try {\n      await this._maybeCreateConsumer(cso);\n    } catch (err) {\n      sub.unsubscribe();\n      throw err;\n    }\n    return sub;\n  }\n  async subscribe(subject, opts = consumerOpts()) {\n    const cso = await this._processOptions(subject, opts);\n    if (!cso.isBind && !cso.config.deliver_subject) {\n      throw new Error(\"push consumer requires deliver_subject\");\n    }\n    const so = this._buildTypedSubscriptionOpts(cso);\n    const sub = new JetStreamSubscriptionImpl(this, cso.deliver, so);\n    sub.info = cso;\n    try {\n      await this._maybeCreateConsumer(cso);\n    } catch (err) {\n      sub.unsubscribe();\n      throw err;\n    }\n    sub._maybeSetupHbMonitoring();\n    return sub;\n  }\n  async _processOptions(subject, opts = consumerOpts()) {\n    const jsi = isConsumerOptsBuilder(opts) ? opts.getOpts() : opts;\n    jsi.isBind = isConsumerOptsBuilder(opts) ? opts.isBind : false;\n    jsi.flow_control = {\n      heartbeat_count: 0,\n      fc_count: 0,\n      consumer_restarts: 0\n    };\n    if (jsi.ordered) {\n      jsi.ordered_consumer_sequence = {\n        stream_seq: 0,\n        delivery_seq: 0\n      };\n      if (jsi.config.ack_policy !== AckPolicy.NotSet && jsi.config.ack_policy !== AckPolicy.None) {\n        throw new NatsError(\"ordered consumer: ack_policy can only be set to 'none'\", ErrorCode.ApiError);\n      }\n      if (jsi.config.durable_name && jsi.config.durable_name.length > 0) {\n        throw new NatsError(\"ordered consumer: durable_name cannot be set\", ErrorCode.ApiError);\n      }\n      if (jsi.config.deliver_subject && jsi.config.deliver_subject.length > 0) {\n        throw new NatsError(\"ordered consumer: deliver_subject cannot be set\", ErrorCode.ApiError);\n      }\n      if (jsi.config.max_deliver !== undefined && jsi.config.max_deliver > 1) {\n        throw new NatsError(\"ordered consumer: max_deliver cannot be set\", ErrorCode.ApiError);\n      }\n      if (jsi.config.deliver_group && jsi.config.deliver_group.length > 0) {\n        throw new NatsError(\"ordered consumer: deliver_group cannot be set\", ErrorCode.ApiError);\n      }\n      jsi.config.deliver_subject = createInbox(this.nc.options.inboxPrefix);\n      jsi.config.ack_policy = AckPolicy.None;\n      jsi.config.max_deliver = 1;\n      jsi.config.flow_control = true;\n      jsi.config.idle_heartbeat = jsi.config.idle_heartbeat || nanos(5000);\n      jsi.config.ack_wait = nanos(22 * 60 * 60 * 1000);\n      jsi.config.mem_storage = true;\n      jsi.config.num_replicas = 1;\n    }\n    if (jsi.config.ack_policy === AckPolicy.NotSet) {\n      jsi.config.ack_policy = AckPolicy.All;\n    }\n    jsi.api = this;\n    jsi.config = jsi.config || {};\n    jsi.stream = jsi.stream ? jsi.stream : await this.findStream(subject);\n    jsi.attached = false;\n    if (jsi.config.durable_name) {\n      try {\n        const info = await this.consumerAPI.info(jsi.stream, jsi.config.durable_name);\n        if (info) {\n          if (info.config.filter_subject && info.config.filter_subject !== subject) {\n            throw new Error(\"subject does not match consumer\");\n          }\n          const qn = jsi.config.deliver_group ?? \"\";\n          if (qn === \"\" && info.push_bound === true) {\n            throw new Error(`duplicate subscription`);\n          }\n          const rqn = info.config.deliver_group ?? \"\";\n          if (qn !== rqn) {\n            if (rqn === \"\") {\n              throw new Error(`durable requires no queue group`);\n            } else {\n              throw new Error(`durable requires queue group '${rqn}'`);\n            }\n          }\n          jsi.last = info;\n          jsi.config = info.config;\n          jsi.attached = true;\n          if (!jsi.config.durable_name) {\n            jsi.name = info.name;\n          }\n        }\n      } catch (err) {\n        if (err.code !== \"404\") {\n          throw err;\n        }\n      }\n    }\n    if (!jsi.attached && jsi.config.filter_subject === undefined && jsi.config.filter_subjects === undefined) {\n      jsi.config.filter_subject = subject;\n    }\n    jsi.deliver = jsi.config.deliver_subject || createInbox(this.nc.options.inboxPrefix);\n    return jsi;\n  }\n  _buildTypedSubscriptionOpts(jsi) {\n    const so = {};\n    so.adapter = msgAdapter(jsi.callbackFn === undefined);\n    so.ingestionFilterFn = JetStreamClientImpl.ingestionFn(jsi.ordered);\n    so.protocolFilterFn = (jm, ingest = false) => {\n      const jsmi = jm;\n      if (isFlowControlMsg(jsmi.msg)) {\n        if (!ingest) {\n          jsmi.msg.respond();\n        }\n        return false;\n      }\n      return true;\n    };\n    if (!jsi.mack && jsi.config.ack_policy !== AckPolicy.None) {\n      so.dispatchedFn = autoAckJsMsg;\n    }\n    if (jsi.callbackFn) {\n      so.callback = jsi.callbackFn;\n    }\n    so.max = jsi.max || 0;\n    so.queue = jsi.queue;\n    return so;\n  }\n  async _maybeCreateConsumer(jsi) {\n    if (jsi.attached) {\n      return;\n    }\n    if (jsi.isBind) {\n      throw new Error(`unable to bind - durable consumer ${jsi.config.durable_name} doesn't exist in ${jsi.stream}`);\n    }\n    jsi.config = Object.assign({\n      deliver_policy: DeliverPolicy.All,\n      ack_policy: AckPolicy.Explicit,\n      ack_wait: nanos(30 * 1000),\n      replay_policy: ReplayPolicy.Instant\n    }, jsi.config);\n    const ci = await this.consumerAPI.add(jsi.stream, jsi.config);\n    if (Array.isArray(jsi.config.filter_subjects && !Array.isArray(ci.config.filter_subjects))) {\n      throw new Error(`jetstream server doesn't support consumers with multiple filter subjects`);\n    }\n    jsi.name = ci.name;\n    jsi.config = ci.config;\n    jsi.last = ci;\n  }\n  static ingestionFn(ordered) {\n    return (jm, ctx) => {\n      const jsub = ctx;\n      if (!jm) return {\n        ingest: false,\n        protocol: false\n      };\n      const jmi = jm;\n      if (!checkJsError(jmi.msg)) {\n        jsub.monitor?.work();\n      }\n      if (isHeartbeatMsg(jmi.msg)) {\n        const ingest = ordered ? jsub._checkHbOrderConsumer(jmi.msg) : true;\n        if (!ordered) {\n          jsub.info.flow_control.heartbeat_count++;\n        }\n        return {\n          ingest,\n          protocol: true\n        };\n      } else if (isFlowControlMsg(jmi.msg)) {\n        jsub.info.flow_control.fc_count++;\n        return {\n          ingest: true,\n          protocol: true\n        };\n      }\n      const ingest = ordered ? jsub._checkOrderedConsumer(jm) : true;\n      return {\n        ingest,\n        protocol: false\n      };\n    };\n  }\n}\nclass JetStreamSubscriptionImpl extends TypedSubscription {\n  js;\n  monitor;\n  constructor(js, subject, opts) {\n    super(js.nc, subject, opts);\n    this.js = js;\n    this.monitor = null;\n    this.sub.closed.then(() => {\n      if (this.monitor) {\n        this.monitor.cancel();\n      }\n    });\n  }\n  set info(info) {\n    this.sub.info = info;\n  }\n  get info() {\n    return this.sub.info;\n  }\n  _resetOrderedConsumer(sseq) {\n    if (this.info === null || this.sub.isClosed()) {\n      return;\n    }\n    const newDeliver = createInbox(this.js.nc.options.inboxPrefix);\n    const nci = this.js.nc;\n    nci._resub(this.sub, newDeliver);\n    const info = this.info;\n    info.ordered_consumer_sequence.delivery_seq = 0;\n    info.flow_control.heartbeat_count = 0;\n    info.flow_control.fc_count = 0;\n    info.flow_control.consumer_restarts++;\n    info.deliver = newDeliver;\n    info.config.deliver_subject = newDeliver;\n    info.config.deliver_policy = DeliverPolicy.StartSequence;\n    info.config.opt_start_seq = sseq;\n    const req = {};\n    req.stream_name = this.info.stream;\n    req.config = info.config;\n    const subj = `${info.api.prefix}.CONSUMER.CREATE.${info.stream}`;\n    this.js._request(subj, req).then(v => {\n      const ci = v;\n      this.info.config = ci.config;\n      this.info.name = ci.name;\n    }).catch(err => {\n      const nerr = new NatsError(`unable to recreate ordered consumer ${info.stream} at seq ${sseq}`, ErrorCode.RequestError, err);\n      this.sub.callback(nerr, {});\n    });\n  }\n  _maybeSetupHbMonitoring() {\n    const ns = this.info?.config?.idle_heartbeat || 0;\n    if (ns) {\n      this._setupHbMonitoring(millis(ns));\n    }\n  }\n  _setupHbMonitoring(millis, cancelAfter = 0) {\n    const opts = {\n      cancelAfter: 0,\n      maxOut: 2\n    };\n    if (cancelAfter) {\n      opts.cancelAfter = cancelAfter;\n    }\n    const sub = this.sub;\n    const handler = v => {\n      const msg = newJsErrorMsg(409, `${Js409Errors.IdleHeartbeatMissed}: ${v}`, this.sub.subject);\n      const ordered = this.info?.ordered;\n      if (!ordered) {\n        this.sub.callback(null, msg);\n      } else {\n        if (!this.js.nc.protocol.connected) {\n          return false;\n        }\n        const seq = this.info?.ordered_consumer_sequence?.stream_seq || 0;\n        this._resetOrderedConsumer(seq + 1);\n        return false;\n      }\n      return !sub.noIterator;\n    };\n    this.monitor = new IdleHeartbeatMonitor(millis, handler, opts);\n  }\n  _checkHbOrderConsumer(msg) {\n    const rm = msg.headers.get(JsHeaders.ConsumerStalledHdr);\n    if (rm !== \"\") {\n      const nci = this.js.nc;\n      nci.publish(rm);\n    }\n    const lastDelivered = parseInt(msg.headers.get(JsHeaders.LastConsumerSeqHdr), 10);\n    const ordered = this.info.ordered_consumer_sequence;\n    this.info.flow_control.heartbeat_count++;\n    if (lastDelivered !== ordered.delivery_seq) {\n      this._resetOrderedConsumer(ordered.stream_seq + 1);\n    }\n    return false;\n  }\n  _checkOrderedConsumer(jm) {\n    const ordered = this.info.ordered_consumer_sequence;\n    const sseq = jm.info.streamSequence;\n    const dseq = jm.info.deliverySequence;\n    if (dseq != ordered.delivery_seq + 1) {\n      this._resetOrderedConsumer(ordered.stream_seq + 1);\n      return false;\n    }\n    ordered.delivery_seq = dseq;\n    ordered.stream_seq = sseq;\n    return true;\n  }\n  async destroy() {\n    if (!this.isClosed()) {\n      await this.drain();\n    }\n    const jinfo = this.sub.info;\n    const name = jinfo.config.durable_name || jinfo.name;\n    const subj = `${jinfo.api.prefix}.CONSUMER.DELETE.${jinfo.stream}.${name}`;\n    await jinfo.api._request(subj);\n  }\n  async consumerInfo() {\n    const jinfo = this.sub.info;\n    const name = jinfo.config.durable_name || jinfo.name;\n    const subj = `${jinfo.api.prefix}.CONSUMER.INFO.${jinfo.stream}.${name}`;\n    const ci = await jinfo.api._request(subj);\n    jinfo.last = ci;\n    return ci;\n  }\n}\nclass JetStreamPullSubscriptionImpl extends JetStreamSubscriptionImpl {\n  constructor(js, subject, opts) {\n    super(js, subject, opts);\n  }\n  pull(opts = {\n    batch: 1\n  }) {\n    const {\n      stream,\n      config,\n      name\n    } = this.sub.info;\n    const consumer = config.durable_name ?? name;\n    const args = {};\n    args.batch = opts.batch || 1;\n    args.no_wait = opts.no_wait || false;\n    if ((opts.max_bytes ?? 0) > 0) {\n      const fv = this.js.nc.features.get(Feature.JS_PULL_MAX_BYTES);\n      if (!fv.ok) {\n        throw new Error(`max_bytes is only supported on servers ${fv.min} or better`);\n      }\n      args.max_bytes = opts.max_bytes;\n    }\n    let expires = 0;\n    if (opts.expires && opts.expires > 0) {\n      expires = opts.expires;\n      args.expires = nanos(expires);\n    }\n    let hb = 0;\n    if (opts.idle_heartbeat && opts.idle_heartbeat > 0) {\n      hb = opts.idle_heartbeat;\n      args.idle_heartbeat = nanos(hb);\n    }\n    if (hb && expires === 0) {\n      throw new Error(\"idle_heartbeat requires expires\");\n    }\n    if (hb > expires) {\n      throw new Error(\"expires must be greater than idle_heartbeat\");\n    }\n    if (this.info) {\n      if (this.monitor) {\n        this.monitor.cancel();\n      }\n      if (expires && hb) {\n        if (!this.monitor) {\n          this._setupHbMonitoring(hb, expires);\n        } else {\n          this.monitor._change(hb, expires);\n        }\n      }\n      const api = this.info.api;\n      const subj = `${api.prefix}.CONSUMER.MSG.NEXT.${stream}.${consumer}`;\n      const reply = this.sub.subject;\n      api.nc.publish(subj, api.jc.encode(args), {\n        reply: reply\n      });\n    }\n  }\n}\nfunction msgAdapter(iterator) {\n  if (iterator) {\n    return iterMsgAdapter;\n  } else {\n    return cbMsgAdapter;\n  }\n}\nfunction cbMsgAdapter(err, msg) {\n  if (err) {\n    return [err, null];\n  }\n  err = checkJsError(msg);\n  if (err) {\n    return [err, null];\n  }\n  return [null, toJsMsg(msg)];\n}\nfunction iterMsgAdapter(err, msg) {\n  if (err) {\n    return [err, null];\n  }\n  const ne = checkJsError(msg);\n  if (ne !== null) {\n    return [hideNonTerminalJsErrors(ne), null];\n  }\n  return [null, toJsMsg(msg)];\n}\nfunction hideNonTerminalJsErrors(ne) {\n  if (ne !== null) {\n    switch (ne.code) {\n      case ErrorCode.JetStream404NoMessages:\n      case ErrorCode.JetStream408RequestTimeout:\n        return null;\n      case ErrorCode.JetStream409:\n        if (isTerminal409(ne)) {\n          return ne;\n        }\n        return null;\n      default:\n        return ne;\n    }\n  }\n  return null;\n}\nfunction autoAckJsMsg(data) {\n  if (data) {\n    data.ack();\n  }\n}\nclass DirectStreamAPIImpl extends BaseApiClient {\n  constructor(nc, opts) {\n    super(nc, opts);\n  }\n  async getMessage(stream, query) {\n    validateStreamName(stream);\n    let qq = query;\n    const {\n      last_by_subj\n    } = qq;\n    if (last_by_subj) {\n      qq = null;\n    }\n    const payload = qq ? this.jc.encode(qq) : Empty;\n    const pre = this.opts.apiPrefix || \"$JS.API\";\n    const subj = last_by_subj ? `${pre}.DIRECT.GET.${stream}.${last_by_subj}` : `${pre}.DIRECT.GET.${stream}`;\n    const r = await this.nc.request(subj, payload);\n    const err = checkJsError(r);\n    if (err) {\n      return Promise.reject(err);\n    }\n    const dm = new DirectMsgImpl(r);\n    return Promise.resolve(dm);\n  }\n}\nclass DirectMsgImpl {\n  data;\n  header;\n  static jc;\n  constructor(m) {\n    if (!m.headers) {\n      throw new Error(\"headers expected\");\n    }\n    this.data = m.data;\n    this.header = m.headers;\n  }\n  get subject() {\n    return this.header.last(DirectMsgHeaders.Subject);\n  }\n  get seq() {\n    const v = this.header.last(DirectMsgHeaders.Sequence);\n    return typeof v === \"string\" ? parseInt(v) : 0;\n  }\n  get time() {\n    return new Date(Date.parse(this.timestamp));\n  }\n  get timestamp() {\n    return this.header.last(DirectMsgHeaders.TimeStamp);\n  }\n  get stream() {\n    return this.header.last(DirectMsgHeaders.Stream);\n  }\n  json(reviver) {\n    return JSONCodec(reviver).decode(this.data);\n  }\n  string() {\n    return TD.decode(this.data);\n  }\n}\nclass JetStreamManagerImpl extends BaseApiClient {\n  streams;\n  consumers;\n  direct;\n  constructor(nc, opts) {\n    super(nc, opts);\n    this.streams = new StreamAPIImpl(nc, opts);\n    this.consumers = new ConsumerAPIImpl(nc, opts);\n    this.direct = new DirectStreamAPIImpl(nc, opts);\n  }\n  async getAccountInfo() {\n    const r = await this._request(`${this.prefix}.INFO`);\n    return r;\n  }\n  jetstream() {\n    return this.nc.jetstream(this.getOptions());\n  }\n  advisories() {\n    const iter = new QueuedIteratorImpl();\n    this.nc.subscribe(`$JS.EVENT.ADVISORY.>`, {\n      callback: (err, msg) => {\n        if (err) {\n          throw err;\n        }\n        try {\n          const d = this.parseJsResponse(msg);\n          const chunks = d.type.split(\".\");\n          const kind = chunks[chunks.length - 1];\n          iter.push({\n            kind: kind,\n            data: d\n          });\n        } catch (err) {\n          iter.stop(err);\n        }\n      }\n    });\n    return iter;\n  }\n}\nconst ServiceApiPrefix = \"$SRV\";\nclass ServiceMsgImpl {\n  msg;\n  constructor(msg) {\n    this.msg = msg;\n  }\n  get data() {\n    return this.msg.data;\n  }\n  get sid() {\n    return this.msg.sid;\n  }\n  get subject() {\n    return this.msg.subject;\n  }\n  get reply() {\n    return this.msg.reply || \"\";\n  }\n  get headers() {\n    return this.msg.headers;\n  }\n  respond(data, opts) {\n    return this.msg.respond(data, opts);\n  }\n  respondError(code, description, data, opts) {\n    opts = opts || {};\n    opts.headers = opts.headers || headers();\n    opts.headers?.set(ServiceErrorCodeHeader, `${code}`);\n    opts.headers?.set(ServiceErrorHeader, description);\n    return this.msg.respond(data, opts);\n  }\n  json(reviver) {\n    return this.msg.json(reviver);\n  }\n  string() {\n    return this.msg.string();\n  }\n}\nclass ServiceGroupImpl {\n  subject;\n  queue;\n  srv;\n  constructor(parent, name = \"\", queue = \"\") {\n    if (name !== \"\") {\n      validInternalToken(\"service group\", name);\n    }\n    let root = \"\";\n    if (parent instanceof ServiceImpl) {\n      this.srv = parent;\n      root = \"\";\n    } else if (parent instanceof ServiceGroupImpl) {\n      const sg = parent;\n      this.srv = sg.srv;\n      if (queue === \"\" && sg.queue !== \"\") {\n        queue = sg.queue;\n      }\n      root = sg.subject;\n    } else {\n      throw new Error(\"unknown ServiceGroup type\");\n    }\n    this.subject = this.calcSubject(root, name);\n    this.queue = queue;\n  }\n  calcSubject(root, name = \"\") {\n    if (name === \"\") {\n      return root;\n    }\n    return root !== \"\" ? `${root}.${name}` : name;\n  }\n  addEndpoint(name = \"\", opts) {\n    opts = opts || {\n      subject: name\n    };\n    const args = typeof opts === \"function\" ? {\n      handler: opts,\n      subject: name\n    } : opts;\n    validateName(\"endpoint\", name);\n    let {\n      subject,\n      handler,\n      metadata,\n      queue\n    } = args;\n    subject = subject || name;\n    queue = queue || this.queue;\n    validSubjectName(\"endpoint subject\", subject);\n    subject = this.calcSubject(this.subject, subject);\n    const ne = {\n      name,\n      subject,\n      queue,\n      handler,\n      metadata\n    };\n    return this.srv._addEndpoint(ne);\n  }\n  addGroup(name = \"\", queue = \"\") {\n    return new ServiceGroupImpl(this, name, queue);\n  }\n}\nfunction validSubjectName(context, subj) {\n  if (subj === \"\") {\n    throw new Error(`${context} cannot be empty`);\n  }\n  if (subj.indexOf(\" \") !== -1) {\n    throw new Error(`${context} cannot contain spaces: '${subj}'`);\n  }\n  const tokens = subj.split(\".\");\n  tokens.forEach((v, idx) => {\n    if (v === \">\" && idx !== tokens.length - 1) {\n      throw new Error(`${context} cannot have internal '>': '${subj}'`);\n    }\n  });\n}\nfunction validInternalToken(context, subj) {\n  if (subj.indexOf(\" \") !== -1) {\n    throw new Error(`${context} cannot contain spaces: '${subj}'`);\n  }\n  const tokens = subj.split(\".\");\n  tokens.forEach(v => {\n    if (v === \">\") {\n      throw new Error(`${context} name cannot contain internal '>': '${subj}'`);\n    }\n  });\n}\nclass ServiceImpl {\n  nc;\n  _id;\n  config;\n  handlers;\n  internal;\n  _stopped;\n  _done;\n  started;\n  static controlSubject(verb, name = \"\", id = \"\", prefix) {\n    const pre = prefix ?? ServiceApiPrefix;\n    if (name === \"\" && id === \"\") {\n      return `${pre}.${verb}`;\n    }\n    validateName(\"control subject name\", name);\n    if (id !== \"\") {\n      validateName(\"control subject id\", id);\n      return `${pre}.${verb}.${name}.${id}`;\n    }\n    return `${pre}.${verb}.${name}`;\n  }\n  constructor(nc, config = {\n    name: \"\",\n    version: \"\"\n  }) {\n    this.nc = nc;\n    this.config = Object.assign({}, config);\n    if (!this.config.queue) {\n      this.config.queue = \"q\";\n    }\n    validateName(\"name\", this.config.name);\n    validateName(\"queue\", this.config.queue);\n    parseSemVer(this.config.version);\n    this._id = nuid.next();\n    this.internal = [];\n    this._done = deferred();\n    this._stopped = false;\n    this.handlers = [];\n    this.started = new Date().toISOString();\n    this.reset();\n    this.nc.closed().then(() => {\n      this.close().catch();\n    }).catch(err => {\n      this.close(err).catch();\n    });\n  }\n  get subjects() {\n    return this.handlers.filter(s => {\n      return s.internal === false;\n    }).map(s => {\n      return s.subject;\n    });\n  }\n  get id() {\n    return this._id;\n  }\n  get name() {\n    return this.config.name;\n  }\n  get description() {\n    return this.config.description ?? \"\";\n  }\n  get version() {\n    return this.config.version;\n  }\n  get metadata() {\n    return this.config.metadata;\n  }\n  errorToHeader(err) {\n    const h = headers();\n    if (err instanceof ServiceError) {\n      const se = err;\n      h.set(ServiceErrorHeader, se.message);\n      h.set(ServiceErrorCodeHeader, `${se.code}`);\n    } else {\n      h.set(ServiceErrorHeader, err.message);\n      h.set(ServiceErrorCodeHeader, \"500\");\n    }\n    return h;\n  }\n  setupHandler(h, internal = false) {\n    const queue = internal ? \"\" : h.queue ? h.queue : this.config.queue;\n    const {\n      name,\n      subject,\n      handler\n    } = h;\n    const sv = h;\n    sv.internal = internal;\n    if (internal) {\n      this.internal.push(sv);\n    }\n    sv.stats = new NamedEndpointStatsImpl(name, subject, queue);\n    sv.queue = queue;\n    const callback = handler ? (err, msg) => {\n      if (err) {\n        this.close(err);\n        return;\n      }\n      const start = Date.now();\n      try {\n        handler(err, new ServiceMsgImpl(msg));\n      } catch (err) {\n        sv.stats.countError(err);\n        msg?.respond(Empty, {\n          headers: this.errorToHeader(err)\n        });\n      } finally {\n        sv.stats.countLatency(start);\n      }\n    } : undefined;\n    sv.sub = this.nc.subscribe(subject, {\n      callback,\n      queue\n    });\n    sv.sub.closed.then(() => {\n      if (!this._stopped) {\n        this.close(new Error(`required subscription ${h.subject} stopped`)).catch();\n      }\n    }).catch(err => {\n      if (!this._stopped) {\n        const ne = new Error(`required subscription ${h.subject} errored: ${err.message}`);\n        ne.stack = err.stack;\n        this.close(ne).catch();\n      }\n    });\n    return sv;\n  }\n  info() {\n    return {\n      type: ServiceResponseType.INFO,\n      name: this.name,\n      id: this.id,\n      version: this.version,\n      description: this.description,\n      metadata: this.metadata,\n      endpoints: this.endpoints()\n    };\n  }\n  endpoints() {\n    return this.handlers.map(v => {\n      const {\n        subject,\n        metadata,\n        name,\n        queue\n      } = v;\n      return {\n        subject,\n        metadata,\n        name,\n        queue_group: queue\n      };\n    });\n  }\n  async stats() {\n    const endpoints = [];\n    for (const h of this.handlers) {\n      if (typeof this.config.statsHandler === \"function\") {\n        try {\n          h.stats.data = await this.config.statsHandler(h);\n        } catch (err) {\n          h.stats.countError(err);\n        }\n      }\n      endpoints.push(h.stats.stats(h.qi));\n    }\n    return {\n      type: ServiceResponseType.STATS,\n      name: this.name,\n      id: this.id,\n      version: this.version,\n      started: this.started,\n      metadata: this.metadata,\n      endpoints\n    };\n  }\n  addInternalHandler(verb, handler) {\n    const v = `${verb}`.toUpperCase();\n    this._doAddInternalHandler(`${v}-all`, verb, handler);\n    this._doAddInternalHandler(`${v}-kind`, verb, handler, this.name);\n    this._doAddInternalHandler(`${v}`, verb, handler, this.name, this.id);\n  }\n  _doAddInternalHandler(name, verb, handler, kind = \"\", id = \"\") {\n    const endpoint = {};\n    endpoint.name = name;\n    endpoint.subject = ServiceImpl.controlSubject(verb, kind, id);\n    endpoint.handler = handler;\n    this.setupHandler(endpoint, true);\n  }\n  start() {\n    const jc = JSONCodec();\n    const statsHandler = (err, msg) => {\n      if (err) {\n        this.close(err);\n        return Promise.reject(err);\n      }\n      return this.stats().then(s => {\n        msg?.respond(jc.encode(s));\n        return Promise.resolve();\n      });\n    };\n    const infoHandler = (err, msg) => {\n      if (err) {\n        this.close(err);\n        return Promise.reject(err);\n      }\n      msg?.respond(jc.encode(this.info()));\n      return Promise.resolve();\n    };\n    const ping = jc.encode(this.ping());\n    const pingHandler = (err, msg) => {\n      if (err) {\n        this.close(err).then().catch();\n        return Promise.reject(err);\n      }\n      msg.respond(ping);\n      return Promise.resolve();\n    };\n    this.addInternalHandler(ServiceVerb.PING, pingHandler);\n    this.addInternalHandler(ServiceVerb.STATS, statsHandler);\n    this.addInternalHandler(ServiceVerb.INFO, infoHandler);\n    this.handlers.forEach(h => {\n      const {\n        subject\n      } = h;\n      if (typeof subject !== \"string\") {\n        return;\n      }\n      if (h.handler === null) {\n        return;\n      }\n      this.setupHandler(h);\n    });\n    return Promise.resolve(this);\n  }\n  close(err) {\n    if (this._stopped) {\n      return this._done;\n    }\n    this._stopped = true;\n    let buf = [];\n    if (!this.nc.isClosed()) {\n      buf = this.handlers.concat(this.internal).map(h => {\n        return h.sub.drain();\n      });\n    }\n    Promise.allSettled(buf).then(() => {\n      this._done.resolve(err ? err : null);\n    });\n    return this._done;\n  }\n  get stopped() {\n    return this._done;\n  }\n  get isStopped() {\n    return this._stopped;\n  }\n  stop(err) {\n    return this.close(err);\n  }\n  ping() {\n    return {\n      type: ServiceResponseType.PING,\n      name: this.name,\n      id: this.id,\n      version: this.version,\n      metadata: this.metadata\n    };\n  }\n  reset() {\n    this.started = new Date().toISOString();\n    if (this.handlers) {\n      for (const h of this.handlers) {\n        h.stats.reset(h.qi);\n      }\n    }\n  }\n  addGroup(name, queue) {\n    return new ServiceGroupImpl(this, name, queue);\n  }\n  addEndpoint(name, handler) {\n    const sg = new ServiceGroupImpl(this);\n    return sg.addEndpoint(name, handler);\n  }\n  _addEndpoint(e) {\n    const qi = new QueuedIteratorImpl();\n    qi.noIterator = typeof e.handler === \"function\";\n    if (!qi.noIterator) {\n      e.handler = (err, msg) => {\n        err ? this.stop(err).catch() : qi.push(new ServiceMsgImpl(msg));\n      };\n      qi.iterClosed.then(() => {\n        this.close().catch();\n      });\n    }\n    const ss = this.setupHandler(e, false);\n    ss.qi = qi;\n    this.handlers.push(ss);\n    return qi;\n  }\n}\nclass NamedEndpointStatsImpl {\n  name;\n  subject;\n  average_processing_time;\n  num_requests;\n  processing_time;\n  num_errors;\n  last_error;\n  data;\n  metadata;\n  queue;\n  constructor(name, subject, queue = \"\") {\n    this.name = name;\n    this.subject = subject;\n    this.average_processing_time = 0;\n    this.num_errors = 0;\n    this.num_requests = 0;\n    this.processing_time = 0;\n    this.queue = queue;\n  }\n  reset(qi) {\n    this.num_requests = 0;\n    this.processing_time = 0;\n    this.average_processing_time = 0;\n    this.num_errors = 0;\n    this.last_error = undefined;\n    this.data = undefined;\n    const qii = qi;\n    if (qii) {\n      qii.time = 0;\n      qii.processed = 0;\n    }\n  }\n  countLatency(start) {\n    this.num_requests++;\n    this.processing_time += nanos(Date.now() - start);\n    this.average_processing_time = Math.round(this.processing_time / this.num_requests);\n  }\n  countError(err) {\n    this.num_errors++;\n    this.last_error = err.message;\n  }\n  _stats() {\n    const {\n      name,\n      subject,\n      average_processing_time,\n      num_errors,\n      num_requests,\n      processing_time,\n      last_error,\n      data,\n      queue\n    } = this;\n    return {\n      name,\n      subject,\n      average_processing_time,\n      num_errors,\n      num_requests,\n      processing_time,\n      last_error,\n      data,\n      queue_group: queue\n    };\n  }\n  stats(qi) {\n    const qii = qi;\n    if (qii?.noIterator === false) {\n      this.processing_time = qii.time;\n      this.num_requests = qii.processed;\n      this.average_processing_time = this.processing_time > 0 && this.num_requests > 0 ? this.processing_time / this.num_requests : 0;\n    }\n    return this._stats();\n  }\n}\nclass ServiceClientImpl {\n  nc;\n  prefix;\n  opts;\n  constructor(nc, opts = {\n    strategy: RequestStrategy.JitterTimer,\n    maxWait: 2000\n  }, prefix) {\n    this.nc = nc;\n    this.prefix = prefix;\n    this.opts = opts;\n  }\n  ping(name = \"\", id = \"\") {\n    return this.q(ServiceVerb.PING, name, id);\n  }\n  stats(name = \"\", id = \"\") {\n    return this.q(ServiceVerb.STATS, name, id);\n  }\n  info(name = \"\", id = \"\") {\n    return this.q(ServiceVerb.INFO, name, id);\n  }\n  async q(v, name = \"\", id = \"\") {\n    const iter = new QueuedIteratorImpl();\n    const jc = JSONCodec();\n    const subj = ServiceImpl.controlSubject(v, name, id, this.prefix);\n    const responses = await this.nc.requestMany(subj, Empty, this.opts);\n    (async () => {\n      for await (const m of responses) {\n        try {\n          const s = jc.decode(m.data);\n          iter.push(s);\n        } catch (err) {\n          iter.push(() => {\n            iter.stop(err);\n          });\n        }\n      }\n      iter.push(() => {\n        iter.stop();\n      });\n    })().catch(err => {\n      iter.stop(err);\n    });\n    return iter;\n  }\n}\nclass NatsConnectionImpl {\n  options;\n  protocol;\n  draining;\n  listeners;\n  _services;\n  constructor(opts) {\n    this.draining = false;\n    this.options = parseOptions(opts);\n    this.listeners = [];\n  }\n  static connect(opts = {}) {\n    return new Promise((resolve, reject) => {\n      const nc = new NatsConnectionImpl(opts);\n      ProtocolHandler.connect(nc.options, nc).then(ph => {\n        nc.protocol = ph;\n        (async function () {\n          for await (const s of ph.status()) {\n            nc.listeners.forEach(l => {\n              l.push(s);\n            });\n          }\n        })();\n        resolve(nc);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n  closed() {\n    return this.protocol.closed;\n  }\n  async close() {\n    await this.protocol.close();\n  }\n  _check(subject, sub, pub) {\n    if (this.isClosed()) {\n      throw NatsError.errorForCode(ErrorCode.ConnectionClosed);\n    }\n    if (sub && this.isDraining()) {\n      throw NatsError.errorForCode(ErrorCode.ConnectionDraining);\n    }\n    if (pub && this.protocol.noMorePublishing) {\n      throw NatsError.errorForCode(ErrorCode.ConnectionDraining);\n    }\n    subject = subject || \"\";\n    if (subject.length === 0) {\n      throw NatsError.errorForCode(ErrorCode.BadSubject);\n    }\n  }\n  publish(subject, data, options) {\n    this._check(subject, false, true);\n    this.protocol.publish(subject, data, options);\n  }\n  subscribe(subject, opts = {}) {\n    this._check(subject, true, false);\n    const sub = new SubscriptionImpl(this.protocol, subject, opts);\n    this.protocol.subscribe(sub);\n    return sub;\n  }\n  _resub(s, subject, max) {\n    this._check(subject, true, false);\n    const si = s;\n    si.max = max;\n    if (max) {\n      si.max = max + si.received;\n    }\n    this.protocol.resub(si, subject);\n  }\n  requestMany(subject, data = Empty, opts = {\n    maxWait: 1000,\n    maxMessages: -1\n  }) {\n    const asyncTraces = !(this.protocol.options.noAsyncTraces || false);\n    try {\n      this._check(subject, true, true);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    opts.strategy = opts.strategy || RequestStrategy.Timer;\n    opts.maxWait = opts.maxWait || 1000;\n    if (opts.maxWait < 1) {\n      return Promise.reject(new NatsError(\"timeout\", ErrorCode.InvalidOption));\n    }\n    const qi = new QueuedIteratorImpl();\n    function stop(err) {\n      qi.push(() => {\n        qi.stop(err);\n      });\n    }\n    function callback(err, msg) {\n      if (err || msg === null) {\n        stop(err === null ? undefined : err);\n      } else {\n        qi.push(msg);\n      }\n    }\n    if (opts.noMux) {\n      const stack = asyncTraces ? new Error().stack : null;\n      let max = typeof opts.maxMessages === \"number\" && opts.maxMessages > 0 ? opts.maxMessages : -1;\n      const sub = this.subscribe(createInbox(this.options.inboxPrefix), {\n        callback: (err, msg) => {\n          if (msg?.data?.length === 0 && msg?.headers?.status === ErrorCode.NoResponders) {\n            err = NatsError.errorForCode(ErrorCode.NoResponders);\n          }\n          if (err) {\n            if (stack) {\n              err.stack += `\\n\\n${stack}`;\n            }\n            cancel(err);\n            return;\n          }\n          callback(null, msg);\n          if (opts.strategy === RequestStrategy.Count) {\n            max--;\n            if (max === 0) {\n              cancel();\n            }\n          }\n          if (opts.strategy === RequestStrategy.JitterTimer) {\n            clearTimers();\n            timer = setTimeout(() => {\n              cancel();\n            }, 300);\n          }\n          if (opts.strategy === RequestStrategy.SentinelMsg) {\n            if (msg && msg.data.length === 0) {\n              cancel();\n            }\n          }\n        }\n      });\n      sub.closed.then(() => {\n        stop();\n      }).catch(err => {\n        qi.stop(err);\n      });\n      const cancel = err => {\n        if (err) {\n          qi.push(() => {\n            throw err;\n          });\n        }\n        clearTimers();\n        sub.drain().then(() => {\n          stop();\n        }).catch(_err => {\n          stop();\n        });\n      };\n      qi.iterClosed.then(() => {\n        clearTimers();\n        sub?.unsubscribe();\n      }).catch(_err => {\n        clearTimers();\n        sub?.unsubscribe();\n      });\n      try {\n        this.publish(subject, data, {\n          reply: sub.getSubject()\n        });\n      } catch (err) {\n        cancel(err);\n      }\n      let timer = setTimeout(() => {\n        cancel();\n      }, opts.maxWait);\n      const clearTimers = () => {\n        if (timer) {\n          clearTimeout(timer);\n        }\n      };\n    } else {\n      const rmo = opts;\n      rmo.callback = callback;\n      qi.iterClosed.then(() => {\n        r.cancel();\n      }).catch(err => {\n        r.cancel(err);\n      });\n      const r = new RequestMany(this.protocol.muxSubscriptions, subject, rmo);\n      this.protocol.request(r);\n      try {\n        this.publish(subject, data, {\n          reply: `${this.protocol.muxSubscriptions.baseInbox}${r.token}`,\n          headers: opts.headers\n        });\n      } catch (err) {\n        r.cancel(err);\n      }\n    }\n    return Promise.resolve(qi);\n  }\n  request(subject, data, opts = {\n    timeout: 1000,\n    noMux: false\n  }) {\n    try {\n      this._check(subject, true, true);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    const asyncTraces = !(this.protocol.options.noAsyncTraces || false);\n    opts.timeout = opts.timeout || 1000;\n    if (opts.timeout < 1) {\n      return Promise.reject(new NatsError(\"timeout\", ErrorCode.InvalidOption));\n    }\n    if (!opts.noMux && opts.reply) {\n      return Promise.reject(new NatsError(\"reply can only be used with noMux\", ErrorCode.InvalidOption));\n    }\n    if (opts.noMux) {\n      const inbox = opts.reply ? opts.reply : createInbox(this.options.inboxPrefix);\n      const d = deferred();\n      const errCtx = asyncTraces ? new Error() : null;\n      const sub = this.subscribe(inbox, {\n        max: 1,\n        timeout: opts.timeout,\n        callback: (err, msg) => {\n          if (err) {\n            if (errCtx && err.code !== ErrorCode.Timeout) {\n              err.stack += `\\n\\n${errCtx.stack}`;\n            }\n            d.reject(err);\n          } else {\n            err = isRequestError(msg);\n            if (err) {\n              if (errCtx) {\n                err.stack += `\\n\\n${errCtx.stack}`;\n              }\n              d.reject(err);\n            } else {\n              d.resolve(msg);\n            }\n          }\n        }\n      });\n      sub.requestSubject = subject;\n      this.protocol.publish(subject, data, {\n        reply: inbox,\n        headers: opts.headers\n      });\n      return d;\n    } else {\n      const r = new RequestOne(this.protocol.muxSubscriptions, subject, opts, asyncTraces);\n      this.protocol.request(r);\n      try {\n        this.publish(subject, data, {\n          reply: `${this.protocol.muxSubscriptions.baseInbox}${r.token}`,\n          headers: opts.headers\n        });\n      } catch (err) {\n        r.cancel(err);\n      }\n      const p = Promise.race([r.timer, r.deferred]);\n      p.catch(() => {\n        r.cancel();\n      });\n      return p;\n    }\n  }\n  flush() {\n    if (this.isClosed()) {\n      return Promise.reject(NatsError.errorForCode(ErrorCode.ConnectionClosed));\n    }\n    return this.protocol.flush();\n  }\n  drain() {\n    if (this.isClosed()) {\n      return Promise.reject(NatsError.errorForCode(ErrorCode.ConnectionClosed));\n    }\n    if (this.isDraining()) {\n      return Promise.reject(NatsError.errorForCode(ErrorCode.ConnectionDraining));\n    }\n    this.draining = true;\n    return this.protocol.drain();\n  }\n  isClosed() {\n    return this.protocol.isClosed();\n  }\n  isDraining() {\n    return this.draining;\n  }\n  getServer() {\n    const srv = this.protocol.getServer();\n    return srv ? srv.listen : \"\";\n  }\n  status() {\n    const iter = new QueuedIteratorImpl();\n    iter.iterClosed.then(() => {\n      const idx = this.listeners.indexOf(iter);\n      this.listeners.splice(idx, 1);\n    });\n    this.listeners.push(iter);\n    return iter;\n  }\n  get info() {\n    return this.protocol.isClosed() ? undefined : this.protocol.info;\n  }\n  stats() {\n    return {\n      inBytes: this.protocol.inBytes,\n      outBytes: this.protocol.outBytes,\n      inMsgs: this.protocol.inMsgs,\n      outMsgs: this.protocol.outMsgs\n    };\n  }\n  async jetstreamManager(opts = {}) {\n    const adm = new JetStreamManagerImpl(this, opts);\n    if (opts.checkAPI !== false) {\n      try {\n        await adm.getAccountInfo();\n      } catch (err) {\n        const ne = err;\n        if (ne.code === ErrorCode.NoResponders) {\n          ne.code = ErrorCode.JetStreamNotEnabled;\n        }\n        throw ne;\n      }\n    }\n    return adm;\n  }\n  jetstream(opts = {}) {\n    return new JetStreamClientImpl(this, opts);\n  }\n  getServerVersion() {\n    const info = this.info;\n    return info ? parseSemVer(info.version) : undefined;\n  }\n  async rtt() {\n    if (!this.protocol._closed && !this.protocol.connected) {\n      throw NatsError.errorForCode(ErrorCode.Disconnect);\n    }\n    const start = Date.now();\n    await this.flush();\n    return Date.now() - start;\n  }\n  get features() {\n    return this.protocol.features;\n  }\n  get services() {\n    if (!this._services) {\n      this._services = new ServicesFactory(this);\n    }\n    return this._services;\n  }\n  reconnect() {\n    if (this.isClosed()) {\n      return Promise.reject(NatsError.errorForCode(ErrorCode.ConnectionClosed));\n    }\n    if (this.isDraining()) {\n      return Promise.reject(NatsError.errorForCode(ErrorCode.ConnectionDraining));\n    }\n    return this.protocol.reconnect();\n  }\n}\nclass ServicesFactory {\n  nc;\n  constructor(nc) {\n    this.nc = nc;\n  }\n  add(config) {\n    try {\n      const s = new ServiceImpl(this.nc, config);\n      return s.start();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n  client(opts, prefix) {\n    return new ServiceClientImpl(this.nc, opts, prefix);\n  }\n}\nclass Metric {\n  name;\n  duration;\n  date;\n  payload;\n  msgs;\n  lang;\n  version;\n  bytes;\n  asyncRequests;\n  min;\n  max;\n  constructor(name, duration) {\n    this.name = name;\n    this.duration = duration;\n    this.date = Date.now();\n    this.payload = 0;\n    this.msgs = 0;\n    this.bytes = 0;\n  }\n  toString() {\n    const sec = this.duration / 1000;\n    const mps = Math.round(this.msgs / sec);\n    const label = this.asyncRequests ? \"asyncRequests\" : \"\";\n    let minmax = \"\";\n    if (this.max) {\n      minmax = `${this.min}/${this.max}`;\n    }\n    return `${this.name}${label ? \" [asyncRequests]\" : \"\"} ${humanizeNumber(mps)} msgs/sec - [${sec.toFixed(2)} secs] ~ ${throughput(this.bytes, sec)} ${minmax}`;\n  }\n  toCsv() {\n    return `\"${this.name}\",${new Date(this.date).toISOString()},${this.lang},${this.version},${this.msgs},${this.payload},${this.bytes},${this.duration},${this.asyncRequests ? this.asyncRequests : false}\\n`;\n  }\n  static header() {\n    return `Test,Date,Lang,Version,Count,MsgPayload,Bytes,Millis,Async\\n`;\n  }\n}\nclass Bench {\n  nc;\n  callbacks;\n  msgs;\n  size;\n  subject;\n  asyncRequests;\n  pub;\n  sub;\n  req;\n  rep;\n  perf;\n  payload;\n  constructor(nc, opts = {\n    msgs: 100000,\n    size: 128,\n    subject: \"\",\n    asyncRequests: false,\n    pub: false,\n    sub: false,\n    req: false,\n    rep: false\n  }) {\n    this.nc = nc;\n    this.callbacks = opts.callbacks || false;\n    this.msgs = opts.msgs || 0;\n    this.size = opts.size || 0;\n    this.subject = opts.subject || nuid.next();\n    this.asyncRequests = opts.asyncRequests || false;\n    this.pub = opts.pub || false;\n    this.sub = opts.sub || false;\n    this.req = opts.req || false;\n    this.rep = opts.rep || false;\n    this.perf = new Perf();\n    this.payload = this.size ? new Uint8Array(this.size) : Empty;\n    if (!this.pub && !this.sub && !this.req && !this.rep) {\n      throw new Error(\"no bench option selected\");\n    }\n  }\n  async run() {\n    this.nc.closed().then(err => {\n      if (err) {\n        throw new NatsError(`bench closed with an error: ${err.message}`, ErrorCode.Unknown, err);\n      }\n    });\n    if (this.callbacks) {\n      await this.runCallbacks();\n    } else {\n      await this.runAsync();\n    }\n    return this.processMetrics();\n  }\n  processMetrics() {\n    const nc = this.nc;\n    const {\n      lang,\n      version\n    } = nc.protocol.transport;\n    if (this.pub && this.sub) {\n      this.perf.measure(\"pubsub\", \"pubStart\", \"subStop\");\n    }\n    if (this.req && this.rep) {\n      this.perf.measure(\"reqrep\", \"reqStart\", \"reqStop\");\n    }\n    const measures = this.perf.getEntries();\n    const pubsub = measures.find(m => m.name === \"pubsub\");\n    const reqrep = measures.find(m => m.name === \"reqrep\");\n    const req = measures.find(m => m.name === \"req\");\n    const rep = measures.find(m => m.name === \"rep\");\n    const pub = measures.find(m => m.name === \"pub\");\n    const sub = measures.find(m => m.name === \"sub\");\n    const stats = this.nc.stats();\n    const metrics = [];\n    if (pubsub) {\n      const {\n        name,\n        duration\n      } = pubsub;\n      const m = new Metric(name, duration);\n      m.msgs = this.msgs * 2;\n      m.bytes = stats.inBytes + stats.outBytes;\n      m.lang = lang;\n      m.version = version;\n      m.payload = this.payload.length;\n      metrics.push(m);\n    }\n    if (reqrep) {\n      const {\n        name,\n        duration\n      } = reqrep;\n      const m = new Metric(name, duration);\n      m.msgs = this.msgs * 2;\n      m.bytes = stats.inBytes + stats.outBytes;\n      m.lang = lang;\n      m.version = version;\n      m.payload = this.payload.length;\n      metrics.push(m);\n    }\n    if (pub) {\n      const {\n        name,\n        duration\n      } = pub;\n      const m = new Metric(name, duration);\n      m.msgs = this.msgs;\n      m.bytes = stats.outBytes;\n      m.lang = lang;\n      m.version = version;\n      m.payload = this.payload.length;\n      metrics.push(m);\n    }\n    if (sub) {\n      const {\n        name,\n        duration\n      } = sub;\n      const m = new Metric(name, duration);\n      m.msgs = this.msgs;\n      m.bytes = stats.inBytes;\n      m.lang = lang;\n      m.version = version;\n      m.payload = this.payload.length;\n      metrics.push(m);\n    }\n    if (rep) {\n      const {\n        name,\n        duration\n      } = rep;\n      const m = new Metric(name, duration);\n      m.msgs = this.msgs;\n      m.bytes = stats.inBytes + stats.outBytes;\n      m.lang = lang;\n      m.version = version;\n      m.payload = this.payload.length;\n      metrics.push(m);\n    }\n    if (req) {\n      const {\n        name,\n        duration\n      } = req;\n      const m = new Metric(name, duration);\n      m.msgs = this.msgs;\n      m.bytes = stats.inBytes + stats.outBytes;\n      m.lang = lang;\n      m.version = version;\n      m.payload = this.payload.length;\n      metrics.push(m);\n    }\n    return metrics;\n  }\n  async runCallbacks() {\n    const jobs = [];\n    if (this.sub) {\n      const d = deferred();\n      jobs.push(d);\n      let i = 0;\n      this.nc.subscribe(this.subject, {\n        max: this.msgs,\n        callback: () => {\n          i++;\n          if (i === 1) {\n            this.perf.mark(\"subStart\");\n          }\n          if (i === this.msgs) {\n            this.perf.mark(\"subStop\");\n            this.perf.measure(\"sub\", \"subStart\", \"subStop\");\n            d.resolve();\n          }\n        }\n      });\n    }\n    if (this.rep) {\n      const d = deferred();\n      jobs.push(d);\n      let i = 0;\n      this.nc.subscribe(this.subject, {\n        max: this.msgs,\n        callback: (_, m) => {\n          m.respond(this.payload);\n          i++;\n          if (i === 1) {\n            this.perf.mark(\"repStart\");\n          }\n          if (i === this.msgs) {\n            this.perf.mark(\"repStop\");\n            this.perf.measure(\"rep\", \"repStart\", \"repStop\");\n            d.resolve();\n          }\n        }\n      });\n    }\n    if (this.pub) {\n      const job = (async () => {\n        this.perf.mark(\"pubStart\");\n        for (let i = 0; i < this.msgs; i++) {\n          this.nc.publish(this.subject, this.payload);\n        }\n        await this.nc.flush();\n        this.perf.mark(\"pubStop\");\n        this.perf.measure(\"pub\", \"pubStart\", \"pubStop\");\n      })();\n      jobs.push(job);\n    }\n    if (this.req) {\n      const job = (async () => {\n        if (this.asyncRequests) {\n          this.perf.mark(\"reqStart\");\n          const a = [];\n          for (let i = 0; i < this.msgs; i++) {\n            a.push(this.nc.request(this.subject, this.payload, {\n              timeout: 20000\n            }));\n          }\n          await Promise.all(a);\n          this.perf.mark(\"reqStop\");\n          this.perf.measure(\"req\", \"reqStart\", \"reqStop\");\n        } else {\n          this.perf.mark(\"reqStart\");\n          for (let i = 0; i < this.msgs; i++) {\n            await this.nc.request(this.subject);\n          }\n          this.perf.mark(\"reqStop\");\n          this.perf.measure(\"req\", \"reqStart\", \"reqStop\");\n        }\n      })();\n      jobs.push(job);\n    }\n    await Promise.all(jobs);\n  }\n  async runAsync() {\n    const jobs = [];\n    if (this.rep) {\n      let first = false;\n      const sub = this.nc.subscribe(this.subject, {\n        max: this.msgs\n      });\n      const job = (async () => {\n        for await (const m of sub) {\n          if (!first) {\n            this.perf.mark(\"repStart\");\n            first = true;\n          }\n          m.respond(this.payload);\n        }\n        await this.nc.flush();\n        this.perf.mark(\"repStop\");\n        this.perf.measure(\"rep\", \"repStart\", \"repStop\");\n      })();\n      jobs.push(job);\n    }\n    if (this.sub) {\n      let first = false;\n      const sub = this.nc.subscribe(this.subject, {\n        max: this.msgs\n      });\n      const job = (async () => {\n        for await (const _m of sub) {\n          if (!first) {\n            this.perf.mark(\"subStart\");\n            first = true;\n          }\n        }\n        this.perf.mark(\"subStop\");\n        this.perf.measure(\"sub\", \"subStart\", \"subStop\");\n      })();\n      jobs.push(job);\n    }\n    if (this.pub) {\n      const job = (async () => {\n        this.perf.mark(\"pubStart\");\n        for (let i = 0; i < this.msgs; i++) {\n          this.nc.publish(this.subject, this.payload);\n        }\n        await this.nc.flush();\n        this.perf.mark(\"pubStop\");\n        this.perf.measure(\"pub\", \"pubStart\", \"pubStop\");\n      })();\n      jobs.push(job);\n    }\n    if (this.req) {\n      const job = (async () => {\n        if (this.asyncRequests) {\n          this.perf.mark(\"reqStart\");\n          const a = [];\n          for (let i = 0; i < this.msgs; i++) {\n            a.push(this.nc.request(this.subject, this.payload, {\n              timeout: 20000\n            }));\n          }\n          await Promise.all(a);\n          this.perf.mark(\"reqStop\");\n          this.perf.measure(\"req\", \"reqStart\", \"reqStop\");\n        } else {\n          this.perf.mark(\"reqStart\");\n          for (let i = 0; i < this.msgs; i++) {\n            await this.nc.request(this.subject);\n          }\n          this.perf.mark(\"reqStop\");\n          this.perf.measure(\"req\", \"reqStart\", \"reqStop\");\n        }\n      })();\n      jobs.push(job);\n    }\n    await Promise.all(jobs);\n  }\n}\nfunction throughput(bytes, seconds) {\n  return `${humanizeBytes(bytes / seconds)}/sec`;\n}\nfunction humanizeBytes(bytes, si = false) {\n  const base = si ? 1000 : 1024;\n  const pre = si ? [\"k\", \"M\", \"G\", \"T\", \"P\", \"E\"] : [\"K\", \"M\", \"G\", \"T\", \"P\", \"E\"];\n  const post = si ? \"iB\" : \"B\";\n  if (bytes < base) {\n    return `${bytes.toFixed(2)} ${post}`;\n  }\n  const exp = parseInt(Math.log(bytes) / Math.log(base) + \"\");\n  const index = parseInt(exp - 1 + \"\");\n  return `${(bytes / Math.pow(base, exp)).toFixed(2)} ${pre[index]}${post}`;\n}\nfunction humanizeNumber(n) {\n  return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\nexport { backoff, Bench, buildAuthenticator, canonicalMIMEHeaderKey, createInbox, credsAuthenticator, deadline, DebugEvents, deferred, delay, Empty, ErrorCode, Events, headers, JSONCodec, jwtAuthenticator, Match, Metric, MsgHdrsImpl, NatsError, nkeyAuthenticator, mod as nkeys, Nuid, nuid, RequestStrategy, ServiceError, ServiceErrorCodeHeader, ServiceErrorHeader, ServiceResponseType, ServiceVerb, StringCodec, syncIterator, tokenAuthenticator, usernamePasswordAuthenticator };\nexport { checkJsError, isFlowControlMsg, isHeartbeatMsg, millis, nanos };\nexport { AckPolicy, AdvisoryKind, ConsumerDebugEvents, ConsumerEvents, DeliverPolicy, DirectMsgHeaders, DiscardPolicy, JsHeaders, ReplayPolicy, RepublishHeaders, RetentionPolicy, StorageType, StoreCompression };\nexport { consumerOpts };\nconst VERSION = \"1.19.1\";\nconst LANG = \"nats.ws\";\nclass WsTransport {\n  version;\n  lang;\n  closeError;\n  connected;\n  done;\n  socket;\n  options;\n  socketClosed;\n  encrypted;\n  peeked;\n  yields;\n  signal;\n  closedNotification;\n  constructor() {\n    this.version = VERSION;\n    this.lang = LANG;\n    this.connected = false;\n    this.done = false;\n    this.socketClosed = false;\n    this.encrypted = false;\n    this.peeked = false;\n    this.yields = [];\n    this.signal = deferred();\n    this.closedNotification = deferred();\n  }\n  async connect(server, options) {\n    const connected = false;\n    const connLock = deferred();\n    if (options.tls) {\n      connLock.reject(new NatsError(\"tls\", ErrorCode.InvalidOption));\n      return connLock;\n    }\n    this.options = options;\n    const u = server.src;\n    if (options.wsFactory) {\n      const {\n        socket,\n        encrypted\n      } = await options.wsFactory(server.src, options);\n      this.socket = socket;\n      this.encrypted = encrypted;\n    } else {\n      this.encrypted = u.indexOf(\"wss://\") === 0;\n      this.socket = new WebSocket(u);\n    }\n    this.socket.binaryType = \"arraybuffer\";\n    this.socket.onopen = () => {\n      if (this.isDiscarded()) {\n        return;\n      }\n    };\n    this.socket.onmessage = me => {\n      if (this.isDiscarded()) {\n        return;\n      }\n      this.yields.push(new Uint8Array(me.data));\n      if (this.peeked) {\n        this.signal.resolve();\n        return;\n      }\n      const t = DataBuffer.concat(...this.yields);\n      const pm = extractProtocolMessage(t);\n      if (pm !== \"\") {\n        const m = INFO.exec(pm);\n        if (!m) {\n          if (options.debug) {\n            console.error(\"!!!\", render(t));\n          }\n          connLock.reject(new Error(\"unexpected response from server\"));\n          return;\n        }\n        try {\n          const info = JSON.parse(m[1]);\n          checkOptions(info, this.options);\n          this.peeked = true;\n          this.connected = true;\n          this.signal.resolve();\n          connLock.resolve();\n        } catch (err) {\n          connLock.reject(err);\n          return;\n        }\n      }\n    };\n    this.socket.onclose = evt => {\n      if (this.isDiscarded()) {\n        return;\n      }\n      this.socketClosed = true;\n      let reason;\n      if (this.done) return;\n      if (!evt.wasClean) {\n        reason = new Error(evt.reason);\n      }\n      this._closed(reason);\n    };\n    this.socket.onerror = e => {\n      if (this.isDiscarded()) {\n        return;\n      }\n      const evt = e;\n      const err = new NatsError(evt.message, ErrorCode.Unknown, new Error(evt.error));\n      if (!connected) {\n        connLock.reject(err);\n      } else {\n        this._closed(err);\n      }\n    };\n    return connLock;\n  }\n  disconnect() {\n    this._closed(undefined, true);\n  }\n  async _closed(err, internal = true) {\n    if (this.isDiscarded()) {\n      return;\n    }\n    if (!this.connected) return;\n    if (this.done) return;\n    this.closeError = err;\n    if (!err) {\n      while (!this.socketClosed && this.socket.bufferedAmount > 0) {\n        await delay(100);\n      }\n    }\n    this.done = true;\n    try {\n      this.socket.close(err ? 1002 : 1000, err ? err.message : undefined);\n    } catch (err) {}\n    if (internal) {\n      this.closedNotification.resolve(err);\n    }\n  }\n  get isClosed() {\n    return this.done;\n  }\n  [Symbol.asyncIterator]() {\n    return this.iterate();\n  }\n  async *iterate() {\n    while (true) {\n      if (this.isDiscarded()) {\n        return;\n      }\n      if (this.yields.length === 0) {\n        await this.signal;\n      }\n      const yields = this.yields;\n      this.yields = [];\n      for (let i = 0; i < yields.length; i++) {\n        if (this.options.debug) {\n          console.info(`> ${render(yields[i])}`);\n        }\n        yield yields[i];\n      }\n      if (this.done) {\n        break;\n      } else if (this.yields.length === 0) {\n        yields.length = 0;\n        this.yields = yields;\n        this.signal = deferred();\n      }\n    }\n  }\n  isEncrypted() {\n    return this.connected && this.encrypted;\n  }\n  send(frame) {\n    if (this.isDiscarded()) {\n      return;\n    }\n    try {\n      this.socket.send(frame.buffer);\n      if (this.options.debug) {\n        console.info(`< ${render(frame)}`);\n      }\n      return;\n    } catch (err) {\n      if (this.options.debug) {\n        console.error(`!!! ${render(frame)}: ${err}`);\n      }\n    }\n  }\n  close(err) {\n    return this._closed(err, false);\n  }\n  closed() {\n    return this.closedNotification;\n  }\n  isDiscarded() {\n    if (this.done) {\n      this.discard();\n      return true;\n    }\n    return false;\n  }\n  discard() {\n    this.done = true;\n    try {\n      this.socket?.close();\n    } catch (_err) {}\n  }\n}\nfunction wsUrlParseFn(u) {\n  const ut = /^(.*:\\/\\/)(.*)/;\n  if (!ut.test(u)) {\n    u = `https://${u}`;\n  }\n  let url = new URL(u);\n  const srcProto = url.protocol.toLowerCase();\n  if (srcProto !== \"https:\" && srcProto !== \"http\") {\n    u = u.replace(/^(.*:\\/\\/)(.*)/gm, \"$2\");\n    url = new URL(`http://${u}`);\n  }\n  let protocol;\n  let port;\n  const host = url.hostname;\n  const path = url.pathname;\n  const search = url.search || \"\";\n  switch (srcProto) {\n    case \"http:\":\n    case \"ws:\":\n    case \"nats:\":\n      port = url.port || \"80\";\n      protocol = \"ws:\";\n      break;\n    default:\n      port = url.port || \"443\";\n      protocol = \"wss:\";\n      break;\n  }\n  return `${protocol}//${host}:${port}${path}${search}`;\n}\nfunction connect(opts = {}) {\n  setTransportFactory({\n    defaultPort: 443,\n    urlParseFn: wsUrlParseFn,\n    factory: () => {\n      return new WsTransport();\n    }\n  });\n  return NatsConnectionImpl.connect(opts);\n}\nexport { connect };","map":{"version":3,"names":["Empty","Uint8Array","TE","TextEncoder","TD","TextDecoder","concat","bufs","max","i","length","out","index","set","encode","a","push","decode","digits","base","maxSeq","minInc","maxInc","totalLen","_getRandomValues","Math","floor","random","fillRandom","globalThis","crypto","getRandomValues","Nuid","buf","seq","inc","constructor","init","setPre","initSeqAndInc","fillSeq","cbuf","di","charCodeAt","n","next","String","fromCharCode","apply","reset","nuid","Events","DebugEvents","ErrorCode","isNatsError","err","code","Messages","messages","Map","InvalidPayload","BadJson","WssRequired","getMessage","s","get","NatsError","Error","name","message","permissionContext","chainedError","api_error","errorForCode","m","isAuthError","AuthenticationExpired","AuthorizationViolation","isAuthTimeout","AuthenticationTimeout","isPermissionError","PermissionsViolation","isProtocolError","ProtocolError","isJetStreamError","undefined","jsError","Match","RequestStrategy","syncIterator","src","iter","Symbol","asyncIterator","done","Promise","resolve","value","ServiceResponseType","ServiceErrorHeader","ServiceErrorCodeHeader","ServiceError","isServiceError","msg","toServiceError","scode","headers","parseInt","description","createInbox","prefix","split","forEach","v","DEFAULT_HOST","ServiceVerb","extend","b","o","Object","keys","k","render","frame","cr","lf","replace","timeout","ms","asyncTraces","Timeout","methods","timer","p","_resolve","reject","cancel","clearTimeout","setTimeout","assign","delay","deadline","millis","d","deferred","race","finally","shuffle","j","Perf","timers","measures","mark","key","performance","now","measure","startKey","endKey","e","getEntries","values","duration","jitter","backoff","policy","Array","isArray","attempt","DataBuffer","buffers","byteLength","fromAscii","toAscii","pack","shift","drain","pop","subarray","fill","peek","size","transportConfig","setTransportFactory","config","defaultPort","getUrlParseFn","urlParseFn","newTransport","factory","getResolveFn","dnsResolveFn","CR_LF","CRLF","CR","LF","protoLen","ba","extractProtocolMessage","len","slice","IPv4LEN","ASCII0","ASCIIA","ASCIIa","ipV4","c","ip","idx","isIP","h","parseIP","parseIPv4","parseIPv6","substring","ok","dtoi","ellipsis","xtoi","ip4","isIPV4OrHostname","hp","indexOf","isIPV6","filterIpv6MappedToIpv4","toUpperCase","hostPort","u","trim","match","op","port","protocol","url","URL","hostname","charAt","listen","host","ServerImpl","didConnect","reconnects","lastConnect","gossiped","tlsName","resolves","toString","opts","fn","ips","debug","console","log","join","proto","ss","randomize","Servers","firstSelect","servers","currentServer","listens","addServer","clear","updateTLSName","cs","getCurrentServer","implicit","selectServer","t","removeCurrentServer","removeServer","server","splice","getServers","update","info","added","deleted","discovered","connect_urls","toDelete","delete","reverse","removed","QueuedIteratorImpl","inflight","processed","received","noIterator","iterClosed","signal","yields","filtered","pendingFiltered","ingestionFilterFn","protocolFilterFn","dispatchedFn","ctx","_data","time","yielding","iterate","ingest","ApiError","start","Date","stop","getProcessed","getPending","getReceived","canonicalMIMEHeaderKey","dash","toLower","upper","BadHeader","MsgHdrsImpl","HEADER","_code","_description","iterator","entries","equals","mh","vv","sort","aa","lines","str","isNaN","map","append","validHeaderValue","inv","test","sk","findKeys","Exact","filter","CanonicalMIME","lci","toLowerCase","last","has","ck","hasError","status","toRecord","data","fromRecord","r","StringCodec","JSONCodec","reviver","JSON","stringify","parse","isRequestError","NoResponders","MsgImpl","_headers","_msg","_rdata","_reply","_subject","publisher","jc","subject","reply","sid","hdr","respond","publish","subj","payloadAndHeaders","json","string","MuxSubscription","baseInbox","reqs","add","token","getToken","all","from","handleError","isMuxPermissionError","resolver","operation","req","find","requestSubject","dispatcher","close","Heartbeat","ph","interval","maxOut","pendings","_schedule","stale","_reset","disconnect","dispatchStatus","type","PingTimer","ping","flush","then","catch","AssertionError","assert","cond","MIN_READ","MAX_SIZE","copy","dst","off","DenoBuffer","_buf","_off","ab","bytes","options","empty","capacity","buffer","truncate","_reslice","_tryGrowByReslice","l","readByte","read","nread","writeByte","write","of","writeString","_grow","min","grow","readFrom","tmp","shouldGrow","Kind","newMsgArg","ma","ASCII_0","Parser","state","as","drop","argBuf","msgBuf","State","OP_START","cc","M","OP_M","H","OP_H","P","OP_P","PLUS","OP_PLUS","MINUS","OP_MINUS","I","OP_I","fail","S","OP_MS","G","g","OP_MSG","SPACE","TAB","OP_MSG_SPC","MSG_ARG","NL","arg","processMsgArgs","MSG_PAYLOAD","kind","MSG","MSG_END","toCopy","avail","O","OP_PLUS_O","K","OP_PLUS_OK","OK","E","OP_MINUS_E","R","OP_MINUS_ER","OP_MINUS_ERR","OP_MINUS_ERR_SPC","MINUS_ERR_ARG","ERR","OP_PI","OP_PO","N","OP_PON","OP_PONG","PONG","OP_PIN","OP_PING","PING","OP_IN","F","f","OP_INF","OP_INFO","OP_INFO_SPC","INFO_ARG","INFO","cloneMsgArg","processHeaderMsgArgs","args","protoParseInt","label","parseSemVer","major","minor","micro","compare","Feature","Features","features","disabled","resetDisabled","disable","isDisabled","JS_KV","JS_OBJECTSTORE","JS_PULL_MAX_BYTES","JS_NEW_CONSUMER_CREATE_API","JS_ALLOW_DIRECT","JS_MULTIPLE_CONSUMER_FILTER","JS_SIMPLIFICATION","JS_STREAM_CONSUMER_METADATA","JS_CONSUMER_FILTER_SUBJECTS","JS_STREAM_FIRST_SEQ","JS_STREAM_SUBJECT_TRANSFORM","JS_STREAM_SOURCE_SUBJECT_TRANSFORM","JS_STREAM_COMPRESSION","JS_DEFAULT_CONSUMER_LIMITS","requires","supports","require","nacl","u64","hi","lo","gf","Float64Array","randombytes","_0","_9","gf0","gf1","_121665","D","D2","X","Y","L32","x","ld32","dl64","st32","ts64","vn","xi","y","yi","crypto_verify_16","crypto_verify_32","core","inp","w","Uint32Array","crypto_core_salsa20","crypto_core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","z","crypto_stream_salsa20","crypto_stream","crypto_stream_xor","add1305","minusp","crypto_onetimeauth","outpos","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","sel25519","q","pack25519","neq25519","par25519","unpack25519","A","Z","inv25519","pow2523","crypto_scalarmult","x32","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","crypto_box_afternm","crypto_box_open_afternm","crypto_box","crypto_box_open","add64","m16","arguments","shr64","xor64","c1","Ch","Maj","Sigma0","Sigma1","sigma0","sigma1","crypto_hashblocks","pos","iv","crypto_hash","cswap","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","seeded","L","modL","carry","reduce","crypto_sign","sm","smlen","unpackneg","chk","num","den","den2","den4","den6","crypto_sign_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_secretbox_BOXZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","lowlevel","checkLengths","checkBoxLengths","checkArrayTypes","TypeError","cleanup","arr","randomBytes","secretbox","nonce","open","box","keyLength","nonceLength","overheadLength","scalarMult","scalarLength","groupElementLength","publicKey","secretKey","before","after","keyPair","fromSecretKey","publicKeyLength","secretKeyLength","sharedKeyLength","sign","signedMsg","mlen","detached","sig","verify","fromSeed","seed","seedLength","signatureLength","hash","hashLength","setPRNG","crypto1","msCrypto","QUOTA","module","exports","denoHelper","helper","setEd25519Helper","lib","getEd25519Helper","crc16tab","Uint16Array","crc16","checksum","crc","validate","expected","b32Alphabet","base32","bits","__byte","NKeysError","createOperator","createPair","Prefix","Operator","createAccount","Account","createUser","User","NKeysErrorCode","Prefixes","isValidPublicPrefix","Server","Cluster","startsWithValidPrefix","isValidPrefix","parsePrefix","Seed","Private","Codec","SerializationError","InvalidPrefixByte","_encode","encodeSeed","role","InvalidSeedLen","raw","_decode","decodeSeed","_decodePrefix","InvalidSeed","payload","payloadOffset","payloadLen","cap","checkOffset","encodedPrefix","_encodePrefix","dv","DataView","setUint16","InvalidEncoding","ex","getUint16","InvalidChecksum","b1","b2","KP","getRawSeed","ClearedPair","sd","getSeed","getPublicKey","kp","getPrivateKey","input","rawSeed","PublicKey","PublicKeyOnly","_","CannotSign","fromPublic","InvalidPublicKey","encode1","btoa","decode1","b64str","bin","atob","mod","multiAuthenticator","authenticators","auth","noAuthFn","usernamePasswordAuthenticator","user","pass","tokenAuthenticator","auth_token","nkeyAuthenticator","nkey","challenge","sigBytes","jwtAuthenticator","ajwt","jwt","credsAuthenticator","creds","CREDS","exec","BadCreds","jwtFn","nkeyFn","DEFAULT_PING_INTERVAL","DEFAULT_MAX_PING_OUT","DEFAULT_RECONNECT_TIME_WAIT","defaultOptions","maxPingOut","maxReconnectAttempts","noRandomize","pedantic","pingInterval","reconnect","reconnectJitter","reconnectJitterTLS","reconnectTimeWait","tls","verbose","waitOnFirstConnect","ignoreAuthErrorAbort","buildAuthenticator","authenticator","parseOptions","dhp","InvalidOption","NotFunction","reconnectDelayHandler","extra","inboxPrefix","checkOptions","tls_required","tlsRequired","tls_available","tlsAvailable","noEcho","ServerOptionNotAvailable","FLUSH_THRESHOLD","PONG_CMD","PING_CMD","Connect","echo","no_responders","lang","version","transport","SubscriptionImpl","queue","draining","drained","cleanupFn","closed","callback","noAsyncTraces","unsubscribe","setPrePostHandlers","uc","ingestion","dispatched","cancelTimeout","isClosed","_err","ConnectionClosed","SubClosed","unsub","subscriptions","isDraining","getSubject","getMax","getID","Subscriptions","mux","subs","sidCounter","setMux","getMux","resub","sub","ProtocolHandler","connected","connectedOnce","infoReceived","muxSubscriptions","outbound","pongs","noMorePublishing","connectError","_closed","listeners","heartbeats","parser","outMsgs","inMsgs","outBytes","inBytes","pendingLimit","lastError","abortReconnect","connectPromise","resetOutbound","Disconnect","stack","prepare","discard","pong","unshift","disconnected","closeError","StaleConnection","ClientInitiatedReconnect","dialLoop","Reconnect","_close","dial","srv","cp","connect","sendSubscriptions","flushPending","_doDial","alts","lastErr","Reconnecting","dodialLoop","wait","maxWait","ConnectionRefused","mra","toError","processMsg","processError","handleAuthError","processPing","send","processPong","cb","processInfo","updates","ignoreClusterUpdates","isEncrypted","Update","ldm","LDM","sendCommand","cmd","payloads","queueMicrotask","BadPayload","hlen","hdrs","max_payload","MaxPayloadExceeded","request","initMux","subscribe","_subunsub","_sub","cmds","promises","inbox","getServer","BaseRequest","RequestMany","maxMessages","strategy","Count","JitterTimer","SentinelMsg","RequestOne","Cancelled","validateDurableName","minValidation","validateStreamName","context","bad","validateName","validName","RE","mm","nanos","ns","isFlowControlMsg","isHeartbeatMsg","newJsErrorMsg","checkJsError","checkJsErrorCode","Js409Errors","MAX_WAITING_FAIL","isTerminal409","JetStream409","fatal","MaxBatchExceeded","MaxExpiresExceeded","MaxBytesExceeded","MaxMessageSizeExceeded","PushConsumer","IdleHeartbeatMissed","ConsumerDeleted","MaxWaitingExceeded","JetStream404NoMessages","JetStream408RequestTimeout","ec","startsWith","JetStreamIdleHeartBeat","JetStreamNotEnabled","Unknown","defaultPrefix","defaultJsOptions","domain","apiPrefix","BaseApiClient","nc","_parseOpts","getOptions","substr","_request","parseJsResponse","findStream","names","streams","getConnection","error","Base64Codec","binary","Base64UrlPaddedCodec","toB64URLEncoding","fromB64URLEncoding","RetentionPolicy","DiscardPolicy","StorageType","DeliverPolicy","AckPolicy","ReplayPolicy","StoreCompression","ConsumerApiAction","defaultConsumer","deliver_policy","All","ack_policy","Explicit","ack_wait","replay_policy","Instant","AdvisoryKind","JsHeaders","KvWatchInclude","DirectMsgHeaders","RepublishHeaders","kvPrefix","ConsumerOptsBuilderImpl","ordered","mack","stream","callbackFn","qname","isBind","filters","getOpts","filter_subject","filterSubject","filter_subjects","None","deliverTo","deliver_subject","durable","durable_name","startSequence","StartSequence","opt_start_seq","startTime","StartTime","opt_start_time","toISOString","deliverAll","deliverLastPerSubject","LastPerSubject","deliverLast","Last","deliverNew","New","startAtTimeDelta","headersOnly","headers_only","ackNone","ackAll","ackExplicit","ackWait","maxDeliver","max_deliver","replayInstantly","replayOriginal","Original","sample","trunc","sample_freq","limit","rate_limit_bps","maxWaiting","max_waiting","maxAckPending","max_ack_pending","idleHeartbeat","idle_heartbeat","flowControl","flow_control","deliverGroup","manualAck","deliver_group","orderedConsumer","bind","bindStream","inactiveEphemeralThreshold","inactive_threshold","maxPullBatch","max_batch","maxPullRequestExpires","max_expires","memory","mem_storage","numReplicas","num_replicas","consumerOpts","isConsumerOptsBuilder","getLengths","b64","validLen","placeHoldersLen","lookup","revLookup","urlsafe","_byteLength","tripletToBase64","encodeChunk","end","curTriplet","toUint8Array","curByte","fromUint8Array","maxChunkLength","extraBytes","len2","parts","ceil","curChunk","chunkEnd","decoder","encoder","toHexString","hex","fromHexString","decode2","encoding","encode2","SHA256","hashSize","_bufIdx","_count","_K","_H","_finalized","inputEncoding","_transform","digest","outputEncoding","h0","h1","h2","h3","h4","h5","h6","h7","ListerImpl","offset","pageInfo","jsm","total","countResponse","consumers","page","item","ConsumerAPIImpl","cfg","action","Create","stream_name","nci","newAPI","consumerName","metadata","fs","ci","changable","success","list","clr","ACK","NAK","WPI","NXT","TERM","toJsMsg","JsMsgImpl","parseInfo","tokens","account_hash","consumer","redeliveryCount","redelivered","streamSequence","deliverySequence","timestampNanos","pending","didAck","doAck","isWIP","ackAck","mi","trace","ack","nak","working","batch","no_wait","expires","reqOpts","term","reason","checkFn","required","TypedSubscription","adapter","subIterDone","uh","jer","tm","sopts","IdleHeartbeatMonitor","cancelAfter","autoCancelTimer","missed","count","clearInterval","work","_change","restart","setInterval","PullConsumerType","ConsumerEvents","ConsumerDebugEvents","PullConsumerMessagesImpl","monitor","refilling","cleanupHandler","statusIterator","forOrderedConsumer","resetHandler","msgs","requests","api","max_messages","max_bytes","threshold_bytes","threshold_messages","isProtocol","msgsLeft","bytesLeft","parseDiscard","notify","Discard","toErr","_push","DebugEvent","pullOptions","pull","HeartbeatsMissed","resetPending","notFound","bo","ConsumerNotFound","to","Next","PendingMessagesHdr","PendingBytesHdr","trackTimeout","clearTimers","setCleanupHandler","minMsgs","round","minBytes","OrderedConsumerMessages","setSource","PullConsumerImpl","_info","consume","fetch","fopts","cached","OrderedPullConsumerImpl","cursor","namePrefix","serial","currentConsumer","userCallback","startSeq","stream_seq","deliver_seq","Unset","getConsumerOpts","filterSubjects","resetConsumer","OrderedConsumerRecreated","internalHandler","dseq","fromFetch","copts","Fetch","Consume","msgsImpl","tf","convertStreamSourceDomain","external","PubHeaders","osPrefix","ConsumersImpl","notified","checkVersion","fv","impl","sapi","StreamAPIImpl","_si","StreamImpl","alternates","si","best","asi","getConsumer","query","deleteMessage","erase","NoopKvCodecs","defaultBucketOpts","replicas","history","maxBucketSize","maxValueSize","codec","storage","File","kvOperationHdr","kvSubjectPrefix","validKeyRe","validSearchKey","validBucketRe","validateKey","endsWith","validateSearchKey","hasWildcards","chunks","validateBucket","Bucket","js","bucket","direct","editPrefix","useJsPrefix","_prefixLen","create","jetstreamManager","allow_direct","initializePrefixes","sc","streamName","bucketName","retention","Limits","max_msgs_per_subject","max_msg_size","location","placementCluster","placement","cluster","tags","republish","mirror","mirror_direct","sources","subjects","subjectForBucket","compression","S2","have","getServerVersion","discardNew","Old","ttl","max_age","allow_rollup_hdrs","mb","subjectForKey","edit","builder","fullKeyName","prefixLen","encodeKey","decodeKey","ekey","dataLen","slen","MessageSizeHdr","smToEntry","KvStoredEntryImpl","jmToEntry","jm","KvJsMsgEntryImpl","firstErr","put","previousSeq","err_code","rev","revision","ek","ExpectedLastSubjectSequenceHdr","pa","ne","last_by_subj","ke","purge","_deleteOrPurge","purgeDeletes","olderMillis","watch","initializedFn","proms","created","getTime","keep","purged","pv","cv","_doDeleteOrPurge","RollupHdr","RollupValueSubject","_buildCC","content","AllHistory","UpdatesOnly","remove","qi","co","expect","num_pending","delivered","consumer_seq","LastValue","include","ignoreDeletes","purgeBucket","destroy","bn","KvStatusImpl","bucket_location","backingStore","dest","streamInfo","digestType","objectStoreStreamName","objectStoreBucketName","ObjectStoreStatusImpl","sealed","checkStreamConfigVersions","first_seq","subject_transform","consumer_limits","validateStreamSource","subject_transforms","_fixInfo","old","getOwnPropertyNames","infos","paged","listerFilter","slr","deny_delete","deny_purge","dr","no_erase","StoredMsgImpl","listKvs","kvStreams","listObjectStores","objStreams","sr","_header","smr","timestamp","_parse","header","hd","bs","StreamsImpl","delta","ObjectInfoImpl","oi","mtime","isLink","link","toServerObjectStoreMeta","meta","mhi","emptyReadableStream","ReadableStream","enqueue","ObjectStoreImpl","_checkNotEmpty","rawInfo","includeHistory","obj","_metaSubject","soi","nerr","seal","_put","rs","jsopts","previousRevision","maxPayload","maxChunk","max_chunk_size","id","chunkSubj","_chunkSubject","metaSubj","db","reader","getReader","sha","pad","padding","repeat","putBlob","readableStreamFrom","controller","getBlob","fromReadableStream","vs","ln","os","oc","linkStore","osi","ii","initialized","_metaSubjectAll","ViewsImpl","kv","jsi","bindOnly","subtle","JetStreamClientImpl","consumerAPI","streamAPI","checkAPI","views","msgID","MsgIdHdr","lastMsgID","ExpectedLastMsgIdHdr","ExpectedStreamHdr","lastSequence","ExpectedLastSeqHdr","lastSubjectSequence","ro","retries","retry_delay","JetStreamInvalidAck","duplicate","pullOpts","noMux","trackBytes","receivedBytes","hb","delay_heartbeat","wants","_ingest","jsmi","hideNonTerminalJsErrors","pullSubscribe","cso","_processOptions","ackPolicy","so","_buildTypedSubscriptionOpts","JetStreamPullSubscriptionImpl","deliver","_maybeCreateConsumer","JetStreamSubscriptionImpl","_maybeSetupHbMonitoring","heartbeat_count","fc_count","consumer_restarts","ordered_consumer_sequence","delivery_seq","NotSet","attached","qn","push_bound","rqn","msgAdapter","ingestionFn","autoAckJsMsg","jsub","jmi","_checkHbOrderConsumer","_checkOrderedConsumer","_resetOrderedConsumer","sseq","newDeliver","_resub","RequestError","_setupHbMonitoring","handler","rm","ConsumerStalledHdr","lastDelivered","LastConsumerSeqHdr","jinfo","consumerInfo","iterMsgAdapter","cbMsgAdapter","DirectStreamAPIImpl","qq","pre","dm","DirectMsgImpl","Subject","Sequence","TimeStamp","Stream","JetStreamManagerImpl","getAccountInfo","jetstream","advisories","ServiceApiPrefix","ServiceMsgImpl","respondError","ServiceGroupImpl","parent","validInternalToken","root","ServiceImpl","sg","calcSubject","addEndpoint","validSubjectName","_addEndpoint","addGroup","_id","handlers","internal","_stopped","_done","started","controlSubject","verb","errorToHeader","se","setupHandler","sv","stats","NamedEndpointStatsImpl","countError","countLatency","endpoints","queue_group","statsHandler","STATS","addInternalHandler","_doAddInternalHandler","endpoint","infoHandler","pingHandler","allSettled","stopped","isStopped","average_processing_time","num_requests","processing_time","num_errors","last_error","qii","_stats","ServiceClientImpl","responses","requestMany","NatsConnectionImpl","_services","_check","pub","ConnectionDraining","BadSubject","Timer","rmo","errCtx","adm","rtt","services","ServicesFactory","client","Metric","date","asyncRequests","sec","mps","minmax","humanizeNumber","toFixed","throughput","toCsv","Bench","callbacks","rep","perf","run","runCallbacks","runAsync","processMetrics","pubsub","reqrep","metrics","jobs","job","first","_m","seconds","humanizeBytes","post","exp","pow","nkeys","VERSION","LANG","WsTransport","socket","socketClosed","encrypted","peeked","closedNotification","connLock","wsFactory","WebSocket","binaryType","onopen","isDiscarded","onmessage","me","pm","onclose","evt","wasClean","onerror","bufferedAmount","wsUrlParseFn","ut","srcProto","path","pathname","search"],"sources":["C:/Users/karth/OneDrive/Documents/keuschat/bingo/node_modules/nats.ws/esm/nats.js"],"sourcesContent":["// deno-fmt-ignore-file\r\n// deno-lint-ignore-file\r\n// This code was bundled using `deno bundle` and it's not recommended to edit it manually\r\n\r\nconst Empty = new Uint8Array(0);\r\nconst TE = new TextEncoder();\r\nconst TD = new TextDecoder();\r\nfunction concat(...bufs) {\r\n    let max = 0;\r\n    for(let i = 0; i < bufs.length; i++){\r\n        max += bufs[i].length;\r\n    }\r\n    const out = new Uint8Array(max);\r\n    let index = 0;\r\n    for(let i = 0; i < bufs.length; i++){\r\n        out.set(bufs[i], index);\r\n        index += bufs[i].length;\r\n    }\r\n    return out;\r\n}\r\nfunction encode(...a) {\r\n    const bufs = [];\r\n    for(let i = 0; i < a.length; i++){\r\n        bufs.push(TE.encode(a[i]));\r\n    }\r\n    if (bufs.length === 0) {\r\n        return Empty;\r\n    }\r\n    if (bufs.length === 1) {\r\n        return bufs[0];\r\n    }\r\n    return concat(...bufs);\r\n}\r\nfunction decode(a) {\r\n    if (!a || a.length === 0) {\r\n        return \"\";\r\n    }\r\n    return TD.decode(a);\r\n}\r\n\"use strict\";\r\nconst digits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\nconst base = 36;\r\nconst maxSeq = 3656158440062976;\r\nconst minInc = 33;\r\nconst maxInc = 333;\r\nconst totalLen = 12 + 10;\r\nfunction _getRandomValues(a) {\r\n    for(let i = 0; i < a.length; i++){\r\n        a[i] = Math.floor(Math.random() * 255);\r\n    }\r\n}\r\nfunction fillRandom(a) {\r\n    if (globalThis?.crypto?.getRandomValues) {\r\n        globalThis.crypto.getRandomValues(a);\r\n    } else {\r\n        _getRandomValues(a);\r\n    }\r\n}\r\nclass Nuid {\r\n    buf;\r\n    seq;\r\n    inc;\r\n    constructor(){\r\n        this.buf = new Uint8Array(totalLen);\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.setPre();\r\n        this.initSeqAndInc();\r\n        this.fillSeq();\r\n    }\r\n    initSeqAndInc() {\r\n        this.seq = Math.floor(Math.random() * maxSeq);\r\n        this.inc = Math.floor(Math.random() * (maxInc - minInc) + minInc);\r\n    }\r\n    setPre() {\r\n        const cbuf = new Uint8Array(12);\r\n        fillRandom(cbuf);\r\n        for(let i = 0; i < 12; i++){\r\n            const di = cbuf[i] % 36;\r\n            this.buf[i] = digits.charCodeAt(di);\r\n        }\r\n    }\r\n    fillSeq() {\r\n        let n = this.seq;\r\n        for(let i = totalLen - 1; i >= 12; i--){\r\n            this.buf[i] = digits.charCodeAt(n % base);\r\n            n = Math.floor(n / base);\r\n        }\r\n    }\r\n    next() {\r\n        this.seq += this.inc;\r\n        if (this.seq > 3656158440062976) {\r\n            this.setPre();\r\n            this.initSeqAndInc();\r\n        }\r\n        this.fillSeq();\r\n        return String.fromCharCode.apply(String, this.buf);\r\n    }\r\n    reset() {\r\n        this.init();\r\n    }\r\n}\r\nconst nuid = new Nuid();\r\nvar Events;\r\n(function(Events) {\r\n    Events[\"Disconnect\"] = \"disconnect\";\r\n    Events[\"Reconnect\"] = \"reconnect\";\r\n    Events[\"Update\"] = \"update\";\r\n    Events[\"LDM\"] = \"ldm\";\r\n    Events[\"Error\"] = \"error\";\r\n})(Events || (Events = {}));\r\nvar DebugEvents;\r\n(function(DebugEvents) {\r\n    DebugEvents[\"Reconnecting\"] = \"reconnecting\";\r\n    DebugEvents[\"PingTimer\"] = \"pingTimer\";\r\n    DebugEvents[\"StaleConnection\"] = \"staleConnection\";\r\n    DebugEvents[\"ClientInitiatedReconnect\"] = \"client initiated reconnect\";\r\n})(DebugEvents || (DebugEvents = {}));\r\nvar ErrorCode;\r\n(function(ErrorCode) {\r\n    ErrorCode[\"ApiError\"] = \"BAD API\";\r\n    ErrorCode[\"BadAuthentication\"] = \"BAD_AUTHENTICATION\";\r\n    ErrorCode[\"BadCreds\"] = \"BAD_CREDS\";\r\n    ErrorCode[\"BadHeader\"] = \"BAD_HEADER\";\r\n    ErrorCode[\"BadJson\"] = \"BAD_JSON\";\r\n    ErrorCode[\"BadPayload\"] = \"BAD_PAYLOAD\";\r\n    ErrorCode[\"BadSubject\"] = \"BAD_SUBJECT\";\r\n    ErrorCode[\"Cancelled\"] = \"CANCELLED\";\r\n    ErrorCode[\"ConnectionClosed\"] = \"CONNECTION_CLOSED\";\r\n    ErrorCode[\"ConnectionDraining\"] = \"CONNECTION_DRAINING\";\r\n    ErrorCode[\"ConnectionRefused\"] = \"CONNECTION_REFUSED\";\r\n    ErrorCode[\"ConnectionTimeout\"] = \"CONNECTION_TIMEOUT\";\r\n    ErrorCode[\"Disconnect\"] = \"DISCONNECT\";\r\n    ErrorCode[\"InvalidOption\"] = \"INVALID_OPTION\";\r\n    ErrorCode[\"InvalidPayload\"] = \"INVALID_PAYLOAD\";\r\n    ErrorCode[\"MaxPayloadExceeded\"] = \"MAX_PAYLOAD_EXCEEDED\";\r\n    ErrorCode[\"NoResponders\"] = \"503\";\r\n    ErrorCode[\"NotFunction\"] = \"NOT_FUNC\";\r\n    ErrorCode[\"RequestError\"] = \"REQUEST_ERROR\";\r\n    ErrorCode[\"ServerOptionNotAvailable\"] = \"SERVER_OPT_NA\";\r\n    ErrorCode[\"SubClosed\"] = \"SUB_CLOSED\";\r\n    ErrorCode[\"SubDraining\"] = \"SUB_DRAINING\";\r\n    ErrorCode[\"Timeout\"] = \"TIMEOUT\";\r\n    ErrorCode[\"Tls\"] = \"TLS\";\r\n    ErrorCode[\"Unknown\"] = \"UNKNOWN_ERROR\";\r\n    ErrorCode[\"WssRequired\"] = \"WSS_REQUIRED\";\r\n    ErrorCode[\"JetStreamInvalidAck\"] = \"JESTREAM_INVALID_ACK\";\r\n    ErrorCode[\"JetStream404NoMessages\"] = \"404\";\r\n    ErrorCode[\"JetStream408RequestTimeout\"] = \"408\";\r\n    ErrorCode[\"JetStream409MaxAckPendingExceeded\"] = \"409\";\r\n    ErrorCode[\"JetStream409\"] = \"409\";\r\n    ErrorCode[\"JetStreamNotEnabled\"] = \"503\";\r\n    ErrorCode[\"JetStreamIdleHeartBeat\"] = \"IDLE_HEARTBEAT\";\r\n    ErrorCode[\"AuthorizationViolation\"] = \"AUTHORIZATION_VIOLATION\";\r\n    ErrorCode[\"AuthenticationExpired\"] = \"AUTHENTICATION_EXPIRED\";\r\n    ErrorCode[\"ProtocolError\"] = \"NATS_PROTOCOL_ERR\";\r\n    ErrorCode[\"PermissionsViolation\"] = \"PERMISSIONS_VIOLATION\";\r\n    ErrorCode[\"AuthenticationTimeout\"] = \"AUTHENTICATION_TIMEOUT\";\r\n})(ErrorCode || (ErrorCode = {}));\r\nfunction isNatsError(err) {\r\n    return typeof err.code === \"string\";\r\n}\r\nclass Messages {\r\n    messages;\r\n    constructor(){\r\n        this.messages = new Map();\r\n        this.messages.set(ErrorCode.InvalidPayload, \"Invalid payload type - payloads can be 'binary', 'string', or 'json'\");\r\n        this.messages.set(ErrorCode.BadJson, \"Bad JSON\");\r\n        this.messages.set(ErrorCode.WssRequired, \"TLS is required, therefore a secure websocket connection is also required\");\r\n    }\r\n    static getMessage(s) {\r\n        return messages.getMessage(s);\r\n    }\r\n    getMessage(s) {\r\n        return this.messages.get(s) || s;\r\n    }\r\n}\r\nconst messages = new Messages();\r\nclass NatsError extends Error {\r\n    name;\r\n    message;\r\n    code;\r\n    permissionContext;\r\n    chainedError;\r\n    api_error;\r\n    constructor(message, code, chainedError){\r\n        super(message);\r\n        this.name = \"NatsError\";\r\n        this.message = message;\r\n        this.code = code;\r\n        this.chainedError = chainedError;\r\n    }\r\n    static errorForCode(code, chainedError) {\r\n        const m = Messages.getMessage(code);\r\n        return new NatsError(m, code, chainedError);\r\n    }\r\n    isAuthError() {\r\n        return this.code === ErrorCode.AuthenticationExpired || this.code === ErrorCode.AuthorizationViolation;\r\n    }\r\n    isAuthTimeout() {\r\n        return this.code === ErrorCode.AuthenticationTimeout;\r\n    }\r\n    isPermissionError() {\r\n        return this.code === ErrorCode.PermissionsViolation;\r\n    }\r\n    isProtocolError() {\r\n        return this.code === ErrorCode.ProtocolError;\r\n    }\r\n    isJetStreamError() {\r\n        return this.api_error !== undefined;\r\n    }\r\n    jsError() {\r\n        return this.api_error ? this.api_error : null;\r\n    }\r\n}\r\nvar Match;\r\n(function(Match) {\r\n    Match[Match[\"Exact\"] = 0] = \"Exact\";\r\n    Match[Match[\"CanonicalMIME\"] = 1] = \"CanonicalMIME\";\r\n    Match[Match[\"IgnoreCase\"] = 2] = \"IgnoreCase\";\r\n})(Match || (Match = {}));\r\nvar RequestStrategy;\r\n(function(RequestStrategy) {\r\n    RequestStrategy[\"Timer\"] = \"timer\";\r\n    RequestStrategy[\"Count\"] = \"count\";\r\n    RequestStrategy[\"JitterTimer\"] = \"jitterTimer\";\r\n    RequestStrategy[\"SentinelMsg\"] = \"sentinelMsg\";\r\n})(RequestStrategy || (RequestStrategy = {}));\r\nfunction syncIterator(src) {\r\n    const iter = src[Symbol.asyncIterator]();\r\n    return {\r\n        async next () {\r\n            const m = await iter.next();\r\n            if (m.done) {\r\n                return Promise.resolve(null);\r\n            }\r\n            return Promise.resolve(m.value);\r\n        }\r\n    };\r\n}\r\nvar ServiceResponseType;\r\n(function(ServiceResponseType) {\r\n    ServiceResponseType[\"STATS\"] = \"io.nats.micro.v1.stats_response\";\r\n    ServiceResponseType[\"INFO\"] = \"io.nats.micro.v1.info_response\";\r\n    ServiceResponseType[\"PING\"] = \"io.nats.micro.v1.ping_response\";\r\n})(ServiceResponseType || (ServiceResponseType = {}));\r\nconst ServiceErrorHeader = \"Nats-Service-Error\";\r\nconst ServiceErrorCodeHeader = \"Nats-Service-Error-Code\";\r\nclass ServiceError extends Error {\r\n    code;\r\n    constructor(code, message){\r\n        super(message);\r\n        this.code = code;\r\n    }\r\n    static isServiceError(msg) {\r\n        return ServiceError.toServiceError(msg) !== null;\r\n    }\r\n    static toServiceError(msg) {\r\n        const scode = msg?.headers?.get(ServiceErrorCodeHeader) || \"\";\r\n        if (scode !== \"\") {\r\n            const code = parseInt(scode) || 400;\r\n            const description = msg?.headers?.get(ServiceErrorHeader) || \"\";\r\n            return new ServiceError(code, description.length ? description : scode);\r\n        }\r\n        return null;\r\n    }\r\n}\r\nfunction createInbox(prefix = \"\") {\r\n    prefix = prefix || \"_INBOX\";\r\n    if (typeof prefix !== \"string\") {\r\n        throw new Error(\"prefix must be a string\");\r\n    }\r\n    prefix.split(\".\").forEach((v)=>{\r\n        if (v === \"*\" || v === \">\") {\r\n            throw new Error(`inbox prefixes cannot have wildcards '${prefix}'`);\r\n        }\r\n    });\r\n    return `${prefix}.${nuid.next()}`;\r\n}\r\nconst DEFAULT_HOST = \"127.0.0.1\";\r\nvar ServiceVerb;\r\n(function(ServiceVerb) {\r\n    ServiceVerb[\"PING\"] = \"PING\";\r\n    ServiceVerb[\"STATS\"] = \"STATS\";\r\n    ServiceVerb[\"INFO\"] = \"INFO\";\r\n})(ServiceVerb || (ServiceVerb = {}));\r\nfunction extend(a, ...b) {\r\n    for(let i = 0; i < b.length; i++){\r\n        const o = b[i];\r\n        Object.keys(o).forEach(function(k) {\r\n            a[k] = o[k];\r\n        });\r\n    }\r\n    return a;\r\n}\r\nfunction render(frame) {\r\n    const cr = \"␍\";\r\n    const lf = \"␊\";\r\n    return TD.decode(frame).replace(/\\n/g, lf).replace(/\\r/g, cr);\r\n}\r\nfunction timeout(ms, asyncTraces = true) {\r\n    const err = asyncTraces ? NatsError.errorForCode(ErrorCode.Timeout) : null;\r\n    let methods;\r\n    let timer;\r\n    const p = new Promise((_resolve, reject)=>{\r\n        const cancel = ()=>{\r\n            if (timer) {\r\n                clearTimeout(timer);\r\n            }\r\n        };\r\n        methods = {\r\n            cancel\r\n        };\r\n        timer = setTimeout(()=>{\r\n            if (err === null) {\r\n                reject(NatsError.errorForCode(ErrorCode.Timeout));\r\n            } else {\r\n                reject(err);\r\n            }\r\n        }, ms);\r\n    });\r\n    return Object.assign(p, methods);\r\n}\r\nfunction delay(ms = 0) {\r\n    return new Promise((resolve)=>{\r\n        setTimeout(()=>{\r\n            resolve();\r\n        }, ms);\r\n    });\r\n}\r\nfunction deadline(p, millis = 1000) {\r\n    const err = new Error(`deadline exceeded`);\r\n    const d = deferred();\r\n    const timer = setTimeout(()=>d.reject(err), millis);\r\n    return Promise.race([\r\n        p,\r\n        d\r\n    ]).finally(()=>clearTimeout(timer));\r\n}\r\nfunction deferred() {\r\n    let methods = {};\r\n    const p = new Promise((resolve, reject)=>{\r\n        methods = {\r\n            resolve,\r\n            reject\r\n        };\r\n    });\r\n    return Object.assign(p, methods);\r\n}\r\nfunction shuffle(a) {\r\n    for(let i = a.length - 1; i > 0; i--){\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [a[i], a[j]] = [\r\n            a[j],\r\n            a[i]\r\n        ];\r\n    }\r\n    return a;\r\n}\r\nclass Perf {\r\n    timers;\r\n    measures;\r\n    constructor(){\r\n        this.timers = new Map();\r\n        this.measures = new Map();\r\n    }\r\n    mark(key) {\r\n        this.timers.set(key, performance.now());\r\n    }\r\n    measure(key, startKey, endKey) {\r\n        const s = this.timers.get(startKey);\r\n        if (s === undefined) {\r\n            throw new Error(`${startKey} is not defined`);\r\n        }\r\n        const e = this.timers.get(endKey);\r\n        if (e === undefined) {\r\n            throw new Error(`${endKey} is not defined`);\r\n        }\r\n        this.measures.set(key, e - s);\r\n    }\r\n    getEntries() {\r\n        const values = [];\r\n        this.measures.forEach((v, k)=>{\r\n            values.push({\r\n                name: k,\r\n                duration: v\r\n            });\r\n        });\r\n        return values;\r\n    }\r\n}\r\nfunction jitter(n) {\r\n    if (n === 0) {\r\n        return 0;\r\n    }\r\n    return Math.floor(n / 2 + Math.random() * n);\r\n}\r\nfunction backoff(policy = [\r\n    0,\r\n    250,\r\n    250,\r\n    500,\r\n    500,\r\n    3000,\r\n    5000\r\n]) {\r\n    if (!Array.isArray(policy)) {\r\n        policy = [\r\n            0,\r\n            250,\r\n            250,\r\n            500,\r\n            500,\r\n            3000,\r\n            5000\r\n        ];\r\n    }\r\n    const max = policy.length - 1;\r\n    return {\r\n        backoff (attempt) {\r\n            return jitter(attempt > max ? policy[max] : policy[attempt]);\r\n        }\r\n    };\r\n}\r\nclass DataBuffer {\r\n    buffers;\r\n    byteLength;\r\n    constructor(){\r\n        this.buffers = [];\r\n        this.byteLength = 0;\r\n    }\r\n    static concat(...bufs) {\r\n        let max = 0;\r\n        for(let i = 0; i < bufs.length; i++){\r\n            max += bufs[i].length;\r\n        }\r\n        const out = new Uint8Array(max);\r\n        let index = 0;\r\n        for(let i = 0; i < bufs.length; i++){\r\n            out.set(bufs[i], index);\r\n            index += bufs[i].length;\r\n        }\r\n        return out;\r\n    }\r\n    static fromAscii(m) {\r\n        if (!m) {\r\n            m = \"\";\r\n        }\r\n        return TE.encode(m);\r\n    }\r\n    static toAscii(a) {\r\n        return TD.decode(a);\r\n    }\r\n    reset() {\r\n        this.buffers.length = 0;\r\n        this.byteLength = 0;\r\n    }\r\n    pack() {\r\n        if (this.buffers.length > 1) {\r\n            const v = new Uint8Array(this.byteLength);\r\n            let index = 0;\r\n            for(let i = 0; i < this.buffers.length; i++){\r\n                v.set(this.buffers[i], index);\r\n                index += this.buffers[i].length;\r\n            }\r\n            this.buffers.length = 0;\r\n            this.buffers.push(v);\r\n        }\r\n    }\r\n    shift() {\r\n        if (this.buffers.length) {\r\n            const a = this.buffers.shift();\r\n            if (a) {\r\n                this.byteLength -= a.length;\r\n                return a;\r\n            }\r\n        }\r\n        return new Uint8Array(0);\r\n    }\r\n    drain(n) {\r\n        if (this.buffers.length) {\r\n            this.pack();\r\n            const v = this.buffers.pop();\r\n            if (v) {\r\n                const max = this.byteLength;\r\n                if (n === undefined || n > max) {\r\n                    n = max;\r\n                }\r\n                const d = v.subarray(0, n);\r\n                if (max > n) {\r\n                    this.buffers.push(v.subarray(n));\r\n                }\r\n                this.byteLength = max - n;\r\n                return d;\r\n            }\r\n        }\r\n        return new Uint8Array(0);\r\n    }\r\n    fill(a, ...bufs) {\r\n        if (a) {\r\n            this.buffers.push(a);\r\n            this.byteLength += a.length;\r\n        }\r\n        for(let i = 0; i < bufs.length; i++){\r\n            if (bufs[i] && bufs[i].length) {\r\n                this.buffers.push(bufs[i]);\r\n                this.byteLength += bufs[i].length;\r\n            }\r\n        }\r\n    }\r\n    peek() {\r\n        if (this.buffers.length) {\r\n            this.pack();\r\n            return this.buffers[0];\r\n        }\r\n        return new Uint8Array(0);\r\n    }\r\n    size() {\r\n        return this.byteLength;\r\n    }\r\n    length() {\r\n        return this.buffers.length;\r\n    }\r\n}\r\nlet transportConfig;\r\nfunction setTransportFactory(config) {\r\n    transportConfig = config;\r\n}\r\nfunction defaultPort() {\r\n    return transportConfig !== undefined && transportConfig.defaultPort !== undefined ? transportConfig.defaultPort : 4222;\r\n}\r\nfunction getUrlParseFn() {\r\n    return transportConfig !== undefined && transportConfig.urlParseFn ? transportConfig.urlParseFn : undefined;\r\n}\r\nfunction newTransport() {\r\n    if (!transportConfig || typeof transportConfig.factory !== \"function\") {\r\n        throw new Error(\"transport fn is not set\");\r\n    }\r\n    return transportConfig.factory();\r\n}\r\nfunction getResolveFn() {\r\n    return transportConfig !== undefined && transportConfig.dnsResolveFn ? transportConfig.dnsResolveFn : undefined;\r\n}\r\nconst CR_LF = \"\\r\\n\";\r\nCR_LF.length;\r\nconst CRLF = DataBuffer.fromAscii(CR_LF);\r\nconst CR = new Uint8Array(CRLF)[0];\r\nconst LF = new Uint8Array(CRLF)[1];\r\nfunction protoLen(ba) {\r\n    for(let i = 0; i < ba.length; i++){\r\n        const n = i + 1;\r\n        if (ba.byteLength > n && ba[i] === CR && ba[n] === LF) {\r\n            return n + 1;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\nfunction extractProtocolMessage(a) {\r\n    const len = protoLen(a);\r\n    if (len > 0) {\r\n        const ba = new Uint8Array(a);\r\n        const out = ba.slice(0, len);\r\n        return TD.decode(out);\r\n    }\r\n    return \"\";\r\n}\r\nconst IPv4LEN = 4;\r\nconst ASCII0 = 48;\r\nconst ASCIIA = 65;\r\nconst ASCIIa = 97;\r\nfunction ipV4(a, b, c, d) {\r\n    const ip = new Uint8Array(16);\r\n    const prefix = [\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0xff,\r\n        0xff\r\n    ];\r\n    prefix.forEach((v, idx)=>{\r\n        ip[idx] = v;\r\n    });\r\n    ip[12] = a;\r\n    ip[13] = b;\r\n    ip[14] = c;\r\n    ip[15] = d;\r\n    return ip;\r\n}\r\nfunction isIP(h) {\r\n    return parseIP(h) !== undefined;\r\n}\r\nfunction parseIP(h) {\r\n    for(let i = 0; i < h.length; i++){\r\n        switch(h[i]){\r\n            case \".\":\r\n                return parseIPv4(h);\r\n            case \":\":\r\n                return parseIPv6(h);\r\n        }\r\n    }\r\n    return;\r\n}\r\nfunction parseIPv4(s) {\r\n    const ip = new Uint8Array(4);\r\n    for(let i = 0; i < 4; i++){\r\n        if (s.length === 0) {\r\n            return undefined;\r\n        }\r\n        if (i > 0) {\r\n            if (s[0] !== \".\") {\r\n                return undefined;\r\n            }\r\n            s = s.substring(1);\r\n        }\r\n        const { n, c, ok } = dtoi(s);\r\n        if (!ok || n > 0xFF) {\r\n            return undefined;\r\n        }\r\n        s = s.substring(c);\r\n        ip[i] = n;\r\n    }\r\n    return ipV4(ip[0], ip[1], ip[2], ip[3]);\r\n}\r\nfunction parseIPv6(s) {\r\n    const ip = new Uint8Array(16);\r\n    let ellipsis = -1;\r\n    if (s.length >= 2 && s[0] === \":\" && s[1] === \":\") {\r\n        ellipsis = 0;\r\n        s = s.substring(2);\r\n        if (s.length === 0) {\r\n            return ip;\r\n        }\r\n    }\r\n    let i = 0;\r\n    while(i < 16){\r\n        const { n, c, ok } = xtoi(s);\r\n        if (!ok || n > 0xFFFF) {\r\n            return undefined;\r\n        }\r\n        if (c < s.length && s[c] === \".\") {\r\n            if (ellipsis < 0 && i != 16 - 4) {\r\n                return undefined;\r\n            }\r\n            if (i + 4 > 16) {\r\n                return undefined;\r\n            }\r\n            const ip4 = parseIPv4(s);\r\n            if (ip4 === undefined) {\r\n                return undefined;\r\n            }\r\n            ip[i] = ip4[12];\r\n            ip[i + 1] = ip4[13];\r\n            ip[i + 2] = ip4[14];\r\n            ip[i + 3] = ip4[15];\r\n            s = \"\";\r\n            i += IPv4LEN;\r\n            break;\r\n        }\r\n        ip[i] = n >> 8;\r\n        ip[i + 1] = n;\r\n        i += 2;\r\n        s = s.substring(c);\r\n        if (s.length === 0) {\r\n            break;\r\n        }\r\n        if (s[0] !== \":\" || s.length == 1) {\r\n            return undefined;\r\n        }\r\n        s = s.substring(1);\r\n        if (s[0] === \":\") {\r\n            if (ellipsis >= 0) {\r\n                return undefined;\r\n            }\r\n            ellipsis = i;\r\n            s = s.substring(1);\r\n            if (s.length === 0) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    if (s.length !== 0) {\r\n        return undefined;\r\n    }\r\n    if (i < 16) {\r\n        if (ellipsis < 0) {\r\n            return undefined;\r\n        }\r\n        const n = 16 - i;\r\n        for(let j = i - 1; j >= ellipsis; j--){\r\n            ip[j + n] = ip[j];\r\n        }\r\n        for(let j = ellipsis + n - 1; j >= ellipsis; j--){\r\n            ip[j] = 0;\r\n        }\r\n    } else if (ellipsis >= 0) {\r\n        return undefined;\r\n    }\r\n    return ip;\r\n}\r\nfunction dtoi(s) {\r\n    let i = 0;\r\n    let n = 0;\r\n    for(i = 0; i < s.length && 48 <= s.charCodeAt(i) && s.charCodeAt(i) <= 57; i++){\r\n        n = n * 10 + (s.charCodeAt(i) - ASCII0);\r\n        if (n >= 0xFFFFFF) {\r\n            return {\r\n                n: 0xFFFFFF,\r\n                c: i,\r\n                ok: false\r\n            };\r\n        }\r\n    }\r\n    if (i === 0) {\r\n        return {\r\n            n: 0,\r\n            c: 0,\r\n            ok: false\r\n        };\r\n    }\r\n    return {\r\n        n: n,\r\n        c: i,\r\n        ok: true\r\n    };\r\n}\r\nfunction xtoi(s) {\r\n    let n = 0;\r\n    let i = 0;\r\n    for(i = 0; i < s.length; i++){\r\n        if (48 <= s.charCodeAt(i) && s.charCodeAt(i) <= 57) {\r\n            n *= 16;\r\n            n += s.charCodeAt(i) - ASCII0;\r\n        } else if (97 <= s.charCodeAt(i) && s.charCodeAt(i) <= 102) {\r\n            n *= 16;\r\n            n += s.charCodeAt(i) - ASCIIa + 10;\r\n        } else if (65 <= s.charCodeAt(i) && s.charCodeAt(i) <= 70) {\r\n            n *= 16;\r\n            n += s.charCodeAt(i) - ASCIIA + 10;\r\n        } else {\r\n            break;\r\n        }\r\n        if (n >= 0xFFFFFF) {\r\n            return {\r\n                n: 0,\r\n                c: i,\r\n                ok: false\r\n            };\r\n        }\r\n    }\r\n    if (i === 0) {\r\n        return {\r\n            n: 0,\r\n            c: i,\r\n            ok: false\r\n        };\r\n    }\r\n    return {\r\n        n: n,\r\n        c: i,\r\n        ok: true\r\n    };\r\n}\r\nfunction isIPV4OrHostname(hp) {\r\n    if (hp.indexOf(\".\") !== -1) {\r\n        return true;\r\n    }\r\n    if (hp.indexOf(\"[\") !== -1 || hp.indexOf(\"::\") !== -1) {\r\n        return false;\r\n    }\r\n    if (hp.split(\":\").length <= 2) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction isIPV6(hp) {\r\n    return !isIPV4OrHostname(hp);\r\n}\r\nfunction filterIpv6MappedToIpv4(hp) {\r\n    const prefix = \"::FFFF:\";\r\n    const idx = hp.toUpperCase().indexOf(prefix);\r\n    if (idx !== -1 && hp.indexOf(\".\") !== -1) {\r\n        let ip = hp.substring(idx + prefix.length);\r\n        ip = ip.replace(\"[\", \"\");\r\n        return ip.replace(\"]\", \"\");\r\n    }\r\n    return hp;\r\n}\r\nfunction hostPort(u) {\r\n    u = u.trim();\r\n    if (u.match(/^(.*:\\/\\/)(.*)/m)) {\r\n        u = u.replace(/^(.*:\\/\\/)(.*)/gm, \"$2\");\r\n    }\r\n    u = filterIpv6MappedToIpv4(u);\r\n    if (isIPV6(u) && u.indexOf(\"[\") === -1) {\r\n        u = `[${u}]`;\r\n    }\r\n    const op = isIPV6(u) ? u.match(/(]:)(\\d+)/) : u.match(/(:)(\\d+)/);\r\n    const port = op && op.length === 3 && op[1] && op[2] ? parseInt(op[2]) : 4222;\r\n    const protocol = port === 80 ? \"https\" : \"http\";\r\n    const url = new URL(`${protocol}://${u}`);\r\n    url.port = `${port}`;\r\n    let hostname = url.hostname;\r\n    if (hostname.charAt(0) === \"[\") {\r\n        hostname = hostname.substring(1, hostname.length - 1);\r\n    }\r\n    const listen = url.host;\r\n    return {\r\n        listen,\r\n        hostname,\r\n        port\r\n    };\r\n}\r\nclass ServerImpl {\r\n    src;\r\n    listen;\r\n    hostname;\r\n    port;\r\n    didConnect;\r\n    reconnects;\r\n    lastConnect;\r\n    gossiped;\r\n    tlsName;\r\n    resolves;\r\n    constructor(u, gossiped = false){\r\n        this.src = u;\r\n        this.tlsName = \"\";\r\n        const v = hostPort(u);\r\n        this.listen = v.listen;\r\n        this.hostname = v.hostname;\r\n        this.port = v.port;\r\n        this.didConnect = false;\r\n        this.reconnects = 0;\r\n        this.lastConnect = 0;\r\n        this.gossiped = gossiped;\r\n    }\r\n    toString() {\r\n        return this.listen;\r\n    }\r\n    async resolve(opts) {\r\n        if (!opts.fn) {\r\n            return [\r\n                this\r\n            ];\r\n        }\r\n        const buf = [];\r\n        if (isIP(this.hostname)) {\r\n            return [\r\n                this\r\n            ];\r\n        } else {\r\n            const ips = await opts.fn(this.hostname);\r\n            if (opts.debug) {\r\n                console.log(`resolve ${this.hostname} = ${ips.join(\",\")}`);\r\n            }\r\n            for (const ip of ips){\r\n                const proto = this.port === 80 ? \"https\" : \"http\";\r\n                const url = new URL(`${proto}://${isIPV6(ip) ? \"[\" + ip + \"]\" : ip}`);\r\n                url.port = `${this.port}`;\r\n                const ss = new ServerImpl(url.host, false);\r\n                ss.tlsName = this.hostname;\r\n                buf.push(ss);\r\n            }\r\n        }\r\n        if (opts.randomize) {\r\n            shuffle(buf);\r\n        }\r\n        this.resolves = buf;\r\n        return buf;\r\n    }\r\n}\r\nclass Servers {\r\n    firstSelect;\r\n    servers;\r\n    currentServer;\r\n    tlsName;\r\n    randomize;\r\n    constructor(listens = [], opts = {}){\r\n        this.firstSelect = true;\r\n        this.servers = [];\r\n        this.tlsName = \"\";\r\n        this.randomize = opts.randomize || false;\r\n        const urlParseFn = getUrlParseFn();\r\n        if (listens) {\r\n            listens.forEach((hp)=>{\r\n                hp = urlParseFn ? urlParseFn(hp) : hp;\r\n                this.servers.push(new ServerImpl(hp));\r\n            });\r\n            if (this.randomize) {\r\n                this.servers = shuffle(this.servers);\r\n            }\r\n        }\r\n        if (this.servers.length === 0) {\r\n            this.addServer(`${DEFAULT_HOST}:${defaultPort()}`, false);\r\n        }\r\n        this.currentServer = this.servers[0];\r\n    }\r\n    clear() {\r\n        this.servers.length = 0;\r\n    }\r\n    updateTLSName() {\r\n        const cs = this.getCurrentServer();\r\n        if (!isIP(cs.hostname)) {\r\n            this.tlsName = cs.hostname;\r\n            this.servers.forEach((s)=>{\r\n                if (s.gossiped) {\r\n                    s.tlsName = this.tlsName;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    getCurrentServer() {\r\n        return this.currentServer;\r\n    }\r\n    addServer(u, implicit = false) {\r\n        const urlParseFn = getUrlParseFn();\r\n        u = urlParseFn ? urlParseFn(u) : u;\r\n        const s = new ServerImpl(u, implicit);\r\n        if (isIP(s.hostname)) {\r\n            s.tlsName = this.tlsName;\r\n        }\r\n        this.servers.push(s);\r\n    }\r\n    selectServer() {\r\n        if (this.firstSelect) {\r\n            this.firstSelect = false;\r\n            return this.currentServer;\r\n        }\r\n        const t = this.servers.shift();\r\n        if (t) {\r\n            this.servers.push(t);\r\n            this.currentServer = t;\r\n        }\r\n        return t;\r\n    }\r\n    removeCurrentServer() {\r\n        this.removeServer(this.currentServer);\r\n    }\r\n    removeServer(server) {\r\n        if (server) {\r\n            const index = this.servers.indexOf(server);\r\n            this.servers.splice(index, 1);\r\n        }\r\n    }\r\n    length() {\r\n        return this.servers.length;\r\n    }\r\n    next() {\r\n        return this.servers.length ? this.servers[0] : undefined;\r\n    }\r\n    getServers() {\r\n        return this.servers;\r\n    }\r\n    update(info) {\r\n        const added = [];\r\n        let deleted = [];\r\n        const urlParseFn = getUrlParseFn();\r\n        const discovered = new Map();\r\n        if (info.connect_urls && info.connect_urls.length > 0) {\r\n            info.connect_urls.forEach((hp)=>{\r\n                hp = urlParseFn ? urlParseFn(hp) : hp;\r\n                const s = new ServerImpl(hp, true);\r\n                discovered.set(hp, s);\r\n            });\r\n        }\r\n        const toDelete = [];\r\n        this.servers.forEach((s, index)=>{\r\n            const u = s.listen;\r\n            if (s.gossiped && this.currentServer.listen !== u && discovered.get(u) === undefined) {\r\n                toDelete.push(index);\r\n            }\r\n            discovered.delete(u);\r\n        });\r\n        toDelete.reverse();\r\n        toDelete.forEach((index)=>{\r\n            const removed = this.servers.splice(index, 1);\r\n            deleted = deleted.concat(removed[0].listen);\r\n        });\r\n        discovered.forEach((v, k)=>{\r\n            this.servers.push(v);\r\n            added.push(k);\r\n        });\r\n        return {\r\n            added,\r\n            deleted\r\n        };\r\n    }\r\n}\r\nclass QueuedIteratorImpl {\r\n    inflight;\r\n    processed;\r\n    received;\r\n    noIterator;\r\n    iterClosed;\r\n    done;\r\n    signal;\r\n    yields;\r\n    filtered;\r\n    pendingFiltered;\r\n    ingestionFilterFn;\r\n    protocolFilterFn;\r\n    dispatchedFn;\r\n    ctx;\r\n    _data;\r\n    err;\r\n    time;\r\n    yielding;\r\n    constructor(){\r\n        this.inflight = 0;\r\n        this.filtered = 0;\r\n        this.pendingFiltered = 0;\r\n        this.processed = 0;\r\n        this.received = 0;\r\n        this.noIterator = false;\r\n        this.done = false;\r\n        this.signal = deferred();\r\n        this.yields = [];\r\n        this.iterClosed = deferred();\r\n        this.time = 0;\r\n        this.yielding = false;\r\n    }\r\n    [Symbol.asyncIterator]() {\r\n        return this.iterate();\r\n    }\r\n    push(v) {\r\n        if (this.done) {\r\n            return;\r\n        }\r\n        if (typeof v === \"function\") {\r\n            this.yields.push(v);\r\n            this.signal.resolve();\r\n            return;\r\n        }\r\n        const { ingest, protocol } = this.ingestionFilterFn ? this.ingestionFilterFn(v, this.ctx || this) : {\r\n            ingest: true,\r\n            protocol: false\r\n        };\r\n        if (ingest) {\r\n            if (protocol) {\r\n                this.filtered++;\r\n                this.pendingFiltered++;\r\n            }\r\n            this.yields.push(v);\r\n            this.signal.resolve();\r\n        }\r\n    }\r\n    async *iterate() {\r\n        if (this.noIterator) {\r\n            throw new NatsError(\"unsupported iterator\", ErrorCode.ApiError);\r\n        }\r\n        if (this.yielding) {\r\n            throw new NatsError(\"already yielding\", ErrorCode.ApiError);\r\n        }\r\n        this.yielding = true;\r\n        try {\r\n            while(true){\r\n                if (this.yields.length === 0) {\r\n                    await this.signal;\r\n                }\r\n                if (this.err) {\r\n                    throw this.err;\r\n                }\r\n                const yields = this.yields;\r\n                this.inflight = yields.length;\r\n                this.yields = [];\r\n                for(let i = 0; i < yields.length; i++){\r\n                    if (typeof yields[i] === \"function\") {\r\n                        const fn = yields[i];\r\n                        try {\r\n                            fn();\r\n                        } catch (err) {\r\n                            throw err;\r\n                        }\r\n                        if (this.err) {\r\n                            throw this.err;\r\n                        }\r\n                        continue;\r\n                    }\r\n                    const ok = this.protocolFilterFn ? this.protocolFilterFn(yields[i]) : true;\r\n                    if (ok) {\r\n                        this.processed++;\r\n                        const start = Date.now();\r\n                        yield yields[i];\r\n                        this.time = Date.now() - start;\r\n                        if (this.dispatchedFn && yields[i]) {\r\n                            this.dispatchedFn(yields[i]);\r\n                        }\r\n                    } else {\r\n                        this.pendingFiltered--;\r\n                    }\r\n                    this.inflight--;\r\n                }\r\n                if (this.done) {\r\n                    break;\r\n                } else if (this.yields.length === 0) {\r\n                    yields.length = 0;\r\n                    this.yields = yields;\r\n                    this.signal = deferred();\r\n                }\r\n            }\r\n        } finally{\r\n            this.stop();\r\n        }\r\n    }\r\n    stop(err) {\r\n        if (this.done) {\r\n            return;\r\n        }\r\n        this.err = err;\r\n        this.done = true;\r\n        this.signal.resolve();\r\n        this.iterClosed.resolve();\r\n    }\r\n    getProcessed() {\r\n        return this.noIterator ? this.received : this.processed;\r\n    }\r\n    getPending() {\r\n        return this.yields.length + this.inflight - this.pendingFiltered;\r\n    }\r\n    getReceived() {\r\n        return this.received - this.filtered;\r\n    }\r\n}\r\nfunction canonicalMIMEHeaderKey(k) {\r\n    const dash = 45;\r\n    const toLower = 97 - 65;\r\n    let upper = true;\r\n    const buf = new Array(k.length);\r\n    for(let i = 0; i < k.length; i++){\r\n        let c = k.charCodeAt(i);\r\n        if (c === 58 || c < 33 || c > 126) {\r\n            throw new NatsError(`'${k[i]}' is not a valid character for a header key`, ErrorCode.BadHeader);\r\n        }\r\n        if (upper && 97 <= c && c <= 122) {\r\n            c -= toLower;\r\n        } else if (!upper && 65 <= c && c <= 90) {\r\n            c += toLower;\r\n        }\r\n        buf[i] = c;\r\n        upper = c == dash;\r\n    }\r\n    return String.fromCharCode(...buf);\r\n}\r\nfunction headers(code = 0, description = \"\") {\r\n    if (code === 0 && description !== \"\" || code > 0 && description === \"\") {\r\n        throw new Error(\"setting status requires both code and description\");\r\n    }\r\n    return new MsgHdrsImpl(code, description);\r\n}\r\nconst HEADER = \"NATS/1.0\";\r\nclass MsgHdrsImpl {\r\n    _code;\r\n    headers;\r\n    _description;\r\n    constructor(code = 0, description = \"\"){\r\n        this._code = code;\r\n        this._description = description;\r\n        this.headers = new Map();\r\n    }\r\n    [Symbol.iterator]() {\r\n        return this.headers.entries();\r\n    }\r\n    size() {\r\n        return this.headers.size;\r\n    }\r\n    equals(mh) {\r\n        if (mh && this.headers.size === mh.headers.size && this._code === mh._code) {\r\n            for (const [k, v] of this.headers){\r\n                const a = mh.values(k);\r\n                if (v.length !== a.length) {\r\n                    return false;\r\n                }\r\n                const vv = [\r\n                    ...v\r\n                ].sort();\r\n                const aa = [\r\n                    ...a\r\n                ].sort();\r\n                for(let i = 0; i < vv.length; i++){\r\n                    if (vv[i] !== aa[i]) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    static decode(a) {\r\n        const mh = new MsgHdrsImpl();\r\n        const s = TD.decode(a);\r\n        const lines = s.split(\"\\r\\n\");\r\n        const h = lines[0];\r\n        if (h !== HEADER) {\r\n            let str = h.replace(HEADER, \"\").trim();\r\n            if (str.length > 0) {\r\n                mh._code = parseInt(str, 10);\r\n                if (isNaN(mh._code)) {\r\n                    mh._code = 0;\r\n                }\r\n                const scode = mh._code.toString();\r\n                str = str.replace(scode, \"\");\r\n                mh._description = str.trim();\r\n            }\r\n        }\r\n        if (lines.length >= 1) {\r\n            lines.slice(1).map((s)=>{\r\n                if (s) {\r\n                    const idx = s.indexOf(\":\");\r\n                    if (idx > -1) {\r\n                        const k = s.slice(0, idx);\r\n                        const v = s.slice(idx + 1).trim();\r\n                        mh.append(k, v);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return mh;\r\n    }\r\n    toString() {\r\n        if (this.headers.size === 0 && this._code === 0) {\r\n            return \"\";\r\n        }\r\n        let s = HEADER;\r\n        if (this._code > 0 && this._description !== \"\") {\r\n            s += ` ${this._code} ${this._description}`;\r\n        }\r\n        for (const [k, v] of this.headers){\r\n            for(let i = 0; i < v.length; i++){\r\n                s = `${s}\\r\\n${k}: ${v[i]}`;\r\n            }\r\n        }\r\n        return `${s}\\r\\n\\r\\n`;\r\n    }\r\n    encode() {\r\n        return TE.encode(this.toString());\r\n    }\r\n    static validHeaderValue(k) {\r\n        const inv = /[\\r\\n]/;\r\n        if (inv.test(k)) {\r\n            throw new NatsError(\"invalid header value - \\\\r and \\\\n are not allowed.\", ErrorCode.BadHeader);\r\n        }\r\n        return k.trim();\r\n    }\r\n    keys() {\r\n        const keys = [];\r\n        for (const sk of this.headers.keys()){\r\n            keys.push(sk);\r\n        }\r\n        return keys;\r\n    }\r\n    findKeys(k, match = Match.Exact) {\r\n        const keys = this.keys();\r\n        switch(match){\r\n            case Match.Exact:\r\n                return keys.filter((v)=>{\r\n                    return v === k;\r\n                });\r\n            case Match.CanonicalMIME:\r\n                k = canonicalMIMEHeaderKey(k);\r\n                return keys.filter((v)=>{\r\n                    return v === k;\r\n                });\r\n            default:\r\n                {\r\n                    const lci = k.toLowerCase();\r\n                    return keys.filter((v)=>{\r\n                        return lci === v.toLowerCase();\r\n                    });\r\n                }\r\n        }\r\n    }\r\n    get(k, match = Match.Exact) {\r\n        const keys = this.findKeys(k, match);\r\n        if (keys.length) {\r\n            const v = this.headers.get(keys[0]);\r\n            if (v) {\r\n                return Array.isArray(v) ? v[0] : v;\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    last(k, match = Match.Exact) {\r\n        const keys = this.findKeys(k, match);\r\n        if (keys.length) {\r\n            const v = this.headers.get(keys[0]);\r\n            if (v) {\r\n                return Array.isArray(v) ? v[v.length - 1] : v;\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    has(k, match = Match.Exact) {\r\n        return this.findKeys(k, match).length > 0;\r\n    }\r\n    set(k, v, match = Match.Exact) {\r\n        this.delete(k, match);\r\n        this.append(k, v, match);\r\n    }\r\n    append(k, v, match = Match.Exact) {\r\n        const ck = canonicalMIMEHeaderKey(k);\r\n        if (match === Match.CanonicalMIME) {\r\n            k = ck;\r\n        }\r\n        const keys = this.findKeys(k, match);\r\n        k = keys.length > 0 ? keys[0] : k;\r\n        const value = MsgHdrsImpl.validHeaderValue(v);\r\n        let a = this.headers.get(k);\r\n        if (!a) {\r\n            a = [];\r\n            this.headers.set(k, a);\r\n        }\r\n        a.push(value);\r\n    }\r\n    values(k, match = Match.Exact) {\r\n        const buf = [];\r\n        const keys = this.findKeys(k, match);\r\n        keys.forEach((v)=>{\r\n            const values = this.headers.get(v);\r\n            if (values) {\r\n                buf.push(...values);\r\n            }\r\n        });\r\n        return buf;\r\n    }\r\n    delete(k, match = Match.Exact) {\r\n        const keys = this.findKeys(k, match);\r\n        keys.forEach((v)=>{\r\n            this.headers.delete(v);\r\n        });\r\n    }\r\n    get hasError() {\r\n        return this._code >= 300;\r\n    }\r\n    get status() {\r\n        return `${this._code} ${this._description}`.trim();\r\n    }\r\n    toRecord() {\r\n        const data = {};\r\n        this.keys().forEach((v)=>{\r\n            data[v] = this.values(v);\r\n        });\r\n        return data;\r\n    }\r\n    get code() {\r\n        return this._code;\r\n    }\r\n    get description() {\r\n        return this._description;\r\n    }\r\n    static fromRecord(r) {\r\n        const h = new MsgHdrsImpl();\r\n        for(const k in r){\r\n            h.headers.set(k, r[k]);\r\n        }\r\n        return h;\r\n    }\r\n}\r\nfunction StringCodec() {\r\n    return {\r\n        encode (d) {\r\n            return TE.encode(d);\r\n        },\r\n        decode (a) {\r\n            return TD.decode(a);\r\n        }\r\n    };\r\n}\r\nfunction JSONCodec(reviver) {\r\n    return {\r\n        encode (d) {\r\n            try {\r\n                if (d === undefined) {\r\n                    d = null;\r\n                }\r\n                return TE.encode(JSON.stringify(d));\r\n            } catch (err) {\r\n                throw NatsError.errorForCode(ErrorCode.BadJson, err);\r\n            }\r\n        },\r\n        decode (a) {\r\n            try {\r\n                return JSON.parse(TD.decode(a), reviver);\r\n            } catch (err) {\r\n                throw NatsError.errorForCode(ErrorCode.BadJson, err);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction isRequestError(msg) {\r\n    if (msg && msg.data.length === 0 && msg.headers?.code === 503) {\r\n        return NatsError.errorForCode(ErrorCode.NoResponders);\r\n    }\r\n    return null;\r\n}\r\nclass MsgImpl {\r\n    _headers;\r\n    _msg;\r\n    _rdata;\r\n    _reply;\r\n    _subject;\r\n    publisher;\r\n    static jc;\r\n    constructor(msg, data, publisher){\r\n        this._msg = msg;\r\n        this._rdata = data;\r\n        this.publisher = publisher;\r\n    }\r\n    get subject() {\r\n        if (this._subject) {\r\n            return this._subject;\r\n        }\r\n        this._subject = TD.decode(this._msg.subject);\r\n        return this._subject;\r\n    }\r\n    get reply() {\r\n        if (this._reply) {\r\n            return this._reply;\r\n        }\r\n        this._reply = TD.decode(this._msg.reply);\r\n        return this._reply;\r\n    }\r\n    get sid() {\r\n        return this._msg.sid;\r\n    }\r\n    get headers() {\r\n        if (this._msg.hdr > -1 && !this._headers) {\r\n            const buf = this._rdata.subarray(0, this._msg.hdr);\r\n            this._headers = MsgHdrsImpl.decode(buf);\r\n        }\r\n        return this._headers;\r\n    }\r\n    get data() {\r\n        if (!this._rdata) {\r\n            return new Uint8Array(0);\r\n        }\r\n        return this._msg.hdr > -1 ? this._rdata.subarray(this._msg.hdr) : this._rdata;\r\n    }\r\n    respond(data = Empty, opts) {\r\n        if (this.reply) {\r\n            this.publisher.publish(this.reply, data, opts);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    size() {\r\n        const subj = this._msg.subject.length;\r\n        const reply = this._msg.reply?.length || 0;\r\n        const payloadAndHeaders = this._msg.size === -1 ? 0 : this._msg.size;\r\n        return subj + reply + payloadAndHeaders;\r\n    }\r\n    json(reviver) {\r\n        return JSONCodec(reviver).decode(this.data);\r\n    }\r\n    string() {\r\n        return TD.decode(this.data);\r\n    }\r\n}\r\nclass MuxSubscription {\r\n    baseInbox;\r\n    reqs;\r\n    constructor(){\r\n        this.reqs = new Map();\r\n    }\r\n    size() {\r\n        return this.reqs.size;\r\n    }\r\n    init(prefix) {\r\n        this.baseInbox = `${createInbox(prefix)}.`;\r\n        return this.baseInbox;\r\n    }\r\n    add(r) {\r\n        if (!isNaN(r.received)) {\r\n            r.received = 0;\r\n        }\r\n        this.reqs.set(r.token, r);\r\n    }\r\n    get(token) {\r\n        return this.reqs.get(token);\r\n    }\r\n    cancel(r) {\r\n        this.reqs.delete(r.token);\r\n    }\r\n    getToken(m) {\r\n        const s = m.subject || \"\";\r\n        if (s.indexOf(this.baseInbox) === 0) {\r\n            return s.substring(this.baseInbox.length);\r\n        }\r\n        return null;\r\n    }\r\n    all() {\r\n        return Array.from(this.reqs.values());\r\n    }\r\n    handleError(isMuxPermissionError, err) {\r\n        if (err && err.permissionContext) {\r\n            if (isMuxPermissionError) {\r\n                this.all().forEach((r)=>{\r\n                    r.resolver(err, {});\r\n                });\r\n                return true;\r\n            }\r\n            const ctx = err.permissionContext;\r\n            if (ctx.operation === \"publish\") {\r\n                const req = this.all().find((s)=>{\r\n                    return s.requestSubject === ctx.subject;\r\n                });\r\n                if (req) {\r\n                    req.resolver(err, {});\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    dispatcher() {\r\n        return (err, m)=>{\r\n            const token = this.getToken(m);\r\n            if (token) {\r\n                const r = this.get(token);\r\n                if (r) {\r\n                    if (err === null && m.headers) {\r\n                        err = isRequestError(m);\r\n                    }\r\n                    r.resolver(err, m);\r\n                }\r\n            }\r\n        };\r\n    }\r\n    close() {\r\n        const err = NatsError.errorForCode(ErrorCode.Timeout);\r\n        this.reqs.forEach((req)=>{\r\n            req.resolver(err, {});\r\n        });\r\n    }\r\n}\r\nclass Heartbeat {\r\n    ph;\r\n    interval;\r\n    maxOut;\r\n    timer;\r\n    pendings;\r\n    constructor(ph, interval, maxOut){\r\n        this.ph = ph;\r\n        this.interval = interval;\r\n        this.maxOut = maxOut;\r\n        this.pendings = [];\r\n    }\r\n    start() {\r\n        this.cancel();\r\n        this._schedule();\r\n    }\r\n    cancel(stale) {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n            this.timer = undefined;\r\n        }\r\n        this._reset();\r\n        if (stale) {\r\n            this.ph.disconnect();\r\n        }\r\n    }\r\n    _schedule() {\r\n        this.timer = setTimeout(()=>{\r\n            this.ph.dispatchStatus({\r\n                type: DebugEvents.PingTimer,\r\n                data: `${this.pendings.length + 1}`\r\n            });\r\n            if (this.pendings.length === this.maxOut) {\r\n                this.cancel(true);\r\n                return;\r\n            }\r\n            const ping = deferred();\r\n            this.ph.flush(ping).then(()=>{\r\n                this._reset();\r\n            }).catch(()=>{\r\n                this.cancel();\r\n            });\r\n            this.pendings.push(ping);\r\n            this._schedule();\r\n        }, this.interval);\r\n    }\r\n    _reset() {\r\n        this.pendings = this.pendings.filter((p)=>{\r\n            const d = p;\r\n            d.resolve();\r\n            return false;\r\n        });\r\n    }\r\n}\r\nclass AssertionError extends Error {\r\n    constructor(msg){\r\n        super(msg);\r\n        this.name = \"AssertionError\";\r\n    }\r\n}\r\nfunction assert(cond, msg = \"Assertion failed.\") {\r\n    if (!cond) {\r\n        throw new AssertionError(msg);\r\n    }\r\n}\r\nconst MIN_READ = 32 * 1024;\r\nconst MAX_SIZE = 2 ** 32 - 2;\r\nfunction copy(src, dst, off = 0) {\r\n    const r = dst.byteLength - off;\r\n    if (src.byteLength > r) {\r\n        src = src.subarray(0, r);\r\n    }\r\n    dst.set(src, off);\r\n    return src.byteLength;\r\n}\r\nclass DenoBuffer {\r\n    _buf;\r\n    _off;\r\n    constructor(ab){\r\n        this._off = 0;\r\n        if (ab == null) {\r\n            this._buf = new Uint8Array(0);\r\n            return;\r\n        }\r\n        this._buf = new Uint8Array(ab);\r\n    }\r\n    bytes(options = {\r\n        copy: true\r\n    }) {\r\n        if (options.copy === false) return this._buf.subarray(this._off);\r\n        return this._buf.slice(this._off);\r\n    }\r\n    empty() {\r\n        return this._buf.byteLength <= this._off;\r\n    }\r\n    get length() {\r\n        return this._buf.byteLength - this._off;\r\n    }\r\n    get capacity() {\r\n        return this._buf.buffer.byteLength;\r\n    }\r\n    truncate(n) {\r\n        if (n === 0) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        if (n < 0 || n > this.length) {\r\n            throw Error(\"bytes.Buffer: truncation out of range\");\r\n        }\r\n        this._reslice(this._off + n);\r\n    }\r\n    reset() {\r\n        this._reslice(0);\r\n        this._off = 0;\r\n    }\r\n    _tryGrowByReslice(n) {\r\n        const l = this._buf.byteLength;\r\n        if (n <= this.capacity - l) {\r\n            this._reslice(l + n);\r\n            return l;\r\n        }\r\n        return -1;\r\n    }\r\n    _reslice(len) {\r\n        assert(len <= this._buf.buffer.byteLength);\r\n        this._buf = new Uint8Array(this._buf.buffer, 0, len);\r\n    }\r\n    readByte() {\r\n        const a = new Uint8Array(1);\r\n        if (this.read(a)) {\r\n            return a[0];\r\n        }\r\n        return null;\r\n    }\r\n    read(p) {\r\n        if (this.empty()) {\r\n            this.reset();\r\n            if (p.byteLength === 0) {\r\n                return 0;\r\n            }\r\n            return null;\r\n        }\r\n        const nread = copy(this._buf.subarray(this._off), p);\r\n        this._off += nread;\r\n        return nread;\r\n    }\r\n    writeByte(n) {\r\n        return this.write(Uint8Array.of(n));\r\n    }\r\n    writeString(s) {\r\n        return this.write(TE.encode(s));\r\n    }\r\n    write(p) {\r\n        const m = this._grow(p.byteLength);\r\n        return copy(p, this._buf, m);\r\n    }\r\n    _grow(n) {\r\n        const m = this.length;\r\n        if (m === 0 && this._off !== 0) {\r\n            this.reset();\r\n        }\r\n        const i = this._tryGrowByReslice(n);\r\n        if (i >= 0) {\r\n            return i;\r\n        }\r\n        const c = this.capacity;\r\n        if (n <= Math.floor(c / 2) - m) {\r\n            copy(this._buf.subarray(this._off), this._buf);\r\n        } else if (c + n > MAX_SIZE) {\r\n            throw new Error(\"The buffer cannot be grown beyond the maximum size.\");\r\n        } else {\r\n            const buf = new Uint8Array(Math.min(2 * c + n, MAX_SIZE));\r\n            copy(this._buf.subarray(this._off), buf);\r\n            this._buf = buf;\r\n        }\r\n        this._off = 0;\r\n        this._reslice(Math.min(m + n, MAX_SIZE));\r\n        return m;\r\n    }\r\n    grow(n) {\r\n        if (n < 0) {\r\n            throw Error(\"Buffer._grow: negative count\");\r\n        }\r\n        const m = this._grow(n);\r\n        this._reslice(m);\r\n    }\r\n    readFrom(r) {\r\n        let n = 0;\r\n        const tmp = new Uint8Array(MIN_READ);\r\n        while(true){\r\n            const shouldGrow = this.capacity - this.length < MIN_READ;\r\n            const buf = shouldGrow ? tmp : new Uint8Array(this._buf.buffer, this.length);\r\n            const nread = r.read(buf);\r\n            if (nread === null) {\r\n                return n;\r\n            }\r\n            if (shouldGrow) this.write(buf.subarray(0, nread));\r\n            else this._reslice(this.length + nread);\r\n            n += nread;\r\n        }\r\n    }\r\n}\r\nvar Kind;\r\n(function(Kind) {\r\n    Kind[Kind[\"OK\"] = 0] = \"OK\";\r\n    Kind[Kind[\"ERR\"] = 1] = \"ERR\";\r\n    Kind[Kind[\"MSG\"] = 2] = \"MSG\";\r\n    Kind[Kind[\"INFO\"] = 3] = \"INFO\";\r\n    Kind[Kind[\"PING\"] = 4] = \"PING\";\r\n    Kind[Kind[\"PONG\"] = 5] = \"PONG\";\r\n})(Kind || (Kind = {}));\r\nfunction newMsgArg() {\r\n    const ma = {};\r\n    ma.sid = -1;\r\n    ma.hdr = -1;\r\n    ma.size = -1;\r\n    return ma;\r\n}\r\nconst ASCII_0 = 48;\r\nclass Parser {\r\n    dispatcher;\r\n    state;\r\n    as;\r\n    drop;\r\n    hdr;\r\n    ma;\r\n    argBuf;\r\n    msgBuf;\r\n    constructor(dispatcher){\r\n        this.dispatcher = dispatcher;\r\n        this.state = State.OP_START;\r\n        this.as = 0;\r\n        this.drop = 0;\r\n        this.hdr = 0;\r\n    }\r\n    parse(buf) {\r\n        let i;\r\n        for(i = 0; i < buf.length; i++){\r\n            const b = buf[i];\r\n            switch(this.state){\r\n                case State.OP_START:\r\n                    switch(b){\r\n                        case cc.M:\r\n                        case cc.m:\r\n                            this.state = State.OP_M;\r\n                            this.hdr = -1;\r\n                            this.ma = newMsgArg();\r\n                            break;\r\n                        case cc.H:\r\n                        case cc.h:\r\n                            this.state = State.OP_H;\r\n                            this.hdr = 0;\r\n                            this.ma = newMsgArg();\r\n                            break;\r\n                        case cc.P:\r\n                        case cc.p:\r\n                            this.state = State.OP_P;\r\n                            break;\r\n                        case cc.PLUS:\r\n                            this.state = State.OP_PLUS;\r\n                            break;\r\n                        case cc.MINUS:\r\n                            this.state = State.OP_MINUS;\r\n                            break;\r\n                        case cc.I:\r\n                        case cc.i:\r\n                            this.state = State.OP_I;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_H:\r\n                    switch(b){\r\n                        case cc.M:\r\n                        case cc.m:\r\n                            this.state = State.OP_M;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_M:\r\n                    switch(b){\r\n                        case cc.S:\r\n                        case cc.s:\r\n                            this.state = State.OP_MS;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_MS:\r\n                    switch(b){\r\n                        case cc.G:\r\n                        case cc.g:\r\n                            this.state = State.OP_MSG;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_MSG:\r\n                    switch(b){\r\n                        case cc.SPACE:\r\n                        case cc.TAB:\r\n                            this.state = State.OP_MSG_SPC;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_MSG_SPC:\r\n                    switch(b){\r\n                        case cc.SPACE:\r\n                        case cc.TAB:\r\n                            continue;\r\n                        default:\r\n                            this.state = State.MSG_ARG;\r\n                            this.as = i;\r\n                    }\r\n                    break;\r\n                case State.MSG_ARG:\r\n                    switch(b){\r\n                        case cc.CR:\r\n                            this.drop = 1;\r\n                            break;\r\n                        case cc.NL:\r\n                            {\r\n                                const arg = this.argBuf ? this.argBuf.bytes() : buf.subarray(this.as, i - this.drop);\r\n                                this.processMsgArgs(arg);\r\n                                this.drop = 0;\r\n                                this.as = i + 1;\r\n                                this.state = State.MSG_PAYLOAD;\r\n                                i = this.as + this.ma.size - 1;\r\n                                break;\r\n                            }\r\n                        default:\r\n                            if (this.argBuf) {\r\n                                this.argBuf.writeByte(b);\r\n                            }\r\n                    }\r\n                    break;\r\n                case State.MSG_PAYLOAD:\r\n                    if (this.msgBuf) {\r\n                        if (this.msgBuf.length >= this.ma.size) {\r\n                            const data = this.msgBuf.bytes({\r\n                                copy: false\r\n                            });\r\n                            this.dispatcher.push({\r\n                                kind: Kind.MSG,\r\n                                msg: this.ma,\r\n                                data: data\r\n                            });\r\n                            this.argBuf = undefined;\r\n                            this.msgBuf = undefined;\r\n                            this.state = State.MSG_END;\r\n                        } else {\r\n                            let toCopy = this.ma.size - this.msgBuf.length;\r\n                            const avail = buf.length - i;\r\n                            if (avail < toCopy) {\r\n                                toCopy = avail;\r\n                            }\r\n                            if (toCopy > 0) {\r\n                                this.msgBuf.write(buf.subarray(i, i + toCopy));\r\n                                i = i + toCopy - 1;\r\n                            } else {\r\n                                this.msgBuf.writeByte(b);\r\n                            }\r\n                        }\r\n                    } else if (i - this.as >= this.ma.size) {\r\n                        this.dispatcher.push({\r\n                            kind: Kind.MSG,\r\n                            msg: this.ma,\r\n                            data: buf.subarray(this.as, i)\r\n                        });\r\n                        this.argBuf = undefined;\r\n                        this.msgBuf = undefined;\r\n                        this.state = State.MSG_END;\r\n                    }\r\n                    break;\r\n                case State.MSG_END:\r\n                    switch(b){\r\n                        case cc.NL:\r\n                            this.drop = 0;\r\n                            this.as = i + 1;\r\n                            this.state = State.OP_START;\r\n                            break;\r\n                        default:\r\n                            continue;\r\n                    }\r\n                    break;\r\n                case State.OP_PLUS:\r\n                    switch(b){\r\n                        case cc.O:\r\n                        case cc.o:\r\n                            this.state = State.OP_PLUS_O;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_PLUS_O:\r\n                    switch(b){\r\n                        case cc.K:\r\n                        case cc.k:\r\n                            this.state = State.OP_PLUS_OK;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_PLUS_OK:\r\n                    switch(b){\r\n                        case cc.NL:\r\n                            this.dispatcher.push({\r\n                                kind: Kind.OK\r\n                            });\r\n                            this.drop = 0;\r\n                            this.state = State.OP_START;\r\n                            break;\r\n                    }\r\n                    break;\r\n                case State.OP_MINUS:\r\n                    switch(b){\r\n                        case cc.E:\r\n                        case cc.e:\r\n                            this.state = State.OP_MINUS_E;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_MINUS_E:\r\n                    switch(b){\r\n                        case cc.R:\r\n                        case cc.r:\r\n                            this.state = State.OP_MINUS_ER;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_MINUS_ER:\r\n                    switch(b){\r\n                        case cc.R:\r\n                        case cc.r:\r\n                            this.state = State.OP_MINUS_ERR;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_MINUS_ERR:\r\n                    switch(b){\r\n                        case cc.SPACE:\r\n                        case cc.TAB:\r\n                            this.state = State.OP_MINUS_ERR_SPC;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_MINUS_ERR_SPC:\r\n                    switch(b){\r\n                        case cc.SPACE:\r\n                        case cc.TAB:\r\n                            continue;\r\n                        default:\r\n                            this.state = State.MINUS_ERR_ARG;\r\n                            this.as = i;\r\n                    }\r\n                    break;\r\n                case State.MINUS_ERR_ARG:\r\n                    switch(b){\r\n                        case cc.CR:\r\n                            this.drop = 1;\r\n                            break;\r\n                        case cc.NL:\r\n                            {\r\n                                let arg;\r\n                                if (this.argBuf) {\r\n                                    arg = this.argBuf.bytes();\r\n                                    this.argBuf = undefined;\r\n                                } else {\r\n                                    arg = buf.subarray(this.as, i - this.drop);\r\n                                }\r\n                                this.dispatcher.push({\r\n                                    kind: Kind.ERR,\r\n                                    data: arg\r\n                                });\r\n                                this.drop = 0;\r\n                                this.as = i + 1;\r\n                                this.state = State.OP_START;\r\n                                break;\r\n                            }\r\n                        default:\r\n                            if (this.argBuf) {\r\n                                this.argBuf.write(Uint8Array.of(b));\r\n                            }\r\n                    }\r\n                    break;\r\n                case State.OP_P:\r\n                    switch(b){\r\n                        case cc.I:\r\n                        case cc.i:\r\n                            this.state = State.OP_PI;\r\n                            break;\r\n                        case cc.O:\r\n                        case cc.o:\r\n                            this.state = State.OP_PO;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_PO:\r\n                    switch(b){\r\n                        case cc.N:\r\n                        case cc.n:\r\n                            this.state = State.OP_PON;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_PON:\r\n                    switch(b){\r\n                        case cc.G:\r\n                        case cc.g:\r\n                            this.state = State.OP_PONG;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_PONG:\r\n                    switch(b){\r\n                        case cc.NL:\r\n                            this.dispatcher.push({\r\n                                kind: Kind.PONG\r\n                            });\r\n                            this.drop = 0;\r\n                            this.state = State.OP_START;\r\n                            break;\r\n                    }\r\n                    break;\r\n                case State.OP_PI:\r\n                    switch(b){\r\n                        case cc.N:\r\n                        case cc.n:\r\n                            this.state = State.OP_PIN;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_PIN:\r\n                    switch(b){\r\n                        case cc.G:\r\n                        case cc.g:\r\n                            this.state = State.OP_PING;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_PING:\r\n                    switch(b){\r\n                        case cc.NL:\r\n                            this.dispatcher.push({\r\n                                kind: Kind.PING\r\n                            });\r\n                            this.drop = 0;\r\n                            this.state = State.OP_START;\r\n                            break;\r\n                    }\r\n                    break;\r\n                case State.OP_I:\r\n                    switch(b){\r\n                        case cc.N:\r\n                        case cc.n:\r\n                            this.state = State.OP_IN;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_IN:\r\n                    switch(b){\r\n                        case cc.F:\r\n                        case cc.f:\r\n                            this.state = State.OP_INF;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_INF:\r\n                    switch(b){\r\n                        case cc.O:\r\n                        case cc.o:\r\n                            this.state = State.OP_INFO;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_INFO:\r\n                    switch(b){\r\n                        case cc.SPACE:\r\n                        case cc.TAB:\r\n                            this.state = State.OP_INFO_SPC;\r\n                            break;\r\n                        default:\r\n                            throw this.fail(buf.subarray(i));\r\n                    }\r\n                    break;\r\n                case State.OP_INFO_SPC:\r\n                    switch(b){\r\n                        case cc.SPACE:\r\n                        case cc.TAB:\r\n                            continue;\r\n                        default:\r\n                            this.state = State.INFO_ARG;\r\n                            this.as = i;\r\n                    }\r\n                    break;\r\n                case State.INFO_ARG:\r\n                    switch(b){\r\n                        case cc.CR:\r\n                            this.drop = 1;\r\n                            break;\r\n                        case cc.NL:\r\n                            {\r\n                                let arg;\r\n                                if (this.argBuf) {\r\n                                    arg = this.argBuf.bytes();\r\n                                    this.argBuf = undefined;\r\n                                } else {\r\n                                    arg = buf.subarray(this.as, i - this.drop);\r\n                                }\r\n                                this.dispatcher.push({\r\n                                    kind: Kind.INFO,\r\n                                    data: arg\r\n                                });\r\n                                this.drop = 0;\r\n                                this.as = i + 1;\r\n                                this.state = State.OP_START;\r\n                                break;\r\n                            }\r\n                        default:\r\n                            if (this.argBuf) {\r\n                                this.argBuf.writeByte(b);\r\n                            }\r\n                    }\r\n                    break;\r\n                default:\r\n                    throw this.fail(buf.subarray(i));\r\n            }\r\n        }\r\n        if ((this.state === State.MSG_ARG || this.state === State.MINUS_ERR_ARG || this.state === State.INFO_ARG) && !this.argBuf) {\r\n            this.argBuf = new DenoBuffer(buf.subarray(this.as, i - this.drop));\r\n        }\r\n        if (this.state === State.MSG_PAYLOAD && !this.msgBuf) {\r\n            if (!this.argBuf) {\r\n                this.cloneMsgArg();\r\n            }\r\n            this.msgBuf = new DenoBuffer(buf.subarray(this.as));\r\n        }\r\n    }\r\n    cloneMsgArg() {\r\n        const s = this.ma.subject.length;\r\n        const r = this.ma.reply ? this.ma.reply.length : 0;\r\n        const buf = new Uint8Array(s + r);\r\n        buf.set(this.ma.subject);\r\n        if (this.ma.reply) {\r\n            buf.set(this.ma.reply, s);\r\n        }\r\n        this.argBuf = new DenoBuffer(buf);\r\n        this.ma.subject = buf.subarray(0, s);\r\n        if (this.ma.reply) {\r\n            this.ma.reply = buf.subarray(s);\r\n        }\r\n    }\r\n    processMsgArgs(arg) {\r\n        if (this.hdr >= 0) {\r\n            return this.processHeaderMsgArgs(arg);\r\n        }\r\n        const args = [];\r\n        let start = -1;\r\n        for(let i = 0; i < arg.length; i++){\r\n            const b = arg[i];\r\n            switch(b){\r\n                case cc.SPACE:\r\n                case cc.TAB:\r\n                case cc.CR:\r\n                case cc.NL:\r\n                    if (start >= 0) {\r\n                        args.push(arg.subarray(start, i));\r\n                        start = -1;\r\n                    }\r\n                    break;\r\n                default:\r\n                    if (start < 0) {\r\n                        start = i;\r\n                    }\r\n            }\r\n        }\r\n        if (start >= 0) {\r\n            args.push(arg.subarray(start));\r\n        }\r\n        switch(args.length){\r\n            case 3:\r\n                this.ma.subject = args[0];\r\n                this.ma.sid = this.protoParseInt(args[1]);\r\n                this.ma.reply = undefined;\r\n                this.ma.size = this.protoParseInt(args[2]);\r\n                break;\r\n            case 4:\r\n                this.ma.subject = args[0];\r\n                this.ma.sid = this.protoParseInt(args[1]);\r\n                this.ma.reply = args[2];\r\n                this.ma.size = this.protoParseInt(args[3]);\r\n                break;\r\n            default:\r\n                throw this.fail(arg, \"processMsgArgs Parse Error\");\r\n        }\r\n        if (this.ma.sid < 0) {\r\n            throw this.fail(arg, \"processMsgArgs Bad or Missing Sid Error\");\r\n        }\r\n        if (this.ma.size < 0) {\r\n            throw this.fail(arg, \"processMsgArgs Bad or Missing Size Error\");\r\n        }\r\n    }\r\n    fail(data, label = \"\") {\r\n        if (!label) {\r\n            label = `parse error [${this.state}]`;\r\n        } else {\r\n            label = `${label} [${this.state}]`;\r\n        }\r\n        return new Error(`${label}: ${TD.decode(data)}`);\r\n    }\r\n    processHeaderMsgArgs(arg) {\r\n        const args = [];\r\n        let start = -1;\r\n        for(let i = 0; i < arg.length; i++){\r\n            const b = arg[i];\r\n            switch(b){\r\n                case cc.SPACE:\r\n                case cc.TAB:\r\n                case cc.CR:\r\n                case cc.NL:\r\n                    if (start >= 0) {\r\n                        args.push(arg.subarray(start, i));\r\n                        start = -1;\r\n                    }\r\n                    break;\r\n                default:\r\n                    if (start < 0) {\r\n                        start = i;\r\n                    }\r\n            }\r\n        }\r\n        if (start >= 0) {\r\n            args.push(arg.subarray(start));\r\n        }\r\n        switch(args.length){\r\n            case 4:\r\n                this.ma.subject = args[0];\r\n                this.ma.sid = this.protoParseInt(args[1]);\r\n                this.ma.reply = undefined;\r\n                this.ma.hdr = this.protoParseInt(args[2]);\r\n                this.ma.size = this.protoParseInt(args[3]);\r\n                break;\r\n            case 5:\r\n                this.ma.subject = args[0];\r\n                this.ma.sid = this.protoParseInt(args[1]);\r\n                this.ma.reply = args[2];\r\n                this.ma.hdr = this.protoParseInt(args[3]);\r\n                this.ma.size = this.protoParseInt(args[4]);\r\n                break;\r\n            default:\r\n                throw this.fail(arg, \"processHeaderMsgArgs Parse Error\");\r\n        }\r\n        if (this.ma.sid < 0) {\r\n            throw this.fail(arg, \"processHeaderMsgArgs Bad or Missing Sid Error\");\r\n        }\r\n        if (this.ma.hdr < 0 || this.ma.hdr > this.ma.size) {\r\n            throw this.fail(arg, \"processHeaderMsgArgs Bad or Missing Header Size Error\");\r\n        }\r\n        if (this.ma.size < 0) {\r\n            throw this.fail(arg, \"processHeaderMsgArgs Bad or Missing Size Error\");\r\n        }\r\n    }\r\n    protoParseInt(a) {\r\n        if (a.length === 0) {\r\n            return -1;\r\n        }\r\n        let n = 0;\r\n        for(let i = 0; i < a.length; i++){\r\n            if (a[i] < 48 || a[i] > 57) {\r\n                return -1;\r\n            }\r\n            n = n * 10 + (a[i] - ASCII_0);\r\n        }\r\n        return n;\r\n    }\r\n}\r\nvar State;\r\n(function(State) {\r\n    State[State[\"OP_START\"] = 0] = \"OP_START\";\r\n    State[State[\"OP_PLUS\"] = 1] = \"OP_PLUS\";\r\n    State[State[\"OP_PLUS_O\"] = 2] = \"OP_PLUS_O\";\r\n    State[State[\"OP_PLUS_OK\"] = 3] = \"OP_PLUS_OK\";\r\n    State[State[\"OP_MINUS\"] = 4] = \"OP_MINUS\";\r\n    State[State[\"OP_MINUS_E\"] = 5] = \"OP_MINUS_E\";\r\n    State[State[\"OP_MINUS_ER\"] = 6] = \"OP_MINUS_ER\";\r\n    State[State[\"OP_MINUS_ERR\"] = 7] = \"OP_MINUS_ERR\";\r\n    State[State[\"OP_MINUS_ERR_SPC\"] = 8] = \"OP_MINUS_ERR_SPC\";\r\n    State[State[\"MINUS_ERR_ARG\"] = 9] = \"MINUS_ERR_ARG\";\r\n    State[State[\"OP_M\"] = 10] = \"OP_M\";\r\n    State[State[\"OP_MS\"] = 11] = \"OP_MS\";\r\n    State[State[\"OP_MSG\"] = 12] = \"OP_MSG\";\r\n    State[State[\"OP_MSG_SPC\"] = 13] = \"OP_MSG_SPC\";\r\n    State[State[\"MSG_ARG\"] = 14] = \"MSG_ARG\";\r\n    State[State[\"MSG_PAYLOAD\"] = 15] = \"MSG_PAYLOAD\";\r\n    State[State[\"MSG_END\"] = 16] = \"MSG_END\";\r\n    State[State[\"OP_H\"] = 17] = \"OP_H\";\r\n    State[State[\"OP_P\"] = 18] = \"OP_P\";\r\n    State[State[\"OP_PI\"] = 19] = \"OP_PI\";\r\n    State[State[\"OP_PIN\"] = 20] = \"OP_PIN\";\r\n    State[State[\"OP_PING\"] = 21] = \"OP_PING\";\r\n    State[State[\"OP_PO\"] = 22] = \"OP_PO\";\r\n    State[State[\"OP_PON\"] = 23] = \"OP_PON\";\r\n    State[State[\"OP_PONG\"] = 24] = \"OP_PONG\";\r\n    State[State[\"OP_I\"] = 25] = \"OP_I\";\r\n    State[State[\"OP_IN\"] = 26] = \"OP_IN\";\r\n    State[State[\"OP_INF\"] = 27] = \"OP_INF\";\r\n    State[State[\"OP_INFO\"] = 28] = \"OP_INFO\";\r\n    State[State[\"OP_INFO_SPC\"] = 29] = \"OP_INFO_SPC\";\r\n    State[State[\"INFO_ARG\"] = 30] = \"INFO_ARG\";\r\n})(State || (State = {}));\r\nvar cc;\r\n(function(cc) {\r\n    cc[cc[\"CR\"] = \"\\r\".charCodeAt(0)] = \"CR\";\r\n    cc[cc[\"E\"] = \"E\".charCodeAt(0)] = \"E\";\r\n    cc[cc[\"e\"] = \"e\".charCodeAt(0)] = \"e\";\r\n    cc[cc[\"F\"] = \"F\".charCodeAt(0)] = \"F\";\r\n    cc[cc[\"f\"] = \"f\".charCodeAt(0)] = \"f\";\r\n    cc[cc[\"G\"] = \"G\".charCodeAt(0)] = \"G\";\r\n    cc[cc[\"g\"] = \"g\".charCodeAt(0)] = \"g\";\r\n    cc[cc[\"H\"] = \"H\".charCodeAt(0)] = \"H\";\r\n    cc[cc[\"h\"] = \"h\".charCodeAt(0)] = \"h\";\r\n    cc[cc[\"I\"] = \"I\".charCodeAt(0)] = \"I\";\r\n    cc[cc[\"i\"] = \"i\".charCodeAt(0)] = \"i\";\r\n    cc[cc[\"K\"] = \"K\".charCodeAt(0)] = \"K\";\r\n    cc[cc[\"k\"] = \"k\".charCodeAt(0)] = \"k\";\r\n    cc[cc[\"M\"] = \"M\".charCodeAt(0)] = \"M\";\r\n    cc[cc[\"m\"] = \"m\".charCodeAt(0)] = \"m\";\r\n    cc[cc[\"MINUS\"] = \"-\".charCodeAt(0)] = \"MINUS\";\r\n    cc[cc[\"N\"] = \"N\".charCodeAt(0)] = \"N\";\r\n    cc[cc[\"n\"] = \"n\".charCodeAt(0)] = \"n\";\r\n    cc[cc[\"NL\"] = \"\\n\".charCodeAt(0)] = \"NL\";\r\n    cc[cc[\"O\"] = \"O\".charCodeAt(0)] = \"O\";\r\n    cc[cc[\"o\"] = \"o\".charCodeAt(0)] = \"o\";\r\n    cc[cc[\"P\"] = \"P\".charCodeAt(0)] = \"P\";\r\n    cc[cc[\"p\"] = \"p\".charCodeAt(0)] = \"p\";\r\n    cc[cc[\"PLUS\"] = \"+\".charCodeAt(0)] = \"PLUS\";\r\n    cc[cc[\"R\"] = \"R\".charCodeAt(0)] = \"R\";\r\n    cc[cc[\"r\"] = \"r\".charCodeAt(0)] = \"r\";\r\n    cc[cc[\"S\"] = \"S\".charCodeAt(0)] = \"S\";\r\n    cc[cc[\"s\"] = \"s\".charCodeAt(0)] = \"s\";\r\n    cc[cc[\"SPACE\"] = \" \".charCodeAt(0)] = \"SPACE\";\r\n    cc[cc[\"TAB\"] = \"\\t\".charCodeAt(0)] = \"TAB\";\r\n})(cc || (cc = {}));\r\nfunction parseSemVer(s = \"\") {\r\n    const m = s.match(/(\\d+).(\\d+).(\\d+)/);\r\n    if (m) {\r\n        return {\r\n            major: parseInt(m[1]),\r\n            minor: parseInt(m[2]),\r\n            micro: parseInt(m[3])\r\n        };\r\n    }\r\n    throw new Error(`'${s}' is not a semver value`);\r\n}\r\nfunction compare(a, b) {\r\n    if (a.major < b.major) return -1;\r\n    if (a.major > b.major) return 1;\r\n    if (a.minor < b.minor) return -1;\r\n    if (a.minor > b.minor) return 1;\r\n    if (a.micro < b.micro) return -1;\r\n    if (a.micro > b.micro) return 1;\r\n    return 0;\r\n}\r\nvar Feature;\r\n(function(Feature) {\r\n    Feature[\"JS_KV\"] = \"js_kv\";\r\n    Feature[\"JS_OBJECTSTORE\"] = \"js_objectstore\";\r\n    Feature[\"JS_PULL_MAX_BYTES\"] = \"js_pull_max_bytes\";\r\n    Feature[\"JS_NEW_CONSUMER_CREATE_API\"] = \"js_new_consumer_create\";\r\n    Feature[\"JS_ALLOW_DIRECT\"] = \"js_allow_direct\";\r\n    Feature[\"JS_MULTIPLE_CONSUMER_FILTER\"] = \"js_multiple_consumer_filter\";\r\n    Feature[\"JS_SIMPLIFICATION\"] = \"js_simplification\";\r\n    Feature[\"JS_STREAM_CONSUMER_METADATA\"] = \"js_stream_consumer_metadata\";\r\n    Feature[\"JS_CONSUMER_FILTER_SUBJECTS\"] = \"js_consumer_filter_subjects\";\r\n    Feature[\"JS_STREAM_FIRST_SEQ\"] = \"js_stream_first_seq\";\r\n    Feature[\"JS_STREAM_SUBJECT_TRANSFORM\"] = \"js_stream_subject_transform\";\r\n    Feature[\"JS_STREAM_SOURCE_SUBJECT_TRANSFORM\"] = \"js_stream_source_subject_transform\";\r\n    Feature[\"JS_STREAM_COMPRESSION\"] = \"js_stream_compression\";\r\n    Feature[\"JS_DEFAULT_CONSUMER_LIMITS\"] = \"js_default_consumer_limits\";\r\n})(Feature || (Feature = {}));\r\nclass Features {\r\n    server;\r\n    features;\r\n    disabled;\r\n    constructor(v){\r\n        this.features = new Map();\r\n        this.disabled = [];\r\n        this.update(v);\r\n    }\r\n    resetDisabled() {\r\n        this.disabled.length = 0;\r\n        this.update(this.server);\r\n    }\r\n    disable(f) {\r\n        this.disabled.push(f);\r\n        this.update(this.server);\r\n    }\r\n    isDisabled(f) {\r\n        return this.disabled.indexOf(f) !== -1;\r\n    }\r\n    update(v) {\r\n        if (typeof v === \"string\") {\r\n            v = parseSemVer(v);\r\n        }\r\n        this.server = v;\r\n        this.set(Feature.JS_KV, \"2.6.2\");\r\n        this.set(Feature.JS_OBJECTSTORE, \"2.6.3\");\r\n        this.set(Feature.JS_PULL_MAX_BYTES, \"2.8.3\");\r\n        this.set(Feature.JS_NEW_CONSUMER_CREATE_API, \"2.9.0\");\r\n        this.set(Feature.JS_ALLOW_DIRECT, \"2.9.0\");\r\n        this.set(Feature.JS_MULTIPLE_CONSUMER_FILTER, \"2.10.0\");\r\n        this.set(Feature.JS_SIMPLIFICATION, \"2.9.4\");\r\n        this.set(Feature.JS_STREAM_CONSUMER_METADATA, \"2.10.0\");\r\n        this.set(Feature.JS_CONSUMER_FILTER_SUBJECTS, \"2.10.0\");\r\n        this.set(Feature.JS_STREAM_FIRST_SEQ, \"2.10.0\");\r\n        this.set(Feature.JS_STREAM_SUBJECT_TRANSFORM, \"2.10.0\");\r\n        this.set(Feature.JS_STREAM_SOURCE_SUBJECT_TRANSFORM, \"2.10.0\");\r\n        this.set(Feature.JS_STREAM_COMPRESSION, \"2.10.0\");\r\n        this.set(Feature.JS_DEFAULT_CONSUMER_LIMITS, \"2.10.0\");\r\n        this.disabled.forEach((f)=>{\r\n            this.features.delete(f);\r\n        });\r\n    }\r\n    set(f, requires) {\r\n        this.features.set(f, {\r\n            min: requires,\r\n            ok: compare(this.server, parseSemVer(requires)) >= 0\r\n        });\r\n    }\r\n    get(f) {\r\n        return this.features.get(f) || {\r\n            min: \"unknown\",\r\n            ok: false\r\n        };\r\n    }\r\n    supports(f) {\r\n        return this.get(f)?.ok || false;\r\n    }\r\n    require(v) {\r\n        if (typeof v === \"string\") {\r\n            v = parseSemVer(v);\r\n        }\r\n        return compare(this.server, v) >= 0;\r\n    }\r\n}\r\n(function(nacl) {\r\n    'use strict';\r\n    var u64 = function(h, l) {\r\n        this.hi = h | 0 >>> 0;\r\n        this.lo = l | 0 >>> 0;\r\n    };\r\n    var gf = function(init) {\r\n        var i, r = new Float64Array(16);\r\n        if (init) for(i = 0; i < init.length; i++)r[i] = init[i];\r\n        return r;\r\n    };\r\n    var randombytes = function() {\r\n        throw new Error('no PRNG');\r\n    };\r\n    var _0 = new Uint8Array(16);\r\n    var _9 = new Uint8Array(32);\r\n    _9[0] = 9;\r\n    var gf0 = gf(), gf1 = gf([\r\n        1\r\n    ]), _121665 = gf([\r\n        0xdb41,\r\n        1\r\n    ]), D = gf([\r\n        0x78a3,\r\n        0x1359,\r\n        0x4dca,\r\n        0x75eb,\r\n        0xd8ab,\r\n        0x4141,\r\n        0x0a4d,\r\n        0x0070,\r\n        0xe898,\r\n        0x7779,\r\n        0x4079,\r\n        0x8cc7,\r\n        0xfe73,\r\n        0x2b6f,\r\n        0x6cee,\r\n        0x5203\r\n    ]), D2 = gf([\r\n        0xf159,\r\n        0x26b2,\r\n        0x9b94,\r\n        0xebd6,\r\n        0xb156,\r\n        0x8283,\r\n        0x149a,\r\n        0x00e0,\r\n        0xd130,\r\n        0xeef3,\r\n        0x80f2,\r\n        0x198e,\r\n        0xfce7,\r\n        0x56df,\r\n        0xd9dc,\r\n        0x2406\r\n    ]), X = gf([\r\n        0xd51a,\r\n        0x8f25,\r\n        0x2d60,\r\n        0xc956,\r\n        0xa7b2,\r\n        0x9525,\r\n        0xc760,\r\n        0x692c,\r\n        0xdc5c,\r\n        0xfdd6,\r\n        0xe231,\r\n        0xc0a4,\r\n        0x53fe,\r\n        0xcd6e,\r\n        0x36d3,\r\n        0x2169\r\n    ]), Y = gf([\r\n        0x6658,\r\n        0x6666,\r\n        0x6666,\r\n        0x6666,\r\n        0x6666,\r\n        0x6666,\r\n        0x6666,\r\n        0x6666,\r\n        0x6666,\r\n        0x6666,\r\n        0x6666,\r\n        0x6666,\r\n        0x6666,\r\n        0x6666,\r\n        0x6666,\r\n        0x6666\r\n    ]), I = gf([\r\n        0xa0b0,\r\n        0x4a0e,\r\n        0x1b27,\r\n        0xc4ee,\r\n        0xe478,\r\n        0xad2f,\r\n        0x1806,\r\n        0x2f43,\r\n        0xd7a7,\r\n        0x3dfb,\r\n        0x0099,\r\n        0x2b4d,\r\n        0xdf0b,\r\n        0x4fc1,\r\n        0x2480,\r\n        0x2b83\r\n    ]);\r\n    function L32(x, c) {\r\n        return x << c | x >>> 32 - c;\r\n    }\r\n    function ld32(x, i) {\r\n        var u = x[i + 3] & 0xff;\r\n        u = u << 8 | x[i + 2] & 0xff;\r\n        u = u << 8 | x[i + 1] & 0xff;\r\n        return u << 8 | x[i + 0] & 0xff;\r\n    }\r\n    function dl64(x, i) {\r\n        var h = x[i] << 24 | x[i + 1] << 16 | x[i + 2] << 8 | x[i + 3];\r\n        var l = x[i + 4] << 24 | x[i + 5] << 16 | x[i + 6] << 8 | x[i + 7];\r\n        return new u64(h, l);\r\n    }\r\n    function st32(x, j, u) {\r\n        var i;\r\n        for(i = 0; i < 4; i++){\r\n            x[j + i] = u & 255;\r\n            u >>>= 8;\r\n        }\r\n    }\r\n    function ts64(x, i, u) {\r\n        x[i] = u.hi >> 24 & 0xff;\r\n        x[i + 1] = u.hi >> 16 & 0xff;\r\n        x[i + 2] = u.hi >> 8 & 0xff;\r\n        x[i + 3] = u.hi & 0xff;\r\n        x[i + 4] = u.lo >> 24 & 0xff;\r\n        x[i + 5] = u.lo >> 16 & 0xff;\r\n        x[i + 6] = u.lo >> 8 & 0xff;\r\n        x[i + 7] = u.lo & 0xff;\r\n    }\r\n    function vn(x, xi, y, yi, n) {\r\n        var i, d = 0;\r\n        for(i = 0; i < n; i++)d |= x[xi + i] ^ y[yi + i];\r\n        return (1 & d - 1 >>> 8) - 1;\r\n    }\r\n    function crypto_verify_16(x, xi, y, yi) {\r\n        return vn(x, xi, y, yi, 16);\r\n    }\r\n    function crypto_verify_32(x, xi, y, yi) {\r\n        return vn(x, xi, y, yi, 32);\r\n    }\r\n    function core(out, inp, k, c, h) {\r\n        var w = new Uint32Array(16), x = new Uint32Array(16), y = new Uint32Array(16), t = new Uint32Array(4);\r\n        var i, j, m;\r\n        for(i = 0; i < 4; i++){\r\n            x[5 * i] = ld32(c, 4 * i);\r\n            x[1 + i] = ld32(k, 4 * i);\r\n            x[6 + i] = ld32(inp, 4 * i);\r\n            x[11 + i] = ld32(k, 16 + 4 * i);\r\n        }\r\n        for(i = 0; i < 16; i++)y[i] = x[i];\r\n        for(i = 0; i < 20; i++){\r\n            for(j = 0; j < 4; j++){\r\n                for(m = 0; m < 4; m++)t[m] = x[(5 * j + 4 * m) % 16];\r\n                t[1] ^= L32(t[0] + t[3] | 0, 7);\r\n                t[2] ^= L32(t[1] + t[0] | 0, 9);\r\n                t[3] ^= L32(t[2] + t[1] | 0, 13);\r\n                t[0] ^= L32(t[3] + t[2] | 0, 18);\r\n                for(m = 0; m < 4; m++)w[4 * j + (j + m) % 4] = t[m];\r\n            }\r\n            for(m = 0; m < 16; m++)x[m] = w[m];\r\n        }\r\n        if (h) {\r\n            for(i = 0; i < 16; i++)x[i] = x[i] + y[i] | 0;\r\n            for(i = 0; i < 4; i++){\r\n                x[5 * i] = x[5 * i] - ld32(c, 4 * i) | 0;\r\n                x[6 + i] = x[6 + i] - ld32(inp, 4 * i) | 0;\r\n            }\r\n            for(i = 0; i < 4; i++){\r\n                st32(out, 4 * i, x[5 * i]);\r\n                st32(out, 16 + 4 * i, x[6 + i]);\r\n            }\r\n        } else {\r\n            for(i = 0; i < 16; i++)st32(out, 4 * i, x[i] + y[i] | 0);\r\n        }\r\n    }\r\n    function crypto_core_salsa20(out, inp, k, c) {\r\n        core(out, inp, k, c, false);\r\n        return 0;\r\n    }\r\n    function crypto_core_hsalsa20(out, inp, k, c) {\r\n        core(out, inp, k, c, true);\r\n        return 0;\r\n    }\r\n    var sigma = new Uint8Array([\r\n        101,\r\n        120,\r\n        112,\r\n        97,\r\n        110,\r\n        100,\r\n        32,\r\n        51,\r\n        50,\r\n        45,\r\n        98,\r\n        121,\r\n        116,\r\n        101,\r\n        32,\r\n        107\r\n    ]);\r\n    function crypto_stream_salsa20_xor(c, cpos, m, mpos, b, n, k) {\r\n        var z = new Uint8Array(16), x = new Uint8Array(64);\r\n        var u, i;\r\n        if (!b) return 0;\r\n        for(i = 0; i < 16; i++)z[i] = 0;\r\n        for(i = 0; i < 8; i++)z[i] = n[i];\r\n        while(b >= 64){\r\n            crypto_core_salsa20(x, z, k, sigma);\r\n            for(i = 0; i < 64; i++)c[cpos + i] = (m ? m[mpos + i] : 0) ^ x[i];\r\n            u = 1;\r\n            for(i = 8; i < 16; i++){\r\n                u = u + (z[i] & 0xff) | 0;\r\n                z[i] = u & 0xff;\r\n                u >>>= 8;\r\n            }\r\n            b -= 64;\r\n            cpos += 64;\r\n            if (m) mpos += 64;\r\n        }\r\n        if (b > 0) {\r\n            crypto_core_salsa20(x, z, k, sigma);\r\n            for(i = 0; i < b; i++)c[cpos + i] = (m ? m[mpos + i] : 0) ^ x[i];\r\n        }\r\n        return 0;\r\n    }\r\n    function crypto_stream_salsa20(c, cpos, d, n, k) {\r\n        return crypto_stream_salsa20_xor(c, cpos, null, 0, d, n, k);\r\n    }\r\n    function crypto_stream(c, cpos, d, n, k) {\r\n        var s = new Uint8Array(32);\r\n        crypto_core_hsalsa20(s, n, k, sigma);\r\n        return crypto_stream_salsa20(c, cpos, d, n.subarray(16), s);\r\n    }\r\n    function crypto_stream_xor(c, cpos, m, mpos, d, n, k) {\r\n        var s = new Uint8Array(32);\r\n        crypto_core_hsalsa20(s, n, k, sigma);\r\n        return crypto_stream_salsa20_xor(c, cpos, m, mpos, d, n.subarray(16), s);\r\n    }\r\n    function add1305(h, c) {\r\n        var j, u = 0;\r\n        for(j = 0; j < 17; j++){\r\n            u = u + (h[j] + c[j] | 0) | 0;\r\n            h[j] = u & 255;\r\n            u >>>= 8;\r\n        }\r\n    }\r\n    var minusp = new Uint32Array([\r\n        5,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        252\r\n    ]);\r\n    function crypto_onetimeauth(out, outpos, m, mpos, n, k) {\r\n        var s, i, j, u;\r\n        var x = new Uint32Array(17), r = new Uint32Array(17), h = new Uint32Array(17), c = new Uint32Array(17), g = new Uint32Array(17);\r\n        for(j = 0; j < 17; j++)r[j] = h[j] = 0;\r\n        for(j = 0; j < 16; j++)r[j] = k[j];\r\n        r[3] &= 15;\r\n        r[4] &= 252;\r\n        r[7] &= 15;\r\n        r[8] &= 252;\r\n        r[11] &= 15;\r\n        r[12] &= 252;\r\n        r[15] &= 15;\r\n        while(n > 0){\r\n            for(j = 0; j < 17; j++)c[j] = 0;\r\n            for(j = 0; j < 16 && j < n; ++j)c[j] = m[mpos + j];\r\n            c[j] = 1;\r\n            mpos += j;\r\n            n -= j;\r\n            add1305(h, c);\r\n            for(i = 0; i < 17; i++){\r\n                x[i] = 0;\r\n                for(j = 0; j < 17; j++)x[i] = x[i] + h[j] * (j <= i ? r[i - j] : 320 * r[i + 17 - j] | 0) | 0 | 0;\r\n            }\r\n            for(i = 0; i < 17; i++)h[i] = x[i];\r\n            u = 0;\r\n            for(j = 0; j < 16; j++){\r\n                u = u + h[j] | 0;\r\n                h[j] = u & 255;\r\n                u >>>= 8;\r\n            }\r\n            u = u + h[16] | 0;\r\n            h[16] = u & 3;\r\n            u = 5 * (u >>> 2) | 0;\r\n            for(j = 0; j < 16; j++){\r\n                u = u + h[j] | 0;\r\n                h[j] = u & 255;\r\n                u >>>= 8;\r\n            }\r\n            u = u + h[16] | 0;\r\n            h[16] = u;\r\n        }\r\n        for(j = 0; j < 17; j++)g[j] = h[j];\r\n        add1305(h, minusp);\r\n        s = -(h[16] >>> 7) | 0;\r\n        for(j = 0; j < 17; j++)h[j] ^= s & (g[j] ^ h[j]);\r\n        for(j = 0; j < 16; j++)c[j] = k[j + 16];\r\n        c[16] = 0;\r\n        add1305(h, c);\r\n        for(j = 0; j < 16; j++)out[outpos + j] = h[j];\r\n        return 0;\r\n    }\r\n    function crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\r\n        var x = new Uint8Array(16);\r\n        crypto_onetimeauth(x, 0, m, mpos, n, k);\r\n        return crypto_verify_16(h, hpos, x, 0);\r\n    }\r\n    function crypto_secretbox(c, m, d, n, k) {\r\n        var i;\r\n        if (d < 32) return -1;\r\n        crypto_stream_xor(c, 0, m, 0, d, n, k);\r\n        crypto_onetimeauth(c, 16, c, 32, d - 32, c);\r\n        for(i = 0; i < 16; i++)c[i] = 0;\r\n        return 0;\r\n    }\r\n    function crypto_secretbox_open(m, c, d, n, k) {\r\n        var i;\r\n        var x = new Uint8Array(32);\r\n        if (d < 32) return -1;\r\n        crypto_stream(x, 0, 32, n, k);\r\n        if (crypto_onetimeauth_verify(c, 16, c, 32, d - 32, x) !== 0) return -1;\r\n        crypto_stream_xor(m, 0, c, 0, d, n, k);\r\n        for(i = 0; i < 32; i++)m[i] = 0;\r\n        return 0;\r\n    }\r\n    function set25519(r, a) {\r\n        var i;\r\n        for(i = 0; i < 16; i++)r[i] = a[i] | 0;\r\n    }\r\n    function car25519(o) {\r\n        var c;\r\n        var i;\r\n        for(i = 0; i < 16; i++){\r\n            o[i] += 65536;\r\n            c = Math.floor(o[i] / 65536);\r\n            o[(i + 1) * (i < 15 ? 1 : 0)] += c - 1 + 37 * (c - 1) * (i === 15 ? 1 : 0);\r\n            o[i] -= c * 65536;\r\n        }\r\n    }\r\n    function sel25519(p, q, b) {\r\n        var t, c = ~(b - 1);\r\n        for(var i = 0; i < 16; i++){\r\n            t = c & (p[i] ^ q[i]);\r\n            p[i] ^= t;\r\n            q[i] ^= t;\r\n        }\r\n    }\r\n    function pack25519(o, n) {\r\n        var i, j, b;\r\n        var m = gf(), t = gf();\r\n        for(i = 0; i < 16; i++)t[i] = n[i];\r\n        car25519(t);\r\n        car25519(t);\r\n        car25519(t);\r\n        for(j = 0; j < 2; j++){\r\n            m[0] = t[0] - 0xffed;\r\n            for(i = 1; i < 15; i++){\r\n                m[i] = t[i] - 0xffff - (m[i - 1] >> 16 & 1);\r\n                m[i - 1] &= 0xffff;\r\n            }\r\n            m[15] = t[15] - 0x7fff - (m[14] >> 16 & 1);\r\n            b = m[15] >> 16 & 1;\r\n            m[14] &= 0xffff;\r\n            sel25519(t, m, 1 - b);\r\n        }\r\n        for(i = 0; i < 16; i++){\r\n            o[2 * i] = t[i] & 0xff;\r\n            o[2 * i + 1] = t[i] >> 8;\r\n        }\r\n    }\r\n    function neq25519(a, b) {\r\n        var c = new Uint8Array(32), d = new Uint8Array(32);\r\n        pack25519(c, a);\r\n        pack25519(d, b);\r\n        return crypto_verify_32(c, 0, d, 0);\r\n    }\r\n    function par25519(a) {\r\n        var d = new Uint8Array(32);\r\n        pack25519(d, a);\r\n        return d[0] & 1;\r\n    }\r\n    function unpack25519(o, n) {\r\n        var i;\r\n        for(i = 0; i < 16; i++)o[i] = n[2 * i] + (n[2 * i + 1] << 8);\r\n        o[15] &= 0x7fff;\r\n    }\r\n    function A(o, a, b) {\r\n        var i;\r\n        for(i = 0; i < 16; i++)o[i] = a[i] + b[i] | 0;\r\n    }\r\n    function Z(o, a, b) {\r\n        var i;\r\n        for(i = 0; i < 16; i++)o[i] = a[i] - b[i] | 0;\r\n    }\r\n    function M(o, a, b) {\r\n        var i, j, t = new Float64Array(31);\r\n        for(i = 0; i < 31; i++)t[i] = 0;\r\n        for(i = 0; i < 16; i++){\r\n            for(j = 0; j < 16; j++){\r\n                t[i + j] += a[i] * b[j];\r\n            }\r\n        }\r\n        for(i = 0; i < 15; i++){\r\n            t[i] += 38 * t[i + 16];\r\n        }\r\n        for(i = 0; i < 16; i++)o[i] = t[i];\r\n        car25519(o);\r\n        car25519(o);\r\n    }\r\n    function S(o, a) {\r\n        M(o, a, a);\r\n    }\r\n    function inv25519(o, i) {\r\n        var c = gf();\r\n        var a;\r\n        for(a = 0; a < 16; a++)c[a] = i[a];\r\n        for(a = 253; a >= 0; a--){\r\n            S(c, c);\r\n            if (a !== 2 && a !== 4) M(c, c, i);\r\n        }\r\n        for(a = 0; a < 16; a++)o[a] = c[a];\r\n    }\r\n    function pow2523(o, i) {\r\n        var c = gf();\r\n        var a;\r\n        for(a = 0; a < 16; a++)c[a] = i[a];\r\n        for(a = 250; a >= 0; a--){\r\n            S(c, c);\r\n            if (a !== 1) M(c, c, i);\r\n        }\r\n        for(a = 0; a < 16; a++)o[a] = c[a];\r\n    }\r\n    function crypto_scalarmult(q, n, p) {\r\n        var z = new Uint8Array(32);\r\n        var x = new Float64Array(80), r, i;\r\n        var a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf();\r\n        for(i = 0; i < 31; i++)z[i] = n[i];\r\n        z[31] = n[31] & 127 | 64;\r\n        z[0] &= 248;\r\n        unpack25519(x, p);\r\n        for(i = 0; i < 16; i++){\r\n            b[i] = x[i];\r\n            d[i] = a[i] = c[i] = 0;\r\n        }\r\n        a[0] = d[0] = 1;\r\n        for(i = 254; i >= 0; --i){\r\n            r = z[i >>> 3] >>> (i & 7) & 1;\r\n            sel25519(a, b, r);\r\n            sel25519(c, d, r);\r\n            A(e, a, c);\r\n            Z(a, a, c);\r\n            A(c, b, d);\r\n            Z(b, b, d);\r\n            S(d, e);\r\n            S(f, a);\r\n            M(a, c, a);\r\n            M(c, b, e);\r\n            A(e, a, c);\r\n            Z(a, a, c);\r\n            S(b, a);\r\n            Z(c, d, f);\r\n            M(a, c, _121665);\r\n            A(a, a, d);\r\n            M(c, c, a);\r\n            M(a, d, f);\r\n            M(d, b, x);\r\n            S(b, e);\r\n            sel25519(a, b, r);\r\n            sel25519(c, d, r);\r\n        }\r\n        for(i = 0; i < 16; i++){\r\n            x[i + 16] = a[i];\r\n            x[i + 32] = c[i];\r\n            x[i + 48] = b[i];\r\n            x[i + 64] = d[i];\r\n        }\r\n        var x32 = x.subarray(32);\r\n        var x16 = x.subarray(16);\r\n        inv25519(x32, x32);\r\n        M(x16, x16, x32);\r\n        pack25519(q, x16);\r\n        return 0;\r\n    }\r\n    function crypto_scalarmult_base(q, n) {\r\n        return crypto_scalarmult(q, n, _9);\r\n    }\r\n    function crypto_box_keypair(y, x) {\r\n        randombytes(x, 32);\r\n        return crypto_scalarmult_base(y, x);\r\n    }\r\n    function crypto_box_beforenm(k, y, x) {\r\n        var s = new Uint8Array(32);\r\n        crypto_scalarmult(s, x, y);\r\n        return crypto_core_hsalsa20(k, _0, s, sigma);\r\n    }\r\n    var crypto_box_afternm = crypto_secretbox;\r\n    var crypto_box_open_afternm = crypto_secretbox_open;\r\n    function crypto_box(c, m, d, n, y, x) {\r\n        var k = new Uint8Array(32);\r\n        crypto_box_beforenm(k, y, x);\r\n        return crypto_box_afternm(c, m, d, n, k);\r\n    }\r\n    function crypto_box_open(m, c, d, n, y, x) {\r\n        var k = new Uint8Array(32);\r\n        crypto_box_beforenm(k, y, x);\r\n        return crypto_box_open_afternm(m, c, d, n, k);\r\n    }\r\n    function add64() {\r\n        var a = 0, b = 0, c = 0, d = 0, m16 = 65535, l, h, i;\r\n        for(i = 0; i < arguments.length; i++){\r\n            l = arguments[i].lo;\r\n            h = arguments[i].hi;\r\n            a += l & m16;\r\n            b += l >>> 16;\r\n            c += h & m16;\r\n            d += h >>> 16;\r\n        }\r\n        b += a >>> 16;\r\n        c += b >>> 16;\r\n        d += c >>> 16;\r\n        return new u64(c & m16 | d << 16, a & m16 | b << 16);\r\n    }\r\n    function shr64(x, c) {\r\n        return new u64(x.hi >>> c, x.lo >>> c | x.hi << 32 - c);\r\n    }\r\n    function xor64() {\r\n        var l = 0, h = 0, i;\r\n        for(i = 0; i < arguments.length; i++){\r\n            l ^= arguments[i].lo;\r\n            h ^= arguments[i].hi;\r\n        }\r\n        return new u64(h, l);\r\n    }\r\n    function R(x, c) {\r\n        var h, l, c1 = 32 - c;\r\n        if (c < 32) {\r\n            h = x.hi >>> c | x.lo << c1;\r\n            l = x.lo >>> c | x.hi << c1;\r\n        } else if (c < 64) {\r\n            h = x.lo >>> c | x.hi << c1;\r\n            l = x.hi >>> c | x.lo << c1;\r\n        }\r\n        return new u64(h, l);\r\n    }\r\n    function Ch(x, y, z) {\r\n        var h = x.hi & y.hi ^ ~x.hi & z.hi, l = x.lo & y.lo ^ ~x.lo & z.lo;\r\n        return new u64(h, l);\r\n    }\r\n    function Maj(x, y, z) {\r\n        var h = x.hi & y.hi ^ x.hi & z.hi ^ y.hi & z.hi, l = x.lo & y.lo ^ x.lo & z.lo ^ y.lo & z.lo;\r\n        return new u64(h, l);\r\n    }\r\n    function Sigma0(x) {\r\n        return xor64(R(x, 28), R(x, 34), R(x, 39));\r\n    }\r\n    function Sigma1(x) {\r\n        return xor64(R(x, 14), R(x, 18), R(x, 41));\r\n    }\r\n    function sigma0(x) {\r\n        return xor64(R(x, 1), R(x, 8), shr64(x, 7));\r\n    }\r\n    function sigma1(x) {\r\n        return xor64(R(x, 19), R(x, 61), shr64(x, 6));\r\n    }\r\n    var K = [\r\n        new u64(0x428a2f98, 0xd728ae22),\r\n        new u64(0x71374491, 0x23ef65cd),\r\n        new u64(0xb5c0fbcf, 0xec4d3b2f),\r\n        new u64(0xe9b5dba5, 0x8189dbbc),\r\n        new u64(0x3956c25b, 0xf348b538),\r\n        new u64(0x59f111f1, 0xb605d019),\r\n        new u64(0x923f82a4, 0xaf194f9b),\r\n        new u64(0xab1c5ed5, 0xda6d8118),\r\n        new u64(0xd807aa98, 0xa3030242),\r\n        new u64(0x12835b01, 0x45706fbe),\r\n        new u64(0x243185be, 0x4ee4b28c),\r\n        new u64(0x550c7dc3, 0xd5ffb4e2),\r\n        new u64(0x72be5d74, 0xf27b896f),\r\n        new u64(0x80deb1fe, 0x3b1696b1),\r\n        new u64(0x9bdc06a7, 0x25c71235),\r\n        new u64(0xc19bf174, 0xcf692694),\r\n        new u64(0xe49b69c1, 0x9ef14ad2),\r\n        new u64(0xefbe4786, 0x384f25e3),\r\n        new u64(0x0fc19dc6, 0x8b8cd5b5),\r\n        new u64(0x240ca1cc, 0x77ac9c65),\r\n        new u64(0x2de92c6f, 0x592b0275),\r\n        new u64(0x4a7484aa, 0x6ea6e483),\r\n        new u64(0x5cb0a9dc, 0xbd41fbd4),\r\n        new u64(0x76f988da, 0x831153b5),\r\n        new u64(0x983e5152, 0xee66dfab),\r\n        new u64(0xa831c66d, 0x2db43210),\r\n        new u64(0xb00327c8, 0x98fb213f),\r\n        new u64(0xbf597fc7, 0xbeef0ee4),\r\n        new u64(0xc6e00bf3, 0x3da88fc2),\r\n        new u64(0xd5a79147, 0x930aa725),\r\n        new u64(0x06ca6351, 0xe003826f),\r\n        new u64(0x14292967, 0x0a0e6e70),\r\n        new u64(0x27b70a85, 0x46d22ffc),\r\n        new u64(0x2e1b2138, 0x5c26c926),\r\n        new u64(0x4d2c6dfc, 0x5ac42aed),\r\n        new u64(0x53380d13, 0x9d95b3df),\r\n        new u64(0x650a7354, 0x8baf63de),\r\n        new u64(0x766a0abb, 0x3c77b2a8),\r\n        new u64(0x81c2c92e, 0x47edaee6),\r\n        new u64(0x92722c85, 0x1482353b),\r\n        new u64(0xa2bfe8a1, 0x4cf10364),\r\n        new u64(0xa81a664b, 0xbc423001),\r\n        new u64(0xc24b8b70, 0xd0f89791),\r\n        new u64(0xc76c51a3, 0x0654be30),\r\n        new u64(0xd192e819, 0xd6ef5218),\r\n        new u64(0xd6990624, 0x5565a910),\r\n        new u64(0xf40e3585, 0x5771202a),\r\n        new u64(0x106aa070, 0x32bbd1b8),\r\n        new u64(0x19a4c116, 0xb8d2d0c8),\r\n        new u64(0x1e376c08, 0x5141ab53),\r\n        new u64(0x2748774c, 0xdf8eeb99),\r\n        new u64(0x34b0bcb5, 0xe19b48a8),\r\n        new u64(0x391c0cb3, 0xc5c95a63),\r\n        new u64(0x4ed8aa4a, 0xe3418acb),\r\n        new u64(0x5b9cca4f, 0x7763e373),\r\n        new u64(0x682e6ff3, 0xd6b2b8a3),\r\n        new u64(0x748f82ee, 0x5defb2fc),\r\n        new u64(0x78a5636f, 0x43172f60),\r\n        new u64(0x84c87814, 0xa1f0ab72),\r\n        new u64(0x8cc70208, 0x1a6439ec),\r\n        new u64(0x90befffa, 0x23631e28),\r\n        new u64(0xa4506ceb, 0xde82bde9),\r\n        new u64(0xbef9a3f7, 0xb2c67915),\r\n        new u64(0xc67178f2, 0xe372532b),\r\n        new u64(0xca273ece, 0xea26619c),\r\n        new u64(0xd186b8c7, 0x21c0c207),\r\n        new u64(0xeada7dd6, 0xcde0eb1e),\r\n        new u64(0xf57d4f7f, 0xee6ed178),\r\n        new u64(0x06f067aa, 0x72176fba),\r\n        new u64(0x0a637dc5, 0xa2c898a6),\r\n        new u64(0x113f9804, 0xbef90dae),\r\n        new u64(0x1b710b35, 0x131c471b),\r\n        new u64(0x28db77f5, 0x23047d84),\r\n        new u64(0x32caab7b, 0x40c72493),\r\n        new u64(0x3c9ebe0a, 0x15c9bebc),\r\n        new u64(0x431d67c4, 0x9c100d4c),\r\n        new u64(0x4cc5d4be, 0xcb3e42b6),\r\n        new u64(0x597f299c, 0xfc657e2a),\r\n        new u64(0x5fcb6fab, 0x3ad6faec),\r\n        new u64(0x6c44198c, 0x4a475817)\r\n    ];\r\n    function crypto_hashblocks(x, m, n) {\r\n        var z = [], b = [], a = [], w = [], t, i, j;\r\n        for(i = 0; i < 8; i++)z[i] = a[i] = dl64(x, 8 * i);\r\n        var pos = 0;\r\n        while(n >= 128){\r\n            for(i = 0; i < 16; i++)w[i] = dl64(m, 8 * i + pos);\r\n            for(i = 0; i < 80; i++){\r\n                for(j = 0; j < 8; j++)b[j] = a[j];\r\n                t = add64(a[7], Sigma1(a[4]), Ch(a[4], a[5], a[6]), K[i], w[i % 16]);\r\n                b[7] = add64(t, Sigma0(a[0]), Maj(a[0], a[1], a[2]));\r\n                b[3] = add64(b[3], t);\r\n                for(j = 0; j < 8; j++)a[(j + 1) % 8] = b[j];\r\n                if (i % 16 === 15) {\r\n                    for(j = 0; j < 16; j++){\r\n                        w[j] = add64(w[j], w[(j + 9) % 16], sigma0(w[(j + 1) % 16]), sigma1(w[(j + 14) % 16]));\r\n                    }\r\n                }\r\n            }\r\n            for(i = 0; i < 8; i++){\r\n                a[i] = add64(a[i], z[i]);\r\n                z[i] = a[i];\r\n            }\r\n            pos += 128;\r\n            n -= 128;\r\n        }\r\n        for(i = 0; i < 8; i++)ts64(x, 8 * i, z[i]);\r\n        return n;\r\n    }\r\n    var iv = new Uint8Array([\r\n        0x6a,\r\n        0x09,\r\n        0xe6,\r\n        0x67,\r\n        0xf3,\r\n        0xbc,\r\n        0xc9,\r\n        0x08,\r\n        0xbb,\r\n        0x67,\r\n        0xae,\r\n        0x85,\r\n        0x84,\r\n        0xca,\r\n        0xa7,\r\n        0x3b,\r\n        0x3c,\r\n        0x6e,\r\n        0xf3,\r\n        0x72,\r\n        0xfe,\r\n        0x94,\r\n        0xf8,\r\n        0x2b,\r\n        0xa5,\r\n        0x4f,\r\n        0xf5,\r\n        0x3a,\r\n        0x5f,\r\n        0x1d,\r\n        0x36,\r\n        0xf1,\r\n        0x51,\r\n        0x0e,\r\n        0x52,\r\n        0x7f,\r\n        0xad,\r\n        0xe6,\r\n        0x82,\r\n        0xd1,\r\n        0x9b,\r\n        0x05,\r\n        0x68,\r\n        0x8c,\r\n        0x2b,\r\n        0x3e,\r\n        0x6c,\r\n        0x1f,\r\n        0x1f,\r\n        0x83,\r\n        0xd9,\r\n        0xab,\r\n        0xfb,\r\n        0x41,\r\n        0xbd,\r\n        0x6b,\r\n        0x5b,\r\n        0xe0,\r\n        0xcd,\r\n        0x19,\r\n        0x13,\r\n        0x7e,\r\n        0x21,\r\n        0x79\r\n    ]);\r\n    function crypto_hash(out, m, n) {\r\n        var h = new Uint8Array(64), x = new Uint8Array(256);\r\n        var i, b = n;\r\n        for(i = 0; i < 64; i++)h[i] = iv[i];\r\n        crypto_hashblocks(h, m, n);\r\n        n %= 128;\r\n        for(i = 0; i < 256; i++)x[i] = 0;\r\n        for(i = 0; i < n; i++)x[i] = m[b - n + i];\r\n        x[n] = 128;\r\n        n = 256 - 128 * (n < 112 ? 1 : 0);\r\n        x[n - 9] = 0;\r\n        ts64(x, n - 8, new u64(b / 0x20000000 | 0, b << 3));\r\n        crypto_hashblocks(h, x, n);\r\n        for(i = 0; i < 64; i++)out[i] = h[i];\r\n        return 0;\r\n    }\r\n    function add(p, q) {\r\n        var a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf(), g = gf(), h = gf(), t = gf();\r\n        Z(a, p[1], p[0]);\r\n        Z(t, q[1], q[0]);\r\n        M(a, a, t);\r\n        A(b, p[0], p[1]);\r\n        A(t, q[0], q[1]);\r\n        M(b, b, t);\r\n        M(c, p[3], q[3]);\r\n        M(c, c, D2);\r\n        M(d, p[2], q[2]);\r\n        A(d, d, d);\r\n        Z(e, b, a);\r\n        Z(f, d, c);\r\n        A(g, d, c);\r\n        A(h, b, a);\r\n        M(p[0], e, f);\r\n        M(p[1], h, g);\r\n        M(p[2], g, f);\r\n        M(p[3], e, h);\r\n    }\r\n    function cswap(p, q, b) {\r\n        var i;\r\n        for(i = 0; i < 4; i++){\r\n            sel25519(p[i], q[i], b);\r\n        }\r\n    }\r\n    function pack(r, p) {\r\n        var tx = gf(), ty = gf(), zi = gf();\r\n        inv25519(zi, p[2]);\r\n        M(tx, p[0], zi);\r\n        M(ty, p[1], zi);\r\n        pack25519(r, ty);\r\n        r[31] ^= par25519(tx) << 7;\r\n    }\r\n    function scalarmult(p, q, s) {\r\n        var b, i;\r\n        set25519(p[0], gf0);\r\n        set25519(p[1], gf1);\r\n        set25519(p[2], gf1);\r\n        set25519(p[3], gf0);\r\n        for(i = 255; i >= 0; --i){\r\n            b = s[i / 8 | 0] >> (i & 7) & 1;\r\n            cswap(p, q, b);\r\n            add(q, p);\r\n            add(p, p);\r\n            cswap(p, q, b);\r\n        }\r\n    }\r\n    function scalarbase(p, s) {\r\n        var q = [\r\n            gf(),\r\n            gf(),\r\n            gf(),\r\n            gf()\r\n        ];\r\n        set25519(q[0], X);\r\n        set25519(q[1], Y);\r\n        set25519(q[2], gf1);\r\n        M(q[3], X, Y);\r\n        scalarmult(p, q, s);\r\n    }\r\n    function crypto_sign_keypair(pk, sk, seeded) {\r\n        var d = new Uint8Array(64);\r\n        var p = [\r\n            gf(),\r\n            gf(),\r\n            gf(),\r\n            gf()\r\n        ];\r\n        var i;\r\n        if (!seeded) randombytes(sk, 32);\r\n        crypto_hash(d, sk, 32);\r\n        d[0] &= 248;\r\n        d[31] &= 127;\r\n        d[31] |= 64;\r\n        scalarbase(p, d);\r\n        pack(pk, p);\r\n        for(i = 0; i < 32; i++)sk[i + 32] = pk[i];\r\n        return 0;\r\n    }\r\n    var L = new Float64Array([\r\n        0xed,\r\n        0xd3,\r\n        0xf5,\r\n        0x5c,\r\n        0x1a,\r\n        0x63,\r\n        0x12,\r\n        0x58,\r\n        0xd6,\r\n        0x9c,\r\n        0xf7,\r\n        0xa2,\r\n        0xde,\r\n        0xf9,\r\n        0xde,\r\n        0x14,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0,\r\n        0x10\r\n    ]);\r\n    function modL(r, x) {\r\n        var carry, i, j, k;\r\n        for(i = 63; i >= 32; --i){\r\n            carry = 0;\r\n            for(j = i - 32, k = i - 12; j < k; ++j){\r\n                x[j] += carry - 16 * x[i] * L[j - (i - 32)];\r\n                carry = Math.floor((x[j] + 128) / 256);\r\n                x[j] -= carry * 256;\r\n            }\r\n            x[j] += carry;\r\n            x[i] = 0;\r\n        }\r\n        carry = 0;\r\n        for(j = 0; j < 32; j++){\r\n            x[j] += carry - (x[31] >> 4) * L[j];\r\n            carry = x[j] >> 8;\r\n            x[j] &= 255;\r\n        }\r\n        for(j = 0; j < 32; j++)x[j] -= carry * L[j];\r\n        for(i = 0; i < 32; i++){\r\n            x[i + 1] += x[i] >> 8;\r\n            r[i] = x[i] & 255;\r\n        }\r\n    }\r\n    function reduce(r) {\r\n        var x = new Float64Array(64), i;\r\n        for(i = 0; i < 64; i++)x[i] = r[i];\r\n        for(i = 0; i < 64; i++)r[i] = 0;\r\n        modL(r, x);\r\n    }\r\n    function crypto_sign(sm, m, n, sk) {\r\n        var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\r\n        var i, j, x = new Float64Array(64);\r\n        var p = [\r\n            gf(),\r\n            gf(),\r\n            gf(),\r\n            gf()\r\n        ];\r\n        crypto_hash(d, sk, 32);\r\n        d[0] &= 248;\r\n        d[31] &= 127;\r\n        d[31] |= 64;\r\n        var smlen = n + 64;\r\n        for(i = 0; i < n; i++)sm[64 + i] = m[i];\r\n        for(i = 0; i < 32; i++)sm[32 + i] = d[32 + i];\r\n        crypto_hash(r, sm.subarray(32), n + 32);\r\n        reduce(r);\r\n        scalarbase(p, r);\r\n        pack(sm, p);\r\n        for(i = 32; i < 64; i++)sm[i] = sk[i];\r\n        crypto_hash(h, sm, n + 64);\r\n        reduce(h);\r\n        for(i = 0; i < 64; i++)x[i] = 0;\r\n        for(i = 0; i < 32; i++)x[i] = r[i];\r\n        for(i = 0; i < 32; i++){\r\n            for(j = 0; j < 32; j++){\r\n                x[i + j] += h[i] * d[j];\r\n            }\r\n        }\r\n        modL(sm.subarray(32), x);\r\n        return smlen;\r\n    }\r\n    function unpackneg(r, p) {\r\n        var t = gf(), chk = gf(), num = gf(), den = gf(), den2 = gf(), den4 = gf(), den6 = gf();\r\n        set25519(r[2], gf1);\r\n        unpack25519(r[1], p);\r\n        S(num, r[1]);\r\n        M(den, num, D);\r\n        Z(num, num, r[2]);\r\n        A(den, r[2], den);\r\n        S(den2, den);\r\n        S(den4, den2);\r\n        M(den6, den4, den2);\r\n        M(t, den6, num);\r\n        M(t, t, den);\r\n        pow2523(t, t);\r\n        M(t, t, num);\r\n        M(t, t, den);\r\n        M(t, t, den);\r\n        M(r[0], t, den);\r\n        S(chk, r[0]);\r\n        M(chk, chk, den);\r\n        if (neq25519(chk, num)) M(r[0], r[0], I);\r\n        S(chk, r[0]);\r\n        M(chk, chk, den);\r\n        if (neq25519(chk, num)) return -1;\r\n        if (par25519(r[0]) === p[31] >> 7) Z(r[0], gf0, r[0]);\r\n        M(r[3], r[0], r[1]);\r\n        return 0;\r\n    }\r\n    function crypto_sign_open(m, sm, n, pk) {\r\n        var i;\r\n        var t = new Uint8Array(32), h = new Uint8Array(64);\r\n        var p = [\r\n            gf(),\r\n            gf(),\r\n            gf(),\r\n            gf()\r\n        ], q = [\r\n            gf(),\r\n            gf(),\r\n            gf(),\r\n            gf()\r\n        ];\r\n        if (n < 64) return -1;\r\n        if (unpackneg(q, pk)) return -1;\r\n        for(i = 0; i < n; i++)m[i] = sm[i];\r\n        for(i = 0; i < 32; i++)m[i + 32] = pk[i];\r\n        crypto_hash(h, m, n);\r\n        reduce(h);\r\n        scalarmult(p, q, h);\r\n        scalarbase(q, sm.subarray(32));\r\n        add(p, q);\r\n        pack(t, p);\r\n        n -= 64;\r\n        if (crypto_verify_32(sm, 0, t, 0)) {\r\n            for(i = 0; i < n; i++)m[i] = 0;\r\n            return -1;\r\n        }\r\n        for(i = 0; i < n; i++)m[i] = sm[i + 64];\r\n        return n;\r\n    }\r\n    var crypto_secretbox_KEYBYTES = 32, crypto_secretbox_NONCEBYTES = 24, crypto_secretbox_ZEROBYTES = 32, crypto_secretbox_BOXZEROBYTES = 16, crypto_scalarmult_BYTES = 32, crypto_scalarmult_SCALARBYTES = 32, crypto_box_PUBLICKEYBYTES = 32, crypto_box_SECRETKEYBYTES = 32, crypto_box_BEFORENMBYTES = 32, crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES, crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES, crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES, crypto_sign_BYTES = 64, crypto_sign_PUBLICKEYBYTES = 32, crypto_sign_SECRETKEYBYTES = 64, crypto_sign_SEEDBYTES = 32, crypto_hash_BYTES = 64;\r\n    nacl.lowlevel = {\r\n        crypto_core_hsalsa20: crypto_core_hsalsa20,\r\n        crypto_stream_xor: crypto_stream_xor,\r\n        crypto_stream: crypto_stream,\r\n        crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\r\n        crypto_stream_salsa20: crypto_stream_salsa20,\r\n        crypto_onetimeauth: crypto_onetimeauth,\r\n        crypto_onetimeauth_verify: crypto_onetimeauth_verify,\r\n        crypto_verify_16: crypto_verify_16,\r\n        crypto_verify_32: crypto_verify_32,\r\n        crypto_secretbox: crypto_secretbox,\r\n        crypto_secretbox_open: crypto_secretbox_open,\r\n        crypto_scalarmult: crypto_scalarmult,\r\n        crypto_scalarmult_base: crypto_scalarmult_base,\r\n        crypto_box_beforenm: crypto_box_beforenm,\r\n        crypto_box_afternm: crypto_box_afternm,\r\n        crypto_box: crypto_box,\r\n        crypto_box_open: crypto_box_open,\r\n        crypto_box_keypair: crypto_box_keypair,\r\n        crypto_hash: crypto_hash,\r\n        crypto_sign: crypto_sign,\r\n        crypto_sign_keypair: crypto_sign_keypair,\r\n        crypto_sign_open: crypto_sign_open,\r\n        crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\r\n        crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\r\n        crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\r\n        crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\r\n        crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\r\n        crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\r\n        crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\r\n        crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\r\n        crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\r\n        crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\r\n        crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\r\n        crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\r\n        crypto_sign_BYTES: crypto_sign_BYTES,\r\n        crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\r\n        crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\r\n        crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\r\n        crypto_hash_BYTES: crypto_hash_BYTES,\r\n        gf: gf,\r\n        D: D,\r\n        L: L,\r\n        pack25519: pack25519,\r\n        unpack25519: unpack25519,\r\n        M: M,\r\n        A: A,\r\n        S: S,\r\n        Z: Z,\r\n        pow2523: pow2523,\r\n        add: add,\r\n        set25519: set25519,\r\n        modL: modL,\r\n        scalarmult: scalarmult,\r\n        scalarbase: scalarbase\r\n    };\r\n    function checkLengths(k, n) {\r\n        if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\r\n        if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\r\n    }\r\n    function checkBoxLengths(pk, sk) {\r\n        if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\r\n        if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\r\n    }\r\n    function checkArrayTypes() {\r\n        for(var i = 0; i < arguments.length; i++){\r\n            if (!(arguments[i] instanceof Uint8Array)) throw new TypeError('unexpected type, use Uint8Array');\r\n        }\r\n    }\r\n    function cleanup(arr) {\r\n        for(var i = 0; i < arr.length; i++)arr[i] = 0;\r\n    }\r\n    nacl.randomBytes = function(n) {\r\n        var b = new Uint8Array(n);\r\n        randombytes(b, n);\r\n        return b;\r\n    };\r\n    nacl.secretbox = function(msg, nonce, key) {\r\n        checkArrayTypes(msg, nonce, key);\r\n        checkLengths(key, nonce);\r\n        var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\r\n        var c = new Uint8Array(m.length);\r\n        for(var i = 0; i < msg.length; i++)m[i + crypto_secretbox_ZEROBYTES] = msg[i];\r\n        crypto_secretbox(c, m, m.length, nonce, key);\r\n        return c.subarray(crypto_secretbox_BOXZEROBYTES);\r\n    };\r\n    nacl.secretbox.open = function(box, nonce, key) {\r\n        checkArrayTypes(box, nonce, key);\r\n        checkLengths(key, nonce);\r\n        var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\r\n        var m = new Uint8Array(c.length);\r\n        for(var i = 0; i < box.length; i++)c[i + crypto_secretbox_BOXZEROBYTES] = box[i];\r\n        if (c.length < 32) return null;\r\n        if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\r\n        return m.subarray(crypto_secretbox_ZEROBYTES);\r\n    };\r\n    nacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\r\n    nacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\r\n    nacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\r\n    nacl.scalarMult = function(n, p) {\r\n        checkArrayTypes(n, p);\r\n        if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\r\n        if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\r\n        var q = new Uint8Array(crypto_scalarmult_BYTES);\r\n        crypto_scalarmult(q, n, p);\r\n        return q;\r\n    };\r\n    nacl.scalarMult.base = function(n) {\r\n        checkArrayTypes(n);\r\n        if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\r\n        var q = new Uint8Array(crypto_scalarmult_BYTES);\r\n        crypto_scalarmult_base(q, n);\r\n        return q;\r\n    };\r\n    nacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\r\n    nacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\r\n    nacl.box = function(msg, nonce, publicKey, secretKey) {\r\n        var k = nacl.box.before(publicKey, secretKey);\r\n        return nacl.secretbox(msg, nonce, k);\r\n    };\r\n    nacl.box.before = function(publicKey, secretKey) {\r\n        checkArrayTypes(publicKey, secretKey);\r\n        checkBoxLengths(publicKey, secretKey);\r\n        var k = new Uint8Array(crypto_box_BEFORENMBYTES);\r\n        crypto_box_beforenm(k, publicKey, secretKey);\r\n        return k;\r\n    };\r\n    nacl.box.after = nacl.secretbox;\r\n    nacl.box.open = function(msg, nonce, publicKey, secretKey) {\r\n        var k = nacl.box.before(publicKey, secretKey);\r\n        return nacl.secretbox.open(msg, nonce, k);\r\n    };\r\n    nacl.box.open.after = nacl.secretbox.open;\r\n    nacl.box.keyPair = function() {\r\n        var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\r\n        var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\r\n        crypto_box_keypair(pk, sk);\r\n        return {\r\n            publicKey: pk,\r\n            secretKey: sk\r\n        };\r\n    };\r\n    nacl.box.keyPair.fromSecretKey = function(secretKey) {\r\n        checkArrayTypes(secretKey);\r\n        if (secretKey.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\r\n        var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\r\n        crypto_scalarmult_base(pk, secretKey);\r\n        return {\r\n            publicKey: pk,\r\n            secretKey: new Uint8Array(secretKey)\r\n        };\r\n    };\r\n    nacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\r\n    nacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\r\n    nacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\r\n    nacl.box.nonceLength = crypto_box_NONCEBYTES;\r\n    nacl.box.overheadLength = nacl.secretbox.overheadLength;\r\n    nacl.sign = function(msg, secretKey) {\r\n        checkArrayTypes(msg, secretKey);\r\n        if (secretKey.length !== crypto_sign_SECRETKEYBYTES) throw new Error('bad secret key size');\r\n        var signedMsg = new Uint8Array(crypto_sign_BYTES + msg.length);\r\n        crypto_sign(signedMsg, msg, msg.length, secretKey);\r\n        return signedMsg;\r\n    };\r\n    nacl.sign.open = function(signedMsg, publicKey) {\r\n        checkArrayTypes(signedMsg, publicKey);\r\n        if (publicKey.length !== crypto_sign_PUBLICKEYBYTES) throw new Error('bad public key size');\r\n        var tmp = new Uint8Array(signedMsg.length);\r\n        var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\r\n        if (mlen < 0) return null;\r\n        var m = new Uint8Array(mlen);\r\n        for(var i = 0; i < m.length; i++)m[i] = tmp[i];\r\n        return m;\r\n    };\r\n    nacl.sign.detached = function(msg, secretKey) {\r\n        var signedMsg = nacl.sign(msg, secretKey);\r\n        var sig = new Uint8Array(crypto_sign_BYTES);\r\n        for(var i = 0; i < sig.length; i++)sig[i] = signedMsg[i];\r\n        return sig;\r\n    };\r\n    nacl.sign.detached.verify = function(msg, sig, publicKey) {\r\n        checkArrayTypes(msg, sig, publicKey);\r\n        if (sig.length !== crypto_sign_BYTES) throw new Error('bad signature size');\r\n        if (publicKey.length !== crypto_sign_PUBLICKEYBYTES) throw new Error('bad public key size');\r\n        var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\r\n        var m = new Uint8Array(crypto_sign_BYTES + msg.length);\r\n        var i;\r\n        for(i = 0; i < crypto_sign_BYTES; i++)sm[i] = sig[i];\r\n        for(i = 0; i < msg.length; i++)sm[i + crypto_sign_BYTES] = msg[i];\r\n        return crypto_sign_open(m, sm, sm.length, publicKey) >= 0;\r\n    };\r\n    nacl.sign.keyPair = function() {\r\n        var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\r\n        var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\r\n        crypto_sign_keypair(pk, sk);\r\n        return {\r\n            publicKey: pk,\r\n            secretKey: sk\r\n        };\r\n    };\r\n    nacl.sign.keyPair.fromSecretKey = function(secretKey) {\r\n        checkArrayTypes(secretKey);\r\n        if (secretKey.length !== crypto_sign_SECRETKEYBYTES) throw new Error('bad secret key size');\r\n        var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\r\n        for(var i = 0; i < pk.length; i++)pk[i] = secretKey[32 + i];\r\n        return {\r\n            publicKey: pk,\r\n            secretKey: new Uint8Array(secretKey)\r\n        };\r\n    };\r\n    nacl.sign.keyPair.fromSeed = function(seed) {\r\n        checkArrayTypes(seed);\r\n        if (seed.length !== crypto_sign_SEEDBYTES) throw new Error('bad seed size');\r\n        var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\r\n        var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\r\n        for(var i = 0; i < 32; i++)sk[i] = seed[i];\r\n        crypto_sign_keypair(pk, sk, true);\r\n        return {\r\n            publicKey: pk,\r\n            secretKey: sk\r\n        };\r\n    };\r\n    nacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\r\n    nacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\r\n    nacl.sign.seedLength = crypto_sign_SEEDBYTES;\r\n    nacl.sign.signatureLength = crypto_sign_BYTES;\r\n    nacl.hash = function(msg) {\r\n        checkArrayTypes(msg);\r\n        var h = new Uint8Array(crypto_hash_BYTES);\r\n        crypto_hash(h, msg, msg.length);\r\n        return h;\r\n    };\r\n    nacl.hash.hashLength = crypto_hash_BYTES;\r\n    nacl.verify = function(x, y) {\r\n        checkArrayTypes(x, y);\r\n        if (x.length === 0 || y.length === 0) return false;\r\n        if (x.length !== y.length) return false;\r\n        return vn(x, 0, y, 0, x.length) === 0 ? true : false;\r\n    };\r\n    nacl.setPRNG = function(fn) {\r\n        randombytes = fn;\r\n    };\r\n    (function() {\r\n        var crypto1 = typeof globalThis !== 'undefined' ? globalThis.crypto || globalThis.msCrypto : null;\r\n        if (crypto1 && crypto1.getRandomValues) {\r\n            var QUOTA = 65536;\r\n            nacl.setPRNG(function(x, n) {\r\n                var i, v = new Uint8Array(n);\r\n                for(i = 0; i < n; i += QUOTA){\r\n                    crypto1.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\r\n                }\r\n                for(i = 0; i < n; i++)x[i] = v[i];\r\n                cleanup(v);\r\n            });\r\n        } else if (typeof require !== 'undefined') {\r\n            crypto1 = require('crypto');\r\n            if (crypto1 && crypto1.randomBytes) {\r\n                nacl.setPRNG(function(x, n) {\r\n                    var i, v = crypto1.randomBytes(n);\r\n                    for(i = 0; i < n; i++)x[i] = v[i];\r\n                    cleanup(v);\r\n                });\r\n            }\r\n        }\r\n    })();\r\n})(typeof module !== 'undefined' && module.exports ? module.exports : globalThis.nacl = globalThis.nacl || {});\r\nconst nacl = typeof module !== 'undefined' && module.exports ? module.exports : globalThis.nacl;\r\nconst denoHelper = {\r\n    fromSeed: nacl.sign.keyPair.fromSeed,\r\n    sign: nacl.sign.detached,\r\n    verify: nacl.sign.detached.verify,\r\n    randomBytes: nacl.randomBytes\r\n};\r\nlet helper;\r\nfunction setEd25519Helper(lib) {\r\n    helper = lib;\r\n}\r\nfunction getEd25519Helper() {\r\n    return helper;\r\n}\r\nconst crc16tab = new Uint16Array([\r\n    0x0000,\r\n    0x1021,\r\n    0x2042,\r\n    0x3063,\r\n    0x4084,\r\n    0x50a5,\r\n    0x60c6,\r\n    0x70e7,\r\n    0x8108,\r\n    0x9129,\r\n    0xa14a,\r\n    0xb16b,\r\n    0xc18c,\r\n    0xd1ad,\r\n    0xe1ce,\r\n    0xf1ef,\r\n    0x1231,\r\n    0x0210,\r\n    0x3273,\r\n    0x2252,\r\n    0x52b5,\r\n    0x4294,\r\n    0x72f7,\r\n    0x62d6,\r\n    0x9339,\r\n    0x8318,\r\n    0xb37b,\r\n    0xa35a,\r\n    0xd3bd,\r\n    0xc39c,\r\n    0xf3ff,\r\n    0xe3de,\r\n    0x2462,\r\n    0x3443,\r\n    0x0420,\r\n    0x1401,\r\n    0x64e6,\r\n    0x74c7,\r\n    0x44a4,\r\n    0x5485,\r\n    0xa56a,\r\n    0xb54b,\r\n    0x8528,\r\n    0x9509,\r\n    0xe5ee,\r\n    0xf5cf,\r\n    0xc5ac,\r\n    0xd58d,\r\n    0x3653,\r\n    0x2672,\r\n    0x1611,\r\n    0x0630,\r\n    0x76d7,\r\n    0x66f6,\r\n    0x5695,\r\n    0x46b4,\r\n    0xb75b,\r\n    0xa77a,\r\n    0x9719,\r\n    0x8738,\r\n    0xf7df,\r\n    0xe7fe,\r\n    0xd79d,\r\n    0xc7bc,\r\n    0x48c4,\r\n    0x58e5,\r\n    0x6886,\r\n    0x78a7,\r\n    0x0840,\r\n    0x1861,\r\n    0x2802,\r\n    0x3823,\r\n    0xc9cc,\r\n    0xd9ed,\r\n    0xe98e,\r\n    0xf9af,\r\n    0x8948,\r\n    0x9969,\r\n    0xa90a,\r\n    0xb92b,\r\n    0x5af5,\r\n    0x4ad4,\r\n    0x7ab7,\r\n    0x6a96,\r\n    0x1a71,\r\n    0x0a50,\r\n    0x3a33,\r\n    0x2a12,\r\n    0xdbfd,\r\n    0xcbdc,\r\n    0xfbbf,\r\n    0xeb9e,\r\n    0x9b79,\r\n    0x8b58,\r\n    0xbb3b,\r\n    0xab1a,\r\n    0x6ca6,\r\n    0x7c87,\r\n    0x4ce4,\r\n    0x5cc5,\r\n    0x2c22,\r\n    0x3c03,\r\n    0x0c60,\r\n    0x1c41,\r\n    0xedae,\r\n    0xfd8f,\r\n    0xcdec,\r\n    0xddcd,\r\n    0xad2a,\r\n    0xbd0b,\r\n    0x8d68,\r\n    0x9d49,\r\n    0x7e97,\r\n    0x6eb6,\r\n    0x5ed5,\r\n    0x4ef4,\r\n    0x3e13,\r\n    0x2e32,\r\n    0x1e51,\r\n    0x0e70,\r\n    0xff9f,\r\n    0xefbe,\r\n    0xdfdd,\r\n    0xcffc,\r\n    0xbf1b,\r\n    0xaf3a,\r\n    0x9f59,\r\n    0x8f78,\r\n    0x9188,\r\n    0x81a9,\r\n    0xb1ca,\r\n    0xa1eb,\r\n    0xd10c,\r\n    0xc12d,\r\n    0xf14e,\r\n    0xe16f,\r\n    0x1080,\r\n    0x00a1,\r\n    0x30c2,\r\n    0x20e3,\r\n    0x5004,\r\n    0x4025,\r\n    0x7046,\r\n    0x6067,\r\n    0x83b9,\r\n    0x9398,\r\n    0xa3fb,\r\n    0xb3da,\r\n    0xc33d,\r\n    0xd31c,\r\n    0xe37f,\r\n    0xf35e,\r\n    0x02b1,\r\n    0x1290,\r\n    0x22f3,\r\n    0x32d2,\r\n    0x4235,\r\n    0x5214,\r\n    0x6277,\r\n    0x7256,\r\n    0xb5ea,\r\n    0xa5cb,\r\n    0x95a8,\r\n    0x8589,\r\n    0xf56e,\r\n    0xe54f,\r\n    0xd52c,\r\n    0xc50d,\r\n    0x34e2,\r\n    0x24c3,\r\n    0x14a0,\r\n    0x0481,\r\n    0x7466,\r\n    0x6447,\r\n    0x5424,\r\n    0x4405,\r\n    0xa7db,\r\n    0xb7fa,\r\n    0x8799,\r\n    0x97b8,\r\n    0xe75f,\r\n    0xf77e,\r\n    0xc71d,\r\n    0xd73c,\r\n    0x26d3,\r\n    0x36f2,\r\n    0x0691,\r\n    0x16b0,\r\n    0x6657,\r\n    0x7676,\r\n    0x4615,\r\n    0x5634,\r\n    0xd94c,\r\n    0xc96d,\r\n    0xf90e,\r\n    0xe92f,\r\n    0x99c8,\r\n    0x89e9,\r\n    0xb98a,\r\n    0xa9ab,\r\n    0x5844,\r\n    0x4865,\r\n    0x7806,\r\n    0x6827,\r\n    0x18c0,\r\n    0x08e1,\r\n    0x3882,\r\n    0x28a3,\r\n    0xcb7d,\r\n    0xdb5c,\r\n    0xeb3f,\r\n    0xfb1e,\r\n    0x8bf9,\r\n    0x9bd8,\r\n    0xabbb,\r\n    0xbb9a,\r\n    0x4a75,\r\n    0x5a54,\r\n    0x6a37,\r\n    0x7a16,\r\n    0x0af1,\r\n    0x1ad0,\r\n    0x2ab3,\r\n    0x3a92,\r\n    0xfd2e,\r\n    0xed0f,\r\n    0xdd6c,\r\n    0xcd4d,\r\n    0xbdaa,\r\n    0xad8b,\r\n    0x9de8,\r\n    0x8dc9,\r\n    0x7c26,\r\n    0x6c07,\r\n    0x5c64,\r\n    0x4c45,\r\n    0x3ca2,\r\n    0x2c83,\r\n    0x1ce0,\r\n    0x0cc1,\r\n    0xef1f,\r\n    0xff3e,\r\n    0xcf5d,\r\n    0xdf7c,\r\n    0xaf9b,\r\n    0xbfba,\r\n    0x8fd9,\r\n    0x9ff8,\r\n    0x6e17,\r\n    0x7e36,\r\n    0x4e55,\r\n    0x5e74,\r\n    0x2e93,\r\n    0x3eb2,\r\n    0x0ed1,\r\n    0x1ef0\r\n]);\r\nclass crc16 {\r\n    static checksum(data) {\r\n        let crc = 0;\r\n        for(let i = 0; i < data.byteLength; i++){\r\n            let b = data[i];\r\n            crc = crc << 8 & 0xffff ^ crc16tab[(crc >> 8 ^ b) & 0x00FF];\r\n        }\r\n        return crc;\r\n    }\r\n    static validate(data, expected) {\r\n        let ba = crc16.checksum(data);\r\n        return ba == expected;\r\n    }\r\n}\r\nconst b32Alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\r\nclass base32 {\r\n    static encode(src) {\r\n        let bits = 0;\r\n        let value = 0;\r\n        let a = new Uint8Array(src);\r\n        let buf = new Uint8Array(src.byteLength * 2);\r\n        let j = 0;\r\n        for(let i = 0; i < a.byteLength; i++){\r\n            value = value << 8 | a[i];\r\n            bits += 8;\r\n            while(bits >= 5){\r\n                let index = value >>> bits - 5 & 31;\r\n                buf[j++] = b32Alphabet.charAt(index).charCodeAt(0);\r\n                bits -= 5;\r\n            }\r\n        }\r\n        if (bits > 0) {\r\n            let index = value << 5 - bits & 31;\r\n            buf[j++] = b32Alphabet.charAt(index).charCodeAt(0);\r\n        }\r\n        return buf.slice(0, j);\r\n    }\r\n    static decode(src) {\r\n        let bits = 0;\r\n        let __byte = 0;\r\n        let j = 0;\r\n        let a = new Uint8Array(src);\r\n        let out = new Uint8Array(a.byteLength * 5 / 8 | 0);\r\n        for(let i = 0; i < a.byteLength; i++){\r\n            let v = String.fromCharCode(a[i]);\r\n            let vv = b32Alphabet.indexOf(v);\r\n            if (vv === -1) {\r\n                throw new Error(\"Illegal Base32 character: \" + a[i]);\r\n            }\r\n            __byte = __byte << 5 | vv;\r\n            bits += 5;\r\n            if (bits >= 8) {\r\n                out[j++] = __byte >>> bits - 8 & 255;\r\n                bits -= 8;\r\n            }\r\n        }\r\n        return out.slice(0, j);\r\n    }\r\n}\r\nclass NKeysError extends Error {\r\n    name;\r\n    code;\r\n    chainedError;\r\n    constructor(code, chainedError){\r\n        super(code);\r\n        this.name = \"NKeysError\";\r\n        this.code = code;\r\n        this.chainedError = chainedError;\r\n    }\r\n}\r\nfunction createOperator() {\r\n    return createPair(Prefix.Operator);\r\n}\r\nfunction createAccount() {\r\n    return createPair(Prefix.Account);\r\n}\r\nfunction createUser() {\r\n    return createPair(Prefix.User);\r\n}\r\nvar NKeysErrorCode;\r\n(function(NKeysErrorCode) {\r\n    NKeysErrorCode[\"InvalidPrefixByte\"] = \"nkeys: invalid prefix byte\";\r\n    NKeysErrorCode[\"InvalidKey\"] = \"nkeys: invalid key\";\r\n    NKeysErrorCode[\"InvalidPublicKey\"] = \"nkeys: invalid public key\";\r\n    NKeysErrorCode[\"InvalidSeedLen\"] = \"nkeys: invalid seed length\";\r\n    NKeysErrorCode[\"InvalidSeed\"] = \"nkeys: invalid seed\";\r\n    NKeysErrorCode[\"InvalidEncoding\"] = \"nkeys: invalid encoded key\";\r\n    NKeysErrorCode[\"InvalidSignature\"] = \"nkeys: signature verification failed\";\r\n    NKeysErrorCode[\"CannotSign\"] = \"nkeys: cannot sign, no private key available\";\r\n    NKeysErrorCode[\"PublicKeyOnly\"] = \"nkeys: no seed or private key available\";\r\n    NKeysErrorCode[\"InvalidChecksum\"] = \"nkeys: invalid checksum\";\r\n    NKeysErrorCode[\"SerializationError\"] = \"nkeys: serialization error\";\r\n    NKeysErrorCode[\"ApiError\"] = \"nkeys: api error\";\r\n    NKeysErrorCode[\"ClearedPair\"] = \"nkeys: pair is cleared\";\r\n})(NKeysErrorCode || (NKeysErrorCode = {}));\r\nvar Prefix;\r\n(function(Prefix) {\r\n    Prefix[Prefix[\"Seed\"] = 144] = \"Seed\";\r\n    Prefix[Prefix[\"Private\"] = 120] = \"Private\";\r\n    Prefix[Prefix[\"Operator\"] = 112] = \"Operator\";\r\n    Prefix[Prefix[\"Server\"] = 104] = \"Server\";\r\n    Prefix[Prefix[\"Cluster\"] = 16] = \"Cluster\";\r\n    Prefix[Prefix[\"Account\"] = 0] = \"Account\";\r\n    Prefix[Prefix[\"User\"] = 160] = \"User\";\r\n})(Prefix || (Prefix = {}));\r\nclass Prefixes {\r\n    static isValidPublicPrefix(prefix) {\r\n        return prefix == Prefix.Server || prefix == Prefix.Operator || prefix == Prefix.Cluster || prefix == Prefix.Account || prefix == Prefix.User;\r\n    }\r\n    static startsWithValidPrefix(s) {\r\n        let c = s[0];\r\n        return c == \"S\" || c == \"P\" || c == \"O\" || c == \"N\" || c == \"C\" || c == \"A\" || c == \"U\";\r\n    }\r\n    static isValidPrefix(prefix) {\r\n        let v = this.parsePrefix(prefix);\r\n        return v != -1;\r\n    }\r\n    static parsePrefix(v) {\r\n        switch(v){\r\n            case Prefix.Seed:\r\n                return Prefix.Seed;\r\n            case Prefix.Private:\r\n                return Prefix.Private;\r\n            case Prefix.Operator:\r\n                return Prefix.Operator;\r\n            case Prefix.Server:\r\n                return Prefix.Server;\r\n            case Prefix.Cluster:\r\n                return Prefix.Cluster;\r\n            case Prefix.Account:\r\n                return Prefix.Account;\r\n            case Prefix.User:\r\n                return Prefix.User;\r\n            default:\r\n                return -1;\r\n        }\r\n    }\r\n}\r\nclass Codec {\r\n    static encode(prefix, src) {\r\n        if (!src || !(src instanceof Uint8Array)) {\r\n            throw new NKeysError(NKeysErrorCode.SerializationError);\r\n        }\r\n        if (!Prefixes.isValidPrefix(prefix)) {\r\n            throw new NKeysError(NKeysErrorCode.InvalidPrefixByte);\r\n        }\r\n        return Codec._encode(false, prefix, src);\r\n    }\r\n    static encodeSeed(role, src) {\r\n        if (!src) {\r\n            throw new NKeysError(NKeysErrorCode.ApiError);\r\n        }\r\n        if (!Prefixes.isValidPublicPrefix(role)) {\r\n            throw new NKeysError(NKeysErrorCode.InvalidPrefixByte);\r\n        }\r\n        if (src.byteLength !== 32) {\r\n            throw new NKeysError(NKeysErrorCode.InvalidSeedLen);\r\n        }\r\n        return Codec._encode(true, role, src);\r\n    }\r\n    static decode(expected, src) {\r\n        if (!Prefixes.isValidPrefix(expected)) {\r\n            throw new NKeysError(NKeysErrorCode.InvalidPrefixByte);\r\n        }\r\n        const raw = Codec._decode(src);\r\n        if (raw[0] !== expected) {\r\n            throw new NKeysError(NKeysErrorCode.InvalidPrefixByte);\r\n        }\r\n        return raw.slice(1);\r\n    }\r\n    static decodeSeed(src) {\r\n        const raw = Codec._decode(src);\r\n        const prefix = Codec._decodePrefix(raw);\r\n        if (prefix[0] != Prefix.Seed) {\r\n            throw new NKeysError(NKeysErrorCode.InvalidSeed);\r\n        }\r\n        if (!Prefixes.isValidPublicPrefix(prefix[1])) {\r\n            throw new NKeysError(NKeysErrorCode.InvalidPrefixByte);\r\n        }\r\n        return {\r\n            buf: raw.slice(2),\r\n            prefix: prefix[1]\r\n        };\r\n    }\r\n    static _encode(seed, role, payload) {\r\n        const payloadOffset = seed ? 2 : 1;\r\n        const payloadLen = payload.byteLength;\r\n        const cap = payloadOffset + payloadLen + 2;\r\n        const checkOffset = payloadOffset + payloadLen;\r\n        const raw = new Uint8Array(cap);\r\n        if (seed) {\r\n            const encodedPrefix = Codec._encodePrefix(Prefix.Seed, role);\r\n            raw.set(encodedPrefix);\r\n        } else {\r\n            raw[0] = role;\r\n        }\r\n        raw.set(payload, payloadOffset);\r\n        const checksum = crc16.checksum(raw.slice(0, checkOffset));\r\n        const dv = new DataView(raw.buffer);\r\n        dv.setUint16(checkOffset, checksum, true);\r\n        return base32.encode(raw);\r\n    }\r\n    static _decode(src) {\r\n        if (src.byteLength < 4) {\r\n            throw new NKeysError(NKeysErrorCode.InvalidEncoding);\r\n        }\r\n        let raw;\r\n        try {\r\n            raw = base32.decode(src);\r\n        } catch (ex) {\r\n            throw new NKeysError(NKeysErrorCode.InvalidEncoding, ex);\r\n        }\r\n        const checkOffset = raw.byteLength - 2;\r\n        const dv = new DataView(raw.buffer);\r\n        const checksum = dv.getUint16(checkOffset, true);\r\n        const payload = raw.slice(0, checkOffset);\r\n        if (!crc16.validate(payload, checksum)) {\r\n            throw new NKeysError(NKeysErrorCode.InvalidChecksum);\r\n        }\r\n        return payload;\r\n    }\r\n    static _encodePrefix(kind, role) {\r\n        const b1 = kind | role >> 5;\r\n        const b2 = (role & 31) << 3;\r\n        return new Uint8Array([\r\n            b1,\r\n            b2\r\n        ]);\r\n    }\r\n    static _decodePrefix(raw) {\r\n        const b1 = raw[0] & 248;\r\n        const b2 = (raw[0] & 7) << 5 | (raw[1] & 248) >> 3;\r\n        return new Uint8Array([\r\n            b1,\r\n            b2\r\n        ]);\r\n    }\r\n}\r\nclass KP {\r\n    seed;\r\n    constructor(seed){\r\n        this.seed = seed;\r\n    }\r\n    getRawSeed() {\r\n        if (!this.seed) {\r\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\r\n        }\r\n        let sd = Codec.decodeSeed(this.seed);\r\n        return sd.buf;\r\n    }\r\n    getSeed() {\r\n        if (!this.seed) {\r\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\r\n        }\r\n        return this.seed;\r\n    }\r\n    getPublicKey() {\r\n        if (!this.seed) {\r\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\r\n        }\r\n        const sd = Codec.decodeSeed(this.seed);\r\n        const kp = getEd25519Helper().fromSeed(this.getRawSeed());\r\n        const buf = Codec.encode(sd.prefix, kp.publicKey);\r\n        return new TextDecoder().decode(buf);\r\n    }\r\n    getPrivateKey() {\r\n        if (!this.seed) {\r\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\r\n        }\r\n        const kp = getEd25519Helper().fromSeed(this.getRawSeed());\r\n        return Codec.encode(Prefix.Private, kp.secretKey);\r\n    }\r\n    sign(input) {\r\n        if (!this.seed) {\r\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\r\n        }\r\n        const kp = getEd25519Helper().fromSeed(this.getRawSeed());\r\n        return getEd25519Helper().sign(input, kp.secretKey);\r\n    }\r\n    verify(input, sig) {\r\n        if (!this.seed) {\r\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\r\n        }\r\n        const kp = getEd25519Helper().fromSeed(this.getRawSeed());\r\n        return getEd25519Helper().verify(input, sig, kp.publicKey);\r\n    }\r\n    clear() {\r\n        if (!this.seed) {\r\n            return;\r\n        }\r\n        this.seed.fill(0);\r\n        this.seed = undefined;\r\n    }\r\n}\r\nfunction createPair(prefix) {\r\n    const rawSeed = getEd25519Helper().randomBytes(32);\r\n    let str = Codec.encodeSeed(prefix, new Uint8Array(rawSeed));\r\n    return new KP(str);\r\n}\r\nclass PublicKey {\r\n    publicKey;\r\n    constructor(publicKey){\r\n        this.publicKey = publicKey;\r\n    }\r\n    getPublicKey() {\r\n        if (!this.publicKey) {\r\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\r\n        }\r\n        return new TextDecoder().decode(this.publicKey);\r\n    }\r\n    getPrivateKey() {\r\n        if (!this.publicKey) {\r\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\r\n        }\r\n        throw new NKeysError(NKeysErrorCode.PublicKeyOnly);\r\n    }\r\n    getSeed() {\r\n        if (!this.publicKey) {\r\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\r\n        }\r\n        throw new NKeysError(NKeysErrorCode.PublicKeyOnly);\r\n    }\r\n    sign(_) {\r\n        if (!this.publicKey) {\r\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\r\n        }\r\n        throw new NKeysError(NKeysErrorCode.CannotSign);\r\n    }\r\n    verify(input, sig) {\r\n        if (!this.publicKey) {\r\n            throw new NKeysError(NKeysErrorCode.ClearedPair);\r\n        }\r\n        let buf = Codec._decode(this.publicKey);\r\n        return getEd25519Helper().verify(input, sig, buf.slice(1));\r\n    }\r\n    clear() {\r\n        if (!this.publicKey) {\r\n            return;\r\n        }\r\n        this.publicKey.fill(0);\r\n        this.publicKey = undefined;\r\n    }\r\n}\r\nfunction fromPublic(src) {\r\n    const ba = new TextEncoder().encode(src);\r\n    const raw = Codec._decode(ba);\r\n    const prefix = Prefixes.parsePrefix(raw[0]);\r\n    if (Prefixes.isValidPublicPrefix(prefix)) {\r\n        return new PublicKey(ba);\r\n    }\r\n    throw new NKeysError(NKeysErrorCode.InvalidPublicKey);\r\n}\r\nfunction fromSeed(src) {\r\n    Codec.decodeSeed(src);\r\n    return new KP(src);\r\n}\r\nfunction encode1(bytes) {\r\n    return btoa(String.fromCharCode(...bytes));\r\n}\r\nfunction decode1(b64str) {\r\n    const bin = atob(b64str);\r\n    const bytes = new Uint8Array(bin.length);\r\n    for(let i = 0; i < bin.length; i++){\r\n        bytes[i] = bin.charCodeAt(i);\r\n    }\r\n    return bytes;\r\n}\r\nsetEd25519Helper(denoHelper);\r\nconst mod = {\r\n    createAccount,\r\n    createOperator,\r\n    createPair,\r\n    createUser,\r\n    fromPublic,\r\n    fromSeed,\r\n    NKeysError,\r\n    NKeysErrorCode,\r\n    Prefix,\r\n    decode: decode1,\r\n    encode: encode1\r\n};\r\nfunction multiAuthenticator(authenticators) {\r\n    return (nonce)=>{\r\n        let auth = {};\r\n        authenticators.forEach((a)=>{\r\n            const args = a(nonce) || {};\r\n            auth = Object.assign(auth, args);\r\n        });\r\n        return auth;\r\n    };\r\n}\r\nfunction noAuthFn() {\r\n    return ()=>{\r\n        return;\r\n    };\r\n}\r\nfunction usernamePasswordAuthenticator(user, pass) {\r\n    return ()=>{\r\n        const u = typeof user === \"function\" ? user() : user;\r\n        const p = typeof pass === \"function\" ? pass() : pass;\r\n        return {\r\n            user: u,\r\n            pass: p\r\n        };\r\n    };\r\n}\r\nfunction tokenAuthenticator(token) {\r\n    return ()=>{\r\n        const auth_token = typeof token === \"function\" ? token() : token;\r\n        return {\r\n            auth_token\r\n        };\r\n    };\r\n}\r\nfunction nkeyAuthenticator(seed) {\r\n    return (nonce)=>{\r\n        const s = typeof seed === \"function\" ? seed() : seed;\r\n        const kp = s ? mod.fromSeed(s) : undefined;\r\n        const nkey = kp ? kp.getPublicKey() : \"\";\r\n        const challenge = TE.encode(nonce || \"\");\r\n        const sigBytes = kp !== undefined && nonce ? kp.sign(challenge) : undefined;\r\n        const sig = sigBytes ? mod.encode(sigBytes) : \"\";\r\n        return {\r\n            nkey,\r\n            sig\r\n        };\r\n    };\r\n}\r\nfunction jwtAuthenticator(ajwt, seed) {\r\n    return (nonce)=>{\r\n        const jwt = typeof ajwt === \"function\" ? ajwt() : ajwt;\r\n        const fn = nkeyAuthenticator(seed);\r\n        const { nkey, sig } = fn(nonce);\r\n        return {\r\n            jwt,\r\n            nkey,\r\n            sig\r\n        };\r\n    };\r\n}\r\nfunction credsAuthenticator(creds) {\r\n    const fn = typeof creds !== \"function\" ? ()=>creds : creds;\r\n    const parse = ()=>{\r\n        const CREDS = /\\s*(?:(?:[-]{3,}[^\\n]*[-]{3,}\\n)(.+)(?:\\n\\s*[-]{3,}[^\\n]*[-]{3,}\\n))/ig;\r\n        const s = TD.decode(fn());\r\n        let m = CREDS.exec(s);\r\n        if (!m) {\r\n            throw NatsError.errorForCode(ErrorCode.BadCreds);\r\n        }\r\n        const jwt = m[1].trim();\r\n        m = CREDS.exec(s);\r\n        if (!m) {\r\n            throw NatsError.errorForCode(ErrorCode.BadCreds);\r\n        }\r\n        if (!m) {\r\n            throw NatsError.errorForCode(ErrorCode.BadCreds);\r\n        }\r\n        const seed = TE.encode(m[1].trim());\r\n        return {\r\n            jwt,\r\n            seed\r\n        };\r\n    };\r\n    const jwtFn = ()=>{\r\n        const { jwt } = parse();\r\n        return jwt;\r\n    };\r\n    const nkeyFn = ()=>{\r\n        const { seed } = parse();\r\n        return seed;\r\n    };\r\n    return jwtAuthenticator(jwtFn, nkeyFn);\r\n}\r\nconst DEFAULT_PING_INTERVAL = 2 * 60 * 1000;\r\nconst DEFAULT_MAX_PING_OUT = 2;\r\nconst DEFAULT_RECONNECT_TIME_WAIT = 2 * 1000;\r\nfunction defaultOptions() {\r\n    return {\r\n        maxPingOut: 2,\r\n        maxReconnectAttempts: 10,\r\n        noRandomize: false,\r\n        pedantic: false,\r\n        pingInterval: DEFAULT_PING_INTERVAL,\r\n        reconnect: true,\r\n        reconnectJitter: 100,\r\n        reconnectJitterTLS: 1000,\r\n        reconnectTimeWait: DEFAULT_RECONNECT_TIME_WAIT,\r\n        tls: undefined,\r\n        verbose: false,\r\n        waitOnFirstConnect: false,\r\n        ignoreAuthErrorAbort: false\r\n    };\r\n}\r\nfunction buildAuthenticator(opts) {\r\n    const buf = [];\r\n    if (typeof opts.authenticator === \"function\") {\r\n        buf.push(opts.authenticator);\r\n    }\r\n    if (Array.isArray(opts.authenticator)) {\r\n        buf.push(...opts.authenticator);\r\n    }\r\n    if (opts.token) {\r\n        buf.push(tokenAuthenticator(opts.token));\r\n    }\r\n    if (opts.user) {\r\n        buf.push(usernamePasswordAuthenticator(opts.user, opts.pass));\r\n    }\r\n    return buf.length === 0 ? noAuthFn() : multiAuthenticator(buf);\r\n}\r\nfunction parseOptions(opts) {\r\n    const dhp = `${DEFAULT_HOST}:${defaultPort()}`;\r\n    opts = opts || {\r\n        servers: [\r\n            dhp\r\n        ]\r\n    };\r\n    opts.servers = opts.servers || [];\r\n    if (typeof opts.servers === \"string\") {\r\n        opts.servers = [\r\n            opts.servers\r\n        ];\r\n    }\r\n    if (opts.servers.length > 0 && opts.port) {\r\n        throw new NatsError(\"port and servers options are mutually exclusive\", ErrorCode.InvalidOption);\r\n    }\r\n    if (opts.servers.length === 0 && opts.port) {\r\n        opts.servers = [\r\n            `${DEFAULT_HOST}:${opts.port}`\r\n        ];\r\n    }\r\n    if (opts.servers && opts.servers.length === 0) {\r\n        opts.servers = [\r\n            dhp\r\n        ];\r\n    }\r\n    const options = extend(defaultOptions(), opts);\r\n    options.authenticator = buildAuthenticator(options);\r\n    [\r\n        \"reconnectDelayHandler\",\r\n        \"authenticator\"\r\n    ].forEach((n)=>{\r\n        if (options[n] && typeof options[n] !== \"function\") {\r\n            throw new NatsError(`${n} option should be a function`, ErrorCode.NotFunction);\r\n        }\r\n    });\r\n    if (!options.reconnectDelayHandler) {\r\n        options.reconnectDelayHandler = ()=>{\r\n            let extra = options.tls ? options.reconnectJitterTLS : options.reconnectJitter;\r\n            if (extra) {\r\n                extra++;\r\n                extra = Math.floor(Math.random() * extra);\r\n            }\r\n            return options.reconnectTimeWait + extra;\r\n        };\r\n    }\r\n    if (options.inboxPrefix) {\r\n        try {\r\n            createInbox(options.inboxPrefix);\r\n        } catch (err) {\r\n            throw new NatsError(err.message, ErrorCode.ApiError);\r\n        }\r\n    }\r\n    if (options.resolve) {\r\n        if (typeof getResolveFn() !== \"function\") {\r\n            throw new NatsError(`'resolve' is not supported on this client`, ErrorCode.InvalidOption);\r\n        }\r\n    }\r\n    return options;\r\n}\r\nfunction checkOptions(info, options) {\r\n    const { proto, tls_required: tlsRequired, tls_available: tlsAvailable } = info;\r\n    if ((proto === undefined || proto < 1) && options.noEcho) {\r\n        throw new NatsError(\"noEcho\", ErrorCode.ServerOptionNotAvailable);\r\n    }\r\n    const tls = tlsRequired || tlsAvailable || false;\r\n    if (options.tls && !tls) {\r\n        throw new NatsError(\"tls\", ErrorCode.ServerOptionNotAvailable);\r\n    }\r\n}\r\nconst FLUSH_THRESHOLD = 1024 * 32;\r\nconst INFO = /^INFO\\s+([^\\r\\n]+)\\r\\n/i;\r\nconst PONG_CMD = encode(\"PONG\\r\\n\");\r\nconst PING_CMD = encode(\"PING\\r\\n\");\r\nclass Connect {\r\n    echo;\r\n    no_responders;\r\n    protocol;\r\n    verbose;\r\n    pedantic;\r\n    jwt;\r\n    nkey;\r\n    sig;\r\n    user;\r\n    pass;\r\n    auth_token;\r\n    tls_required;\r\n    name;\r\n    lang;\r\n    version;\r\n    headers;\r\n    constructor(transport, opts, nonce){\r\n        this.protocol = 1;\r\n        this.version = transport.version;\r\n        this.lang = transport.lang;\r\n        this.echo = opts.noEcho ? false : undefined;\r\n        this.verbose = opts.verbose;\r\n        this.pedantic = opts.pedantic;\r\n        this.tls_required = opts.tls ? true : undefined;\r\n        this.name = opts.name;\r\n        const creds = (opts && typeof opts.authenticator === \"function\" ? opts.authenticator(nonce) : {}) || {};\r\n        extend(this, creds);\r\n    }\r\n}\r\nclass SubscriptionImpl extends QueuedIteratorImpl {\r\n    sid;\r\n    queue;\r\n    draining;\r\n    max;\r\n    subject;\r\n    drained;\r\n    protocol;\r\n    timer;\r\n    info;\r\n    cleanupFn;\r\n    closed;\r\n    requestSubject;\r\n    constructor(protocol, subject, opts = {}){\r\n        super();\r\n        extend(this, opts);\r\n        this.protocol = protocol;\r\n        this.subject = subject;\r\n        this.draining = false;\r\n        this.noIterator = typeof opts.callback === \"function\";\r\n        this.closed = deferred();\r\n        const asyncTraces = !(protocol.options?.noAsyncTraces || false);\r\n        if (opts.timeout) {\r\n            this.timer = timeout(opts.timeout, asyncTraces);\r\n            this.timer.then(()=>{\r\n                this.timer = undefined;\r\n            }).catch((err)=>{\r\n                this.stop(err);\r\n                if (this.noIterator) {\r\n                    this.callback(err, {});\r\n                }\r\n            });\r\n        }\r\n        if (!this.noIterator) {\r\n            this.iterClosed.then(()=>{\r\n                this.closed.resolve();\r\n                this.unsubscribe();\r\n            });\r\n        }\r\n    }\r\n    setPrePostHandlers(opts) {\r\n        if (this.noIterator) {\r\n            const uc = this.callback;\r\n            const ingestion = opts.ingestionFilterFn ? opts.ingestionFilterFn : ()=>{\r\n                return {\r\n                    ingest: true,\r\n                    protocol: false\r\n                };\r\n            };\r\n            const filter = opts.protocolFilterFn ? opts.protocolFilterFn : ()=>{\r\n                return true;\r\n            };\r\n            const dispatched = opts.dispatchedFn ? opts.dispatchedFn : ()=>{};\r\n            this.callback = (err, msg)=>{\r\n                const { ingest } = ingestion(msg);\r\n                if (!ingest) {\r\n                    return;\r\n                }\r\n                if (filter(msg)) {\r\n                    uc(err, msg);\r\n                    dispatched(msg);\r\n                }\r\n            };\r\n        } else {\r\n            this.protocolFilterFn = opts.protocolFilterFn;\r\n            this.dispatchedFn = opts.dispatchedFn;\r\n        }\r\n    }\r\n    callback(err, msg) {\r\n        this.cancelTimeout();\r\n        err ? this.stop(err) : this.push(msg);\r\n    }\r\n    close() {\r\n        if (!this.isClosed()) {\r\n            this.cancelTimeout();\r\n            const fn = ()=>{\r\n                this.stop();\r\n                if (this.cleanupFn) {\r\n                    try {\r\n                        this.cleanupFn(this, this.info);\r\n                    } catch (_err) {}\r\n                }\r\n                this.closed.resolve();\r\n            };\r\n            if (this.noIterator) {\r\n                fn();\r\n            } else {\r\n                this.push(fn);\r\n            }\r\n        }\r\n    }\r\n    unsubscribe(max) {\r\n        this.protocol.unsubscribe(this, max);\r\n    }\r\n    cancelTimeout() {\r\n        if (this.timer) {\r\n            this.timer.cancel();\r\n            this.timer = undefined;\r\n        }\r\n    }\r\n    drain() {\r\n        if (this.protocol.isClosed()) {\r\n            return Promise.reject(NatsError.errorForCode(ErrorCode.ConnectionClosed));\r\n        }\r\n        if (this.isClosed()) {\r\n            return Promise.reject(NatsError.errorForCode(ErrorCode.SubClosed));\r\n        }\r\n        if (!this.drained) {\r\n            this.draining = true;\r\n            this.protocol.unsub(this);\r\n            this.drained = this.protocol.flush(deferred()).then(()=>{\r\n                this.protocol.subscriptions.cancel(this);\r\n            }).catch(()=>{\r\n                this.protocol.subscriptions.cancel(this);\r\n            });\r\n        }\r\n        return this.drained;\r\n    }\r\n    isDraining() {\r\n        return this.draining;\r\n    }\r\n    isClosed() {\r\n        return this.done;\r\n    }\r\n    getSubject() {\r\n        return this.subject;\r\n    }\r\n    getMax() {\r\n        return this.max;\r\n    }\r\n    getID() {\r\n        return this.sid;\r\n    }\r\n}\r\nclass Subscriptions {\r\n    mux;\r\n    subs;\r\n    sidCounter;\r\n    constructor(){\r\n        this.sidCounter = 0;\r\n        this.mux = null;\r\n        this.subs = new Map();\r\n    }\r\n    size() {\r\n        return this.subs.size;\r\n    }\r\n    add(s) {\r\n        this.sidCounter++;\r\n        s.sid = this.sidCounter;\r\n        this.subs.set(s.sid, s);\r\n        return s;\r\n    }\r\n    setMux(s) {\r\n        this.mux = s;\r\n        return s;\r\n    }\r\n    getMux() {\r\n        return this.mux;\r\n    }\r\n    get(sid) {\r\n        return this.subs.get(sid);\r\n    }\r\n    resub(s) {\r\n        this.sidCounter++;\r\n        this.subs.delete(s.sid);\r\n        s.sid = this.sidCounter;\r\n        this.subs.set(s.sid, s);\r\n        return s;\r\n    }\r\n    all() {\r\n        return Array.from(this.subs.values());\r\n    }\r\n    cancel(s) {\r\n        if (s) {\r\n            s.close();\r\n            this.subs.delete(s.sid);\r\n        }\r\n    }\r\n    handleError(err) {\r\n        if (err && err.permissionContext) {\r\n            const ctx = err.permissionContext;\r\n            const subs = this.all();\r\n            let sub;\r\n            if (ctx.operation === \"subscription\") {\r\n                sub = subs.find((s)=>{\r\n                    return s.subject === ctx.subject;\r\n                });\r\n            }\r\n            if (ctx.operation === \"publish\") {\r\n                sub = subs.find((s)=>{\r\n                    return s.requestSubject === ctx.subject;\r\n                });\r\n            }\r\n            if (sub) {\r\n                sub.callback(err, {});\r\n                sub.close();\r\n                this.subs.delete(sub.sid);\r\n                return sub !== this.mux;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    close() {\r\n        this.subs.forEach((sub)=>{\r\n            sub.close();\r\n        });\r\n    }\r\n}\r\nclass ProtocolHandler {\r\n    connected;\r\n    connectedOnce;\r\n    infoReceived;\r\n    info;\r\n    muxSubscriptions;\r\n    options;\r\n    outbound;\r\n    pongs;\r\n    subscriptions;\r\n    transport;\r\n    noMorePublishing;\r\n    connectError;\r\n    publisher;\r\n    _closed;\r\n    closed;\r\n    listeners;\r\n    heartbeats;\r\n    parser;\r\n    outMsgs;\r\n    inMsgs;\r\n    outBytes;\r\n    inBytes;\r\n    pendingLimit;\r\n    lastError;\r\n    abortReconnect;\r\n    servers;\r\n    server;\r\n    features;\r\n    connectPromise;\r\n    constructor(options, publisher){\r\n        this._closed = false;\r\n        this.connected = false;\r\n        this.connectedOnce = false;\r\n        this.infoReceived = false;\r\n        this.noMorePublishing = false;\r\n        this.abortReconnect = false;\r\n        this.listeners = [];\r\n        this.pendingLimit = FLUSH_THRESHOLD;\r\n        this.outMsgs = 0;\r\n        this.inMsgs = 0;\r\n        this.outBytes = 0;\r\n        this.inBytes = 0;\r\n        this.options = options;\r\n        this.publisher = publisher;\r\n        this.subscriptions = new Subscriptions();\r\n        this.muxSubscriptions = new MuxSubscription();\r\n        this.outbound = new DataBuffer();\r\n        this.pongs = [];\r\n        this.pendingLimit = options.pendingLimit || this.pendingLimit;\r\n        this.features = new Features({\r\n            major: 0,\r\n            minor: 0,\r\n            micro: 0\r\n        });\r\n        this.connectPromise = null;\r\n        const servers = typeof options.servers === \"string\" ? [\r\n            options.servers\r\n        ] : options.servers;\r\n        this.servers = new Servers(servers, {\r\n            randomize: !options.noRandomize\r\n        });\r\n        this.closed = deferred();\r\n        this.parser = new Parser(this);\r\n        this.heartbeats = new Heartbeat(this, this.options.pingInterval || DEFAULT_PING_INTERVAL, this.options.maxPingOut || DEFAULT_MAX_PING_OUT);\r\n    }\r\n    resetOutbound() {\r\n        this.outbound.reset();\r\n        const pongs = this.pongs;\r\n        this.pongs = [];\r\n        const err = NatsError.errorForCode(ErrorCode.Disconnect);\r\n        err.stack = \"\";\r\n        pongs.forEach((p)=>{\r\n            p.reject(err);\r\n        });\r\n        this.parser = new Parser(this);\r\n        this.infoReceived = false;\r\n    }\r\n    dispatchStatus(status) {\r\n        this.listeners.forEach((q)=>{\r\n            q.push(status);\r\n        });\r\n    }\r\n    status() {\r\n        const iter = new QueuedIteratorImpl();\r\n        this.listeners.push(iter);\r\n        return iter;\r\n    }\r\n    prepare() {\r\n        if (this.transport) {\r\n            this.transport.discard();\r\n        }\r\n        this.info = undefined;\r\n        this.resetOutbound();\r\n        const pong = deferred();\r\n        pong.catch(()=>{});\r\n        this.pongs.unshift(pong);\r\n        this.connectError = (err)=>{\r\n            pong.reject(err);\r\n        };\r\n        this.transport = newTransport();\r\n        this.transport.closed().then(async (_err)=>{\r\n            this.connected = false;\r\n            if (!this.isClosed()) {\r\n                await this.disconnected(this.transport.closeError || this.lastError);\r\n                return;\r\n            }\r\n        });\r\n        return pong;\r\n    }\r\n    disconnect() {\r\n        this.dispatchStatus({\r\n            type: DebugEvents.StaleConnection,\r\n            data: \"\"\r\n        });\r\n        this.transport.disconnect();\r\n    }\r\n    reconnect() {\r\n        if (this.connected) {\r\n            this.dispatchStatus({\r\n                type: DebugEvents.ClientInitiatedReconnect,\r\n                data: \"\"\r\n            });\r\n            this.transport.disconnect();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    async disconnected(err) {\r\n        this.dispatchStatus({\r\n            type: Events.Disconnect,\r\n            data: this.servers.getCurrentServer().toString()\r\n        });\r\n        if (this.options.reconnect) {\r\n            await this.dialLoop().then(()=>{\r\n                this.dispatchStatus({\r\n                    type: Events.Reconnect,\r\n                    data: this.servers.getCurrentServer().toString()\r\n                });\r\n                if (this.lastError?.code === ErrorCode.AuthenticationExpired) {\r\n                    this.lastError = undefined;\r\n                }\r\n            }).catch((err)=>{\r\n                this._close(err);\r\n            });\r\n        } else {\r\n            await this._close(err);\r\n        }\r\n    }\r\n    async dial(srv) {\r\n        const pong = this.prepare();\r\n        let timer;\r\n        try {\r\n            timer = timeout(this.options.timeout || 20000);\r\n            const cp = this.transport.connect(srv, this.options);\r\n            await Promise.race([\r\n                cp,\r\n                timer\r\n            ]);\r\n            (async ()=>{\r\n                try {\r\n                    for await (const b of this.transport){\r\n                        this.parser.parse(b);\r\n                    }\r\n                } catch (err) {\r\n                    console.log(\"reader closed\", err);\r\n                }\r\n            })().then();\r\n        } catch (err) {\r\n            pong.reject(err);\r\n        }\r\n        try {\r\n            await Promise.race([\r\n                timer,\r\n                pong\r\n            ]);\r\n            if (timer) {\r\n                timer.cancel();\r\n            }\r\n            this.connected = true;\r\n            this.connectError = undefined;\r\n            this.sendSubscriptions();\r\n            this.connectedOnce = true;\r\n            this.server.didConnect = true;\r\n            this.server.reconnects = 0;\r\n            this.flushPending();\r\n            this.heartbeats.start();\r\n        } catch (err) {\r\n            if (timer) {\r\n                timer.cancel();\r\n            }\r\n            await this.transport.close(err);\r\n            throw err;\r\n        }\r\n    }\r\n    async _doDial(srv) {\r\n        const alts = await srv.resolve({\r\n            fn: getResolveFn(),\r\n            debug: this.options.debug,\r\n            randomize: !this.options.noRandomize\r\n        });\r\n        let lastErr = null;\r\n        for (const a of alts){\r\n            try {\r\n                lastErr = null;\r\n                this.dispatchStatus({\r\n                    type: DebugEvents.Reconnecting,\r\n                    data: a.toString()\r\n                });\r\n                await this.dial(a);\r\n                return;\r\n            } catch (err) {\r\n                lastErr = err;\r\n            }\r\n        }\r\n        throw lastErr;\r\n    }\r\n    dialLoop() {\r\n        if (this.connectPromise === null) {\r\n            this.connectPromise = this.dodialLoop();\r\n            this.connectPromise.then(()=>{}).catch(()=>{}).finally(()=>{\r\n                this.connectPromise = null;\r\n            });\r\n        }\r\n        return this.connectPromise;\r\n    }\r\n    async dodialLoop() {\r\n        let lastError;\r\n        while(true){\r\n            if (this._closed) {\r\n                this.servers.clear();\r\n            }\r\n            const wait = this.options.reconnectDelayHandler ? this.options.reconnectDelayHandler() : DEFAULT_RECONNECT_TIME_WAIT;\r\n            let maxWait = wait;\r\n            const srv = this.selectServer();\r\n            if (!srv || this.abortReconnect) {\r\n                if (lastError) {\r\n                    throw lastError;\r\n                } else if (this.lastError) {\r\n                    throw this.lastError;\r\n                } else {\r\n                    throw NatsError.errorForCode(ErrorCode.ConnectionRefused);\r\n                }\r\n            }\r\n            const now = Date.now();\r\n            if (srv.lastConnect === 0 || srv.lastConnect + wait <= now) {\r\n                srv.lastConnect = Date.now();\r\n                try {\r\n                    await this._doDial(srv);\r\n                    break;\r\n                } catch (err) {\r\n                    lastError = err;\r\n                    if (!this.connectedOnce) {\r\n                        if (this.options.waitOnFirstConnect) {\r\n                            continue;\r\n                        }\r\n                        this.servers.removeCurrentServer();\r\n                    }\r\n                    srv.reconnects++;\r\n                    const mra = this.options.maxReconnectAttempts || 0;\r\n                    if (mra !== -1 && srv.reconnects >= mra) {\r\n                        this.servers.removeCurrentServer();\r\n                    }\r\n                }\r\n            } else {\r\n                maxWait = Math.min(maxWait, srv.lastConnect + wait - now);\r\n                await delay(maxWait);\r\n            }\r\n        }\r\n    }\r\n    static async connect(options, publisher) {\r\n        const h = new ProtocolHandler(options, publisher);\r\n        await h.dialLoop();\r\n        return h;\r\n    }\r\n    static toError(s) {\r\n        const t = s ? s.toLowerCase() : \"\";\r\n        if (t.indexOf(\"permissions violation\") !== -1) {\r\n            const err = new NatsError(s, ErrorCode.PermissionsViolation);\r\n            const m = s.match(/(Publish|Subscription) to \"(\\S+)\"/);\r\n            if (m) {\r\n                err.permissionContext = {\r\n                    operation: m[1].toLowerCase(),\r\n                    subject: m[2]\r\n                };\r\n            }\r\n            return err;\r\n        } else if (t.indexOf(\"authorization violation\") !== -1) {\r\n            return new NatsError(s, ErrorCode.AuthorizationViolation);\r\n        } else if (t.indexOf(\"user authentication expired\") !== -1) {\r\n            return new NatsError(s, ErrorCode.AuthenticationExpired);\r\n        } else if (t.indexOf(\"authentication timeout\") !== -1) {\r\n            return new NatsError(s, ErrorCode.AuthenticationTimeout);\r\n        } else {\r\n            return new NatsError(s, ErrorCode.ProtocolError);\r\n        }\r\n    }\r\n    processMsg(msg, data) {\r\n        this.inMsgs++;\r\n        this.inBytes += data.length;\r\n        if (!this.subscriptions.sidCounter) {\r\n            return;\r\n        }\r\n        const sub = this.subscriptions.get(msg.sid);\r\n        if (!sub) {\r\n            return;\r\n        }\r\n        sub.received += 1;\r\n        if (sub.callback) {\r\n            sub.callback(null, new MsgImpl(msg, data, this));\r\n        }\r\n        if (sub.max !== undefined && sub.received >= sub.max) {\r\n            sub.unsubscribe();\r\n        }\r\n    }\r\n    processError(m) {\r\n        const s = decode(m);\r\n        const err = ProtocolHandler.toError(s);\r\n        const status = {\r\n            type: Events.Error,\r\n            data: err.code\r\n        };\r\n        if (err.isPermissionError()) {\r\n            let isMuxPermissionError = false;\r\n            if (err.permissionContext) {\r\n                status.permissionContext = err.permissionContext;\r\n                const mux = this.subscriptions.getMux();\r\n                isMuxPermissionError = mux?.subject === err.permissionContext.subject;\r\n            }\r\n            this.subscriptions.handleError(err);\r\n            this.muxSubscriptions.handleError(isMuxPermissionError, err);\r\n            if (isMuxPermissionError) {\r\n                this.subscriptions.setMux(null);\r\n            }\r\n        }\r\n        this.dispatchStatus(status);\r\n        this.handleError(err);\r\n    }\r\n    handleError(err) {\r\n        if (err.isAuthError()) {\r\n            this.handleAuthError(err);\r\n        } else if (err.isProtocolError()) {\r\n            this.lastError = err;\r\n        } else if (err.isAuthTimeout()) {\r\n            this.lastError = err;\r\n        }\r\n        if (!err.isPermissionError()) {\r\n            this.lastError = err;\r\n        }\r\n    }\r\n    handleAuthError(err) {\r\n        if (this.lastError && err.code === this.lastError.code && this.options.ignoreAuthErrorAbort === false) {\r\n            this.abortReconnect = true;\r\n        }\r\n        if (this.connectError) {\r\n            this.connectError(err);\r\n        } else {\r\n            this.disconnect();\r\n        }\r\n    }\r\n    processPing() {\r\n        this.transport.send(PONG_CMD);\r\n    }\r\n    processPong() {\r\n        const cb = this.pongs.shift();\r\n        if (cb) {\r\n            cb.resolve();\r\n        }\r\n    }\r\n    processInfo(m) {\r\n        const info = JSON.parse(decode(m));\r\n        this.info = info;\r\n        const updates = this.options && this.options.ignoreClusterUpdates ? undefined : this.servers.update(info);\r\n        if (!this.infoReceived) {\r\n            this.features.update(parseSemVer(info.version));\r\n            this.infoReceived = true;\r\n            if (this.transport.isEncrypted()) {\r\n                this.servers.updateTLSName();\r\n            }\r\n            const { version, lang } = this.transport;\r\n            try {\r\n                const c = new Connect({\r\n                    version,\r\n                    lang\r\n                }, this.options, info.nonce);\r\n                if (info.headers) {\r\n                    c.headers = true;\r\n                    c.no_responders = true;\r\n                }\r\n                const cs = JSON.stringify(c);\r\n                this.transport.send(encode(`CONNECT ${cs}${CR_LF}`));\r\n                this.transport.send(PING_CMD);\r\n            } catch (err) {\r\n                this._close(err);\r\n            }\r\n        }\r\n        if (updates) {\r\n            this.dispatchStatus({\r\n                type: Events.Update,\r\n                data: updates\r\n            });\r\n        }\r\n        const ldm = info.ldm !== undefined ? info.ldm : false;\r\n        if (ldm) {\r\n            this.dispatchStatus({\r\n                type: Events.LDM,\r\n                data: this.servers.getCurrentServer().toString()\r\n            });\r\n        }\r\n    }\r\n    push(e) {\r\n        switch(e.kind){\r\n            case Kind.MSG:\r\n                {\r\n                    const { msg, data } = e;\r\n                    this.processMsg(msg, data);\r\n                    break;\r\n                }\r\n            case Kind.OK:\r\n                break;\r\n            case Kind.ERR:\r\n                this.processError(e.data);\r\n                break;\r\n            case Kind.PING:\r\n                this.processPing();\r\n                break;\r\n            case Kind.PONG:\r\n                this.processPong();\r\n                break;\r\n            case Kind.INFO:\r\n                this.processInfo(e.data);\r\n                break;\r\n        }\r\n    }\r\n    sendCommand(cmd, ...payloads) {\r\n        const len = this.outbound.length();\r\n        let buf;\r\n        if (typeof cmd === \"string\") {\r\n            buf = encode(cmd);\r\n        } else {\r\n            buf = cmd;\r\n        }\r\n        this.outbound.fill(buf, ...payloads);\r\n        if (len === 0) {\r\n            queueMicrotask(()=>{\r\n                this.flushPending();\r\n            });\r\n        } else if (this.outbound.size() >= this.pendingLimit) {\r\n            this.flushPending();\r\n        }\r\n    }\r\n    publish(subject, payload = Empty, options) {\r\n        let data;\r\n        if (payload instanceof Uint8Array) {\r\n            data = payload;\r\n        } else if (typeof payload === \"string\") {\r\n            data = TE.encode(payload);\r\n        } else {\r\n            throw NatsError.errorForCode(ErrorCode.BadPayload);\r\n        }\r\n        let len = data.length;\r\n        options = options || {};\r\n        options.reply = options.reply || \"\";\r\n        let headers = Empty;\r\n        let hlen = 0;\r\n        if (options.headers) {\r\n            if (this.info && !this.info.headers) {\r\n                throw new NatsError(\"headers\", ErrorCode.ServerOptionNotAvailable);\r\n            }\r\n            const hdrs = options.headers;\r\n            headers = hdrs.encode();\r\n            hlen = headers.length;\r\n            len = data.length + hlen;\r\n        }\r\n        if (this.info && len > this.info.max_payload) {\r\n            throw NatsError.errorForCode(ErrorCode.MaxPayloadExceeded);\r\n        }\r\n        this.outBytes += len;\r\n        this.outMsgs++;\r\n        let proto;\r\n        if (options.headers) {\r\n            if (options.reply) {\r\n                proto = `HPUB ${subject} ${options.reply} ${hlen} ${len}\\r\\n`;\r\n            } else {\r\n                proto = `HPUB ${subject} ${hlen} ${len}\\r\\n`;\r\n            }\r\n            this.sendCommand(proto, headers, data, CRLF);\r\n        } else {\r\n            if (options.reply) {\r\n                proto = `PUB ${subject} ${options.reply} ${len}\\r\\n`;\r\n            } else {\r\n                proto = `PUB ${subject} ${len}\\r\\n`;\r\n            }\r\n            this.sendCommand(proto, data, CRLF);\r\n        }\r\n    }\r\n    request(r) {\r\n        this.initMux();\r\n        this.muxSubscriptions.add(r);\r\n        return r;\r\n    }\r\n    subscribe(s) {\r\n        this.subscriptions.add(s);\r\n        this._subunsub(s);\r\n        return s;\r\n    }\r\n    _sub(s) {\r\n        if (s.queue) {\r\n            this.sendCommand(`SUB ${s.subject} ${s.queue} ${s.sid}\\r\\n`);\r\n        } else {\r\n            this.sendCommand(`SUB ${s.subject} ${s.sid}\\r\\n`);\r\n        }\r\n    }\r\n    _subunsub(s) {\r\n        this._sub(s);\r\n        if (s.max) {\r\n            this.unsubscribe(s, s.max);\r\n        }\r\n        return s;\r\n    }\r\n    unsubscribe(s, max) {\r\n        this.unsub(s, max);\r\n        if (s.max === undefined || s.received >= s.max) {\r\n            this.subscriptions.cancel(s);\r\n        }\r\n    }\r\n    unsub(s, max) {\r\n        if (!s || this.isClosed()) {\r\n            return;\r\n        }\r\n        if (max) {\r\n            this.sendCommand(`UNSUB ${s.sid} ${max}\\r\\n`);\r\n        } else {\r\n            this.sendCommand(`UNSUB ${s.sid}\\r\\n`);\r\n        }\r\n        s.max = max;\r\n    }\r\n    resub(s, subject) {\r\n        if (!s || this.isClosed()) {\r\n            return;\r\n        }\r\n        s.subject = subject;\r\n        this.subscriptions.resub(s);\r\n        this._sub(s);\r\n    }\r\n    flush(p) {\r\n        if (!p) {\r\n            p = deferred();\r\n        }\r\n        this.pongs.push(p);\r\n        this.outbound.fill(PING_CMD);\r\n        this.flushPending();\r\n        return p;\r\n    }\r\n    sendSubscriptions() {\r\n        const cmds = [];\r\n        this.subscriptions.all().forEach((s)=>{\r\n            const sub = s;\r\n            if (sub.queue) {\r\n                cmds.push(`SUB ${sub.subject} ${sub.queue} ${sub.sid}${CR_LF}`);\r\n            } else {\r\n                cmds.push(`SUB ${sub.subject} ${sub.sid}${CR_LF}`);\r\n            }\r\n        });\r\n        if (cmds.length) {\r\n            this.transport.send(encode(cmds.join(\"\")));\r\n        }\r\n    }\r\n    async _close(err) {\r\n        if (this._closed) {\r\n            return;\r\n        }\r\n        this.heartbeats.cancel();\r\n        if (this.connectError) {\r\n            this.connectError(err);\r\n            this.connectError = undefined;\r\n        }\r\n        this.muxSubscriptions.close();\r\n        this.subscriptions.close();\r\n        this.listeners.forEach((l)=>{\r\n            l.stop();\r\n        });\r\n        this._closed = true;\r\n        await this.transport.close(err);\r\n        await this.closed.resolve(err);\r\n    }\r\n    close() {\r\n        return this._close();\r\n    }\r\n    isClosed() {\r\n        return this._closed;\r\n    }\r\n    drain() {\r\n        const subs = this.subscriptions.all();\r\n        const promises = [];\r\n        subs.forEach((sub)=>{\r\n            promises.push(sub.drain());\r\n        });\r\n        return Promise.all(promises).then(async ()=>{\r\n            this.noMorePublishing = true;\r\n            await this.flush();\r\n            return this.close();\r\n        }).catch(()=>{});\r\n    }\r\n    flushPending() {\r\n        if (!this.infoReceived || !this.connected) {\r\n            return;\r\n        }\r\n        if (this.outbound.size()) {\r\n            const d = this.outbound.drain();\r\n            this.transport.send(d);\r\n        }\r\n    }\r\n    initMux() {\r\n        const mux = this.subscriptions.getMux();\r\n        if (!mux) {\r\n            const inbox = this.muxSubscriptions.init(this.options.inboxPrefix);\r\n            const sub = new SubscriptionImpl(this, `${inbox}*`);\r\n            sub.callback = this.muxSubscriptions.dispatcher();\r\n            this.subscriptions.setMux(sub);\r\n            this.subscribe(sub);\r\n        }\r\n    }\r\n    selectServer() {\r\n        const server = this.servers.selectServer();\r\n        if (server === undefined) {\r\n            return undefined;\r\n        }\r\n        this.server = server;\r\n        return this.server;\r\n    }\r\n    getServer() {\r\n        return this.server;\r\n    }\r\n}\r\nclass BaseRequest {\r\n    token;\r\n    received;\r\n    ctx;\r\n    requestSubject;\r\n    mux;\r\n    constructor(mux, requestSubject, asyncTraces = true){\r\n        this.mux = mux;\r\n        this.requestSubject = requestSubject;\r\n        this.received = 0;\r\n        this.token = nuid.next();\r\n        if (asyncTraces) {\r\n            this.ctx = new Error();\r\n        }\r\n    }\r\n}\r\nclass RequestMany extends BaseRequest {\r\n    callback;\r\n    done;\r\n    timer;\r\n    max;\r\n    opts;\r\n    constructor(mux, requestSubject, opts = {\r\n        maxWait: 1000\r\n    }){\r\n        super(mux, requestSubject);\r\n        this.opts = opts;\r\n        if (typeof this.opts.callback !== \"function\") {\r\n            throw new Error(\"callback is required\");\r\n        }\r\n        this.callback = this.opts.callback;\r\n        this.max = typeof opts.maxMessages === \"number\" && opts.maxMessages > 0 ? opts.maxMessages : -1;\r\n        this.done = deferred();\r\n        this.done.then(()=>{\r\n            this.callback(null, null);\r\n        });\r\n        this.timer = setTimeout(()=>{\r\n            this.cancel();\r\n        }, opts.maxWait);\r\n    }\r\n    cancel(err) {\r\n        if (err) {\r\n            this.callback(err, null);\r\n        }\r\n        clearTimeout(this.timer);\r\n        this.mux.cancel(this);\r\n        this.done.resolve();\r\n    }\r\n    resolver(err, msg) {\r\n        if (err) {\r\n            if (this.ctx) {\r\n                err.stack += `\\n\\n${this.ctx.stack}`;\r\n            }\r\n            this.cancel(err);\r\n        } else {\r\n            this.callback(null, msg);\r\n            if (this.opts.strategy === RequestStrategy.Count) {\r\n                this.max--;\r\n                if (this.max === 0) {\r\n                    this.cancel();\r\n                }\r\n            }\r\n            if (this.opts.strategy === RequestStrategy.JitterTimer) {\r\n                clearTimeout(this.timer);\r\n                this.timer = setTimeout(()=>{\r\n                    this.cancel();\r\n                }, this.opts.jitter || 300);\r\n            }\r\n            if (this.opts.strategy === RequestStrategy.SentinelMsg) {\r\n                if (msg && msg.data.length === 0) {\r\n                    this.cancel();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nclass RequestOne extends BaseRequest {\r\n    deferred;\r\n    timer;\r\n    constructor(mux, requestSubject, opts = {\r\n        timeout: 1000\r\n    }, asyncTraces = true){\r\n        super(mux, requestSubject, asyncTraces);\r\n        this.deferred = deferred();\r\n        this.timer = timeout(opts.timeout, asyncTraces);\r\n    }\r\n    resolver(err, msg) {\r\n        if (this.timer) {\r\n            this.timer.cancel();\r\n        }\r\n        if (err) {\r\n            if (this.ctx) {\r\n                err.stack += `\\n\\n${this.ctx.stack}`;\r\n            }\r\n            this.deferred.reject(err);\r\n        } else {\r\n            this.deferred.resolve(msg);\r\n        }\r\n        this.cancel();\r\n    }\r\n    cancel(err) {\r\n        if (this.timer) {\r\n            this.timer.cancel();\r\n        }\r\n        this.mux.cancel(this);\r\n        this.deferred.reject(err ? err : NatsError.errorForCode(ErrorCode.Cancelled));\r\n    }\r\n}\r\nfunction validateDurableName(name) {\r\n    return minValidation(\"durable\", name);\r\n}\r\nfunction validateStreamName(name) {\r\n    return minValidation(\"stream\", name);\r\n}\r\nfunction minValidation(context, name = \"\") {\r\n    if (name === \"\") {\r\n        throw Error(`${context} name required`);\r\n    }\r\n    const bad = [\r\n        \".\",\r\n        \"*\",\r\n        \">\",\r\n        \"/\",\r\n        \"\\\\\",\r\n        \" \",\r\n        \"\\t\",\r\n        \"\\n\",\r\n        \"\\r\"\r\n    ];\r\n    bad.forEach((v)=>{\r\n        if (name.indexOf(v) !== -1) {\r\n            switch(v){\r\n                case \"\\n\":\r\n                    v = \"\\\\n\";\r\n                    break;\r\n                case \"\\r\":\r\n                    v = \"\\\\r\";\r\n                    break;\r\n                case \"\\t\":\r\n                    v = \"\\\\t\";\r\n                    break;\r\n                default:\r\n            }\r\n            throw Error(`invalid ${context} name - ${context} name cannot contain '${v}'`);\r\n        }\r\n    });\r\n    return \"\";\r\n}\r\nfunction validateName(context, name = \"\") {\r\n    if (name === \"\") {\r\n        throw Error(`${context} name required`);\r\n    }\r\n    const m = validName(name);\r\n    if (m.length) {\r\n        throw new Error(`invalid ${context} name - ${context} name ${m}`);\r\n    }\r\n}\r\nfunction validName(name = \"\") {\r\n    if (name === \"\") {\r\n        throw Error(`name required`);\r\n    }\r\n    const RE = /^[-\\w]+$/g;\r\n    const m = name.match(RE);\r\n    if (m === null) {\r\n        for (const c of name.split(\"\")){\r\n            const mm = c.match(RE);\r\n            if (mm === null) {\r\n                return `cannot contain '${c}'`;\r\n            }\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\nfunction nanos(millis) {\r\n    return millis * 1000000;\r\n}\r\nfunction millis(ns) {\r\n    return Math.floor(ns / 1000000);\r\n}\r\nfunction isFlowControlMsg(msg) {\r\n    if (msg.data.length > 0) {\r\n        return false;\r\n    }\r\n    const h = msg.headers;\r\n    if (!h) {\r\n        return false;\r\n    }\r\n    return h.code >= 100 && h.code < 200;\r\n}\r\nfunction isHeartbeatMsg(msg) {\r\n    return isFlowControlMsg(msg) && msg.headers?.description === \"Idle Heartbeat\";\r\n}\r\nfunction newJsErrorMsg(code, description, subject) {\r\n    const h = headers(code, description);\r\n    const arg = {\r\n        hdr: 1,\r\n        sid: 0,\r\n        size: 0\r\n    };\r\n    const msg = new MsgImpl(arg, Empty, {});\r\n    msg._headers = h;\r\n    msg._subject = subject;\r\n    return msg;\r\n}\r\nfunction checkJsError(msg) {\r\n    if (msg.data.length !== 0) {\r\n        return null;\r\n    }\r\n    const h = msg.headers;\r\n    if (!h) {\r\n        return null;\r\n    }\r\n    return checkJsErrorCode(h.code, h.description);\r\n}\r\nvar Js409Errors;\r\n(function(Js409Errors) {\r\n    Js409Errors[\"MaxBatchExceeded\"] = \"exceeded maxrequestbatch of\";\r\n    Js409Errors[\"MaxExpiresExceeded\"] = \"exceeded maxrequestexpires of\";\r\n    Js409Errors[\"MaxBytesExceeded\"] = \"exceeded maxrequestmaxbytes of\";\r\n    Js409Errors[\"MaxMessageSizeExceeded\"] = \"message size exceeds maxbytes\";\r\n    Js409Errors[\"PushConsumer\"] = \"consumer is push based\";\r\n    Js409Errors[\"MaxWaitingExceeded\"] = \"exceeded maxwaiting\";\r\n    Js409Errors[\"IdleHeartbeatMissed\"] = \"idle heartbeats missed\";\r\n    Js409Errors[\"ConsumerDeleted\"] = \"consumer deleted\";\r\n})(Js409Errors || (Js409Errors = {}));\r\nlet MAX_WAITING_FAIL = false;\r\nfunction isTerminal409(err) {\r\n    if (err.code !== ErrorCode.JetStream409) {\r\n        return false;\r\n    }\r\n    const fatal = [\r\n        Js409Errors.MaxBatchExceeded,\r\n        Js409Errors.MaxExpiresExceeded,\r\n        Js409Errors.MaxBytesExceeded,\r\n        Js409Errors.MaxMessageSizeExceeded,\r\n        Js409Errors.PushConsumer,\r\n        Js409Errors.IdleHeartbeatMissed,\r\n        Js409Errors.ConsumerDeleted\r\n    ];\r\n    if (MAX_WAITING_FAIL) {\r\n        fatal.push(Js409Errors.MaxWaitingExceeded);\r\n    }\r\n    return fatal.find((s)=>{\r\n        return err.message.indexOf(s) !== -1;\r\n    }) !== undefined;\r\n}\r\nfunction checkJsErrorCode(code, description = \"\") {\r\n    if (code < 300) {\r\n        return null;\r\n    }\r\n    description = description.toLowerCase();\r\n    switch(code){\r\n        case 404:\r\n            return new NatsError(description, ErrorCode.JetStream404NoMessages);\r\n        case 408:\r\n            return new NatsError(description, ErrorCode.JetStream408RequestTimeout);\r\n        case 409:\r\n            {\r\n                const ec = description.startsWith(Js409Errors.IdleHeartbeatMissed) ? ErrorCode.JetStreamIdleHeartBeat : ErrorCode.JetStream409;\r\n                return new NatsError(description, ec);\r\n            }\r\n        case 503:\r\n            return NatsError.errorForCode(ErrorCode.JetStreamNotEnabled, new Error(description));\r\n        default:\r\n            if (description === \"\") {\r\n                description = ErrorCode.Unknown;\r\n            }\r\n            return new NatsError(description, `${code}`);\r\n    }\r\n}\r\nconst defaultPrefix = \"$JS.API\";\r\nfunction defaultJsOptions(opts) {\r\n    opts = opts || {};\r\n    if (opts.domain) {\r\n        opts.apiPrefix = `$JS.${opts.domain}.API`;\r\n        delete opts.domain;\r\n    }\r\n    return extend({\r\n        apiPrefix: defaultPrefix,\r\n        timeout: 5000\r\n    }, opts);\r\n}\r\nclass BaseApiClient {\r\n    nc;\r\n    opts;\r\n    prefix;\r\n    timeout;\r\n    jc;\r\n    constructor(nc, opts){\r\n        this.nc = nc;\r\n        this.opts = defaultJsOptions(opts);\r\n        this._parseOpts();\r\n        this.prefix = this.opts.apiPrefix;\r\n        this.timeout = this.opts.timeout;\r\n        this.jc = JSONCodec();\r\n    }\r\n    getOptions() {\r\n        return Object.assign({}, this.opts);\r\n    }\r\n    _parseOpts() {\r\n        let prefix = this.opts.apiPrefix;\r\n        if (!prefix || prefix.length === 0) {\r\n            throw new Error(\"invalid empty prefix\");\r\n        }\r\n        const c = prefix[prefix.length - 1];\r\n        if (c === \".\") {\r\n            prefix = prefix.substr(0, prefix.length - 1);\r\n        }\r\n        this.opts.apiPrefix = prefix;\r\n    }\r\n    async _request(subj, data = null, opts) {\r\n        opts = opts || {};\r\n        opts.timeout = this.timeout;\r\n        let a = Empty;\r\n        if (data) {\r\n            a = this.jc.encode(data);\r\n        }\r\n        const m = await this.nc.request(subj, a, opts);\r\n        return this.parseJsResponse(m);\r\n    }\r\n    async findStream(subject) {\r\n        const q = {\r\n            subject\r\n        };\r\n        const r = await this._request(`${this.prefix}.STREAM.NAMES`, q);\r\n        const names = r;\r\n        if (!names.streams || names.streams.length !== 1) {\r\n            throw new Error(\"no stream matches subject\");\r\n        }\r\n        return names.streams[0];\r\n    }\r\n    getConnection() {\r\n        return this.nc;\r\n    }\r\n    parseJsResponse(m) {\r\n        const v = this.jc.decode(m.data);\r\n        const r = v;\r\n        if (r.error) {\r\n            const err = checkJsErrorCode(r.error.code, r.error.description);\r\n            if (err !== null) {\r\n                err.api_error = r.error;\r\n                throw err;\r\n            }\r\n        }\r\n        return v;\r\n    }\r\n}\r\nclass Base64Codec {\r\n    static encode(bytes) {\r\n        if (typeof bytes === \"string\") {\r\n            return btoa(bytes);\r\n        }\r\n        const a = Array.from(bytes);\r\n        return btoa(String.fromCharCode(...a));\r\n    }\r\n    static decode(s, binary = false) {\r\n        const bin = atob(s);\r\n        if (!binary) {\r\n            return bin;\r\n        }\r\n        return Uint8Array.from(bin, (c)=>c.charCodeAt(0));\r\n    }\r\n}\r\nclass Base64UrlPaddedCodec {\r\n    static encode(bytes) {\r\n        return Base64UrlPaddedCodec.toB64URLEncoding(Base64Codec.encode(bytes));\r\n    }\r\n    static decode(s, binary = false) {\r\n        return Base64UrlPaddedCodec.decode(Base64UrlPaddedCodec.fromB64URLEncoding(s), binary);\r\n    }\r\n    static toB64URLEncoding(b64str) {\r\n        return b64str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\r\n    }\r\n    static fromB64URLEncoding(b64str) {\r\n        return b64str.replace(/_/g, \"/\").replace(/-/g, \"+\");\r\n    }\r\n}\r\nvar RetentionPolicy;\r\n(function(RetentionPolicy) {\r\n    RetentionPolicy[\"Limits\"] = \"limits\";\r\n    RetentionPolicy[\"Interest\"] = \"interest\";\r\n    RetentionPolicy[\"Workqueue\"] = \"workqueue\";\r\n})(RetentionPolicy || (RetentionPolicy = {}));\r\nvar DiscardPolicy;\r\n(function(DiscardPolicy) {\r\n    DiscardPolicy[\"Old\"] = \"old\";\r\n    DiscardPolicy[\"New\"] = \"new\";\r\n})(DiscardPolicy || (DiscardPolicy = {}));\r\nvar StorageType;\r\n(function(StorageType) {\r\n    StorageType[\"File\"] = \"file\";\r\n    StorageType[\"Memory\"] = \"memory\";\r\n})(StorageType || (StorageType = {}));\r\nvar DeliverPolicy;\r\n(function(DeliverPolicy) {\r\n    DeliverPolicy[\"All\"] = \"all\";\r\n    DeliverPolicy[\"Last\"] = \"last\";\r\n    DeliverPolicy[\"New\"] = \"new\";\r\n    DeliverPolicy[\"StartSequence\"] = \"by_start_sequence\";\r\n    DeliverPolicy[\"StartTime\"] = \"by_start_time\";\r\n    DeliverPolicy[\"LastPerSubject\"] = \"last_per_subject\";\r\n})(DeliverPolicy || (DeliverPolicy = {}));\r\nvar AckPolicy;\r\n(function(AckPolicy) {\r\n    AckPolicy[\"None\"] = \"none\";\r\n    AckPolicy[\"All\"] = \"all\";\r\n    AckPolicy[\"Explicit\"] = \"explicit\";\r\n    AckPolicy[\"NotSet\"] = \"\";\r\n})(AckPolicy || (AckPolicy = {}));\r\nvar ReplayPolicy;\r\n(function(ReplayPolicy) {\r\n    ReplayPolicy[\"Instant\"] = \"instant\";\r\n    ReplayPolicy[\"Original\"] = \"original\";\r\n})(ReplayPolicy || (ReplayPolicy = {}));\r\nvar StoreCompression;\r\n(function(StoreCompression) {\r\n    StoreCompression[\"None\"] = \"none\";\r\n    StoreCompression[\"S2\"] = \"s2\";\r\n})(StoreCompression || (StoreCompression = {}));\r\nvar ConsumerApiAction;\r\n(function(ConsumerApiAction) {\r\n    ConsumerApiAction[\"CreateOrUpdate\"] = \"\";\r\n    ConsumerApiAction[\"Update\"] = \"update\";\r\n    ConsumerApiAction[\"Create\"] = \"create\";\r\n})(ConsumerApiAction || (ConsumerApiAction = {}));\r\nfunction defaultConsumer(name, opts = {}) {\r\n    return Object.assign({\r\n        name: name,\r\n        deliver_policy: DeliverPolicy.All,\r\n        ack_policy: AckPolicy.Explicit,\r\n        ack_wait: nanos(30 * 1000),\r\n        replay_policy: ReplayPolicy.Instant\r\n    }, opts);\r\n}\r\nvar AdvisoryKind;\r\n(function(AdvisoryKind) {\r\n    AdvisoryKind[\"API\"] = \"api_audit\";\r\n    AdvisoryKind[\"StreamAction\"] = \"stream_action\";\r\n    AdvisoryKind[\"ConsumerAction\"] = \"consumer_action\";\r\n    AdvisoryKind[\"SnapshotCreate\"] = \"snapshot_create\";\r\n    AdvisoryKind[\"SnapshotComplete\"] = \"snapshot_complete\";\r\n    AdvisoryKind[\"RestoreCreate\"] = \"restore_create\";\r\n    AdvisoryKind[\"RestoreComplete\"] = \"restore_complete\";\r\n    AdvisoryKind[\"MaxDeliver\"] = \"max_deliver\";\r\n    AdvisoryKind[\"Terminated\"] = \"terminated\";\r\n    AdvisoryKind[\"Ack\"] = \"consumer_ack\";\r\n    AdvisoryKind[\"StreamLeaderElected\"] = \"stream_leader_elected\";\r\n    AdvisoryKind[\"StreamQuorumLost\"] = \"stream_quorum_lost\";\r\n    AdvisoryKind[\"ConsumerLeaderElected\"] = \"consumer_leader_elected\";\r\n    AdvisoryKind[\"ConsumerQuorumLost\"] = \"consumer_quorum_lost\";\r\n})(AdvisoryKind || (AdvisoryKind = {}));\r\nvar JsHeaders;\r\n(function(JsHeaders) {\r\n    JsHeaders[\"StreamSourceHdr\"] = \"Nats-Stream-Source\";\r\n    JsHeaders[\"LastConsumerSeqHdr\"] = \"Nats-Last-Consumer\";\r\n    JsHeaders[\"LastStreamSeqHdr\"] = \"Nats-Last-Stream\";\r\n    JsHeaders[\"ConsumerStalledHdr\"] = \"Nats-Consumer-Stalled\";\r\n    JsHeaders[\"MessageSizeHdr\"] = \"Nats-Msg-Size\";\r\n    JsHeaders[\"RollupHdr\"] = \"Nats-Rollup\";\r\n    JsHeaders[\"RollupValueSubject\"] = \"sub\";\r\n    JsHeaders[\"RollupValueAll\"] = \"all\";\r\n    JsHeaders[\"PendingMessagesHdr\"] = \"Nats-Pending-Messages\";\r\n    JsHeaders[\"PendingBytesHdr\"] = \"Nats-Pending-Bytes\";\r\n})(JsHeaders || (JsHeaders = {}));\r\nvar KvWatchInclude;\r\n(function(KvWatchInclude) {\r\n    KvWatchInclude[\"LastValue\"] = \"\";\r\n    KvWatchInclude[\"AllHistory\"] = \"history\";\r\n    KvWatchInclude[\"UpdatesOnly\"] = \"updates\";\r\n})(KvWatchInclude || (KvWatchInclude = {}));\r\nvar DirectMsgHeaders;\r\n(function(DirectMsgHeaders) {\r\n    DirectMsgHeaders[\"Stream\"] = \"Nats-Stream\";\r\n    DirectMsgHeaders[\"Sequence\"] = \"Nats-Sequence\";\r\n    DirectMsgHeaders[\"TimeStamp\"] = \"Nats-Time-Stamp\";\r\n    DirectMsgHeaders[\"Subject\"] = \"Nats-Subject\";\r\n})(DirectMsgHeaders || (DirectMsgHeaders = {}));\r\nvar RepublishHeaders;\r\n(function(RepublishHeaders) {\r\n    RepublishHeaders[\"Stream\"] = \"Nats-Stream\";\r\n    RepublishHeaders[\"Subject\"] = \"Nats-Subject\";\r\n    RepublishHeaders[\"Sequence\"] = \"Nats-Sequence\";\r\n    RepublishHeaders[\"LastSequence\"] = \"Nats-Last-Sequence\";\r\n    RepublishHeaders[\"Size\"] = \"Nats-Msg-Size\";\r\n})(RepublishHeaders || (RepublishHeaders = {}));\r\nconst kvPrefix = \"KV_\";\r\nclass ConsumerOptsBuilderImpl {\r\n    config;\r\n    ordered;\r\n    mack;\r\n    stream;\r\n    callbackFn;\r\n    max;\r\n    qname;\r\n    isBind;\r\n    filters;\r\n    constructor(opts){\r\n        this.stream = \"\";\r\n        this.mack = false;\r\n        this.ordered = false;\r\n        this.config = defaultConsumer(\"\", opts || {});\r\n    }\r\n    getOpts() {\r\n        const o = {};\r\n        o.config = Object.assign({}, this.config);\r\n        if (o.config.filter_subject) {\r\n            this.filterSubject(o.config.filter_subject);\r\n            o.config.filter_subject = undefined;\r\n        }\r\n        if (o.config.filter_subjects) {\r\n            o.config.filter_subjects?.forEach((v)=>{\r\n                this.filterSubject(v);\r\n            });\r\n            o.config.filter_subjects = undefined;\r\n        }\r\n        o.mack = this.mack;\r\n        o.stream = this.stream;\r\n        o.callbackFn = this.callbackFn;\r\n        o.max = this.max;\r\n        o.queue = this.qname;\r\n        o.ordered = this.ordered;\r\n        o.config.ack_policy = o.ordered ? AckPolicy.None : o.config.ack_policy;\r\n        o.isBind = o.isBind || false;\r\n        if (this.filters) {\r\n            switch(this.filters.length){\r\n                case 0:\r\n                    break;\r\n                case 1:\r\n                    o.config.filter_subject = this.filters[0];\r\n                    break;\r\n                default:\r\n                    o.config.filter_subjects = this.filters;\r\n            }\r\n        }\r\n        return o;\r\n    }\r\n    description(description) {\r\n        this.config.description = description;\r\n        return this;\r\n    }\r\n    deliverTo(subject) {\r\n        this.config.deliver_subject = subject;\r\n        return this;\r\n    }\r\n    durable(name) {\r\n        validateDurableName(name);\r\n        this.config.durable_name = name;\r\n        return this;\r\n    }\r\n    startSequence(seq) {\r\n        if (seq <= 0) {\r\n            throw new Error(\"sequence must be greater than 0\");\r\n        }\r\n        this.config.deliver_policy = DeliverPolicy.StartSequence;\r\n        this.config.opt_start_seq = seq;\r\n        return this;\r\n    }\r\n    startTime(time) {\r\n        this.config.deliver_policy = DeliverPolicy.StartTime;\r\n        this.config.opt_start_time = time.toISOString();\r\n        return this;\r\n    }\r\n    deliverAll() {\r\n        this.config.deliver_policy = DeliverPolicy.All;\r\n        return this;\r\n    }\r\n    deliverLastPerSubject() {\r\n        this.config.deliver_policy = DeliverPolicy.LastPerSubject;\r\n        return this;\r\n    }\r\n    deliverLast() {\r\n        this.config.deliver_policy = DeliverPolicy.Last;\r\n        return this;\r\n    }\r\n    deliverNew() {\r\n        this.config.deliver_policy = DeliverPolicy.New;\r\n        return this;\r\n    }\r\n    startAtTimeDelta(millis) {\r\n        this.startTime(new Date(Date.now() - millis));\r\n        return this;\r\n    }\r\n    headersOnly() {\r\n        this.config.headers_only = true;\r\n        return this;\r\n    }\r\n    ackNone() {\r\n        this.config.ack_policy = AckPolicy.None;\r\n        return this;\r\n    }\r\n    ackAll() {\r\n        this.config.ack_policy = AckPolicy.All;\r\n        return this;\r\n    }\r\n    ackExplicit() {\r\n        this.config.ack_policy = AckPolicy.Explicit;\r\n        return this;\r\n    }\r\n    ackWait(millis) {\r\n        this.config.ack_wait = nanos(millis);\r\n        return this;\r\n    }\r\n    maxDeliver(max) {\r\n        this.config.max_deliver = max;\r\n        return this;\r\n    }\r\n    filterSubject(s) {\r\n        this.filters = this.filters || [];\r\n        this.filters.push(s);\r\n        return this;\r\n    }\r\n    replayInstantly() {\r\n        this.config.replay_policy = ReplayPolicy.Instant;\r\n        return this;\r\n    }\r\n    replayOriginal() {\r\n        this.config.replay_policy = ReplayPolicy.Original;\r\n        return this;\r\n    }\r\n    sample(n) {\r\n        n = Math.trunc(n);\r\n        if (n < 0 || n > 100) {\r\n            throw new Error(`value must be between 0-100`);\r\n        }\r\n        this.config.sample_freq = `${n}%`;\r\n        return this;\r\n    }\r\n    limit(n) {\r\n        this.config.rate_limit_bps = n;\r\n        return this;\r\n    }\r\n    maxWaiting(max) {\r\n        this.config.max_waiting = max;\r\n        return this;\r\n    }\r\n    maxAckPending(max) {\r\n        this.config.max_ack_pending = max;\r\n        return this;\r\n    }\r\n    idleHeartbeat(millis) {\r\n        this.config.idle_heartbeat = nanos(millis);\r\n        return this;\r\n    }\r\n    flowControl() {\r\n        this.config.flow_control = true;\r\n        return this;\r\n    }\r\n    deliverGroup(name) {\r\n        this.queue(name);\r\n        return this;\r\n    }\r\n    manualAck() {\r\n        this.mack = true;\r\n        return this;\r\n    }\r\n    maxMessages(max) {\r\n        this.max = max;\r\n        return this;\r\n    }\r\n    callback(fn) {\r\n        this.callbackFn = fn;\r\n        return this;\r\n    }\r\n    queue(n) {\r\n        this.qname = n;\r\n        this.config.deliver_group = n;\r\n        return this;\r\n    }\r\n    orderedConsumer() {\r\n        this.ordered = true;\r\n        return this;\r\n    }\r\n    bind(stream, durable) {\r\n        this.stream = stream;\r\n        this.config.durable_name = durable;\r\n        this.isBind = true;\r\n        return this;\r\n    }\r\n    bindStream(stream) {\r\n        this.stream = stream;\r\n        return this;\r\n    }\r\n    inactiveEphemeralThreshold(millis) {\r\n        this.config.inactive_threshold = nanos(millis);\r\n        return this;\r\n    }\r\n    maxPullBatch(n) {\r\n        this.config.max_batch = n;\r\n        return this;\r\n    }\r\n    maxPullRequestExpires(millis) {\r\n        this.config.max_expires = nanos(millis);\r\n        return this;\r\n    }\r\n    memory() {\r\n        this.config.mem_storage = true;\r\n        return this;\r\n    }\r\n    numReplicas(n) {\r\n        this.config.num_replicas = n;\r\n        return this;\r\n    }\r\n}\r\nfunction consumerOpts(opts) {\r\n    return new ConsumerOptsBuilderImpl(opts);\r\n}\r\nfunction isConsumerOptsBuilder(o) {\r\n    return typeof o.getOpts === \"function\";\r\n}\r\nfunction getLengths(b64) {\r\n    const len = b64.length;\r\n    let validLen = b64.indexOf(\"=\");\r\n    if (validLen === -1) {\r\n        validLen = len;\r\n    }\r\n    const placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\r\n    return [\r\n        validLen,\r\n        placeHoldersLen\r\n    ];\r\n}\r\nfunction init(lookup, revLookup, urlsafe = false) {\r\n    function _byteLength(validLen, placeHoldersLen) {\r\n        return Math.floor((validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen);\r\n    }\r\n    function tripletToBase64(num) {\r\n        return lookup[num >> 18 & 0x3f] + lookup[num >> 12 & 0x3f] + lookup[num >> 6 & 0x3f] + lookup[num & 0x3f];\r\n    }\r\n    function encodeChunk(buf, start, end) {\r\n        const out = new Array((end - start) / 3);\r\n        for(let i = start, curTriplet = 0; i < end; i += 3){\r\n            out[curTriplet++] = tripletToBase64((buf[i] << 16) + (buf[i + 1] << 8) + buf[i + 2]);\r\n        }\r\n        return out.join(\"\");\r\n    }\r\n    return {\r\n        byteLength (b64) {\r\n            return _byteLength.apply(null, getLengths(b64));\r\n        },\r\n        toUint8Array (b64) {\r\n            const [validLen, placeHoldersLen] = getLengths(b64);\r\n            const buf = new Uint8Array(_byteLength(validLen, placeHoldersLen));\r\n            const len = placeHoldersLen ? validLen - 4 : validLen;\r\n            let tmp;\r\n            let curByte = 0;\r\n            let i;\r\n            for(i = 0; i < len; i += 4){\r\n                tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\r\n                buf[curByte++] = tmp >> 16 & 0xff;\r\n                buf[curByte++] = tmp >> 8 & 0xff;\r\n                buf[curByte++] = tmp & 0xff;\r\n            }\r\n            if (placeHoldersLen === 2) {\r\n                tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\r\n                buf[curByte++] = tmp & 0xff;\r\n            } else if (placeHoldersLen === 1) {\r\n                tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\r\n                buf[curByte++] = tmp >> 8 & 0xff;\r\n                buf[curByte++] = tmp & 0xff;\r\n            }\r\n            return buf;\r\n        },\r\n        fromUint8Array (buf) {\r\n            const maxChunkLength = 16383;\r\n            const len = buf.length;\r\n            const extraBytes = len % 3;\r\n            const len2 = len - extraBytes;\r\n            const parts = new Array(Math.ceil(len2 / 16383) + (extraBytes ? 1 : 0));\r\n            let curChunk = 0;\r\n            let chunkEnd;\r\n            for(let i = 0; i < len2; i += maxChunkLength){\r\n                chunkEnd = i + maxChunkLength;\r\n                parts[curChunk++] = encodeChunk(buf, i, chunkEnd > len2 ? len2 : chunkEnd);\r\n            }\r\n            let tmp;\r\n            if (extraBytes === 1) {\r\n                tmp = buf[len2];\r\n                parts[curChunk] = lookup[tmp >> 2] + lookup[tmp << 4 & 0x3f];\r\n                if (!urlsafe) parts[curChunk] += \"==\";\r\n            } else if (extraBytes === 2) {\r\n                tmp = buf[len2] << 8 | buf[len2 + 1] & 0xff;\r\n                parts[curChunk] = lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3f] + lookup[tmp << 2 & 0x3f];\r\n                if (!urlsafe) parts[curChunk] += \"=\";\r\n            }\r\n            return parts.join(\"\");\r\n        }\r\n    };\r\n}\r\nconst lookup = [];\r\nconst revLookup = [];\r\nconst code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\r\nfor(let i = 0, l = code.length; i < l; ++i){\r\n    lookup[i] = code[i];\r\n    revLookup[code.charCodeAt(i)] = i;\r\n}\r\nconst { byteLength, toUint8Array, fromUint8Array } = init(lookup, revLookup, true);\r\nconst decoder = new TextDecoder();\r\nconst encoder = new TextEncoder();\r\nfunction toHexString(buf) {\r\n    return buf.reduce((hex, __byte)=>`${hex}${__byte < 16 ? \"0\" : \"\"}${__byte.toString(16)}`, \"\");\r\n}\r\nfunction fromHexString(hex) {\r\n    const len = hex.length;\r\n    if (len % 2 || !/^[0-9a-fA-F]+$/.test(hex)) {\r\n        throw new TypeError(\"Invalid hex string.\");\r\n    }\r\n    hex = hex.toLowerCase();\r\n    const buf = new Uint8Array(Math.floor(len / 2));\r\n    const end = len / 2;\r\n    for(let i = 0; i < end; ++i){\r\n        buf[i] = parseInt(hex.substr(i * 2, 2), 16);\r\n    }\r\n    return buf;\r\n}\r\nfunction decode2(buf, encoding = \"utf8\") {\r\n    if (/^utf-?8$/i.test(encoding)) {\r\n        return decoder.decode(buf);\r\n    } else if (/^base64$/i.test(encoding)) {\r\n        return fromUint8Array(buf);\r\n    } else if (/^hex(?:adecimal)?$/i.test(encoding)) {\r\n        return toHexString(buf);\r\n    } else {\r\n        throw new TypeError(\"Unsupported string encoding.\");\r\n    }\r\n}\r\nfunction encode2(str, encoding = \"utf8\") {\r\n    if (/^utf-?8$/i.test(encoding)) {\r\n        return encoder.encode(str);\r\n    } else if (/^base64$/i.test(encoding)) {\r\n        return toUint8Array(str);\r\n    } else if (/^hex(?:adecimal)?$/i.test(encoding)) {\r\n        return fromHexString(str);\r\n    } else {\r\n        throw new TypeError(\"Unsupported string encoding.\");\r\n    }\r\n}\r\nclass SHA256 {\r\n    hashSize = 32;\r\n    _buf;\r\n    _bufIdx;\r\n    _count;\r\n    _K;\r\n    _H;\r\n    _finalized;\r\n    constructor(){\r\n        this._buf = new Uint8Array(64);\r\n        this._K = new Uint32Array([\r\n            0x428a2f98,\r\n            0x71374491,\r\n            0xb5c0fbcf,\r\n            0xe9b5dba5,\r\n            0x3956c25b,\r\n            0x59f111f1,\r\n            0x923f82a4,\r\n            0xab1c5ed5,\r\n            0xd807aa98,\r\n            0x12835b01,\r\n            0x243185be,\r\n            0x550c7dc3,\r\n            0x72be5d74,\r\n            0x80deb1fe,\r\n            0x9bdc06a7,\r\n            0xc19bf174,\r\n            0xe49b69c1,\r\n            0xefbe4786,\r\n            0x0fc19dc6,\r\n            0x240ca1cc,\r\n            0x2de92c6f,\r\n            0x4a7484aa,\r\n            0x5cb0a9dc,\r\n            0x76f988da,\r\n            0x983e5152,\r\n            0xa831c66d,\r\n            0xb00327c8,\r\n            0xbf597fc7,\r\n            0xc6e00bf3,\r\n            0xd5a79147,\r\n            0x06ca6351,\r\n            0x14292967,\r\n            0x27b70a85,\r\n            0x2e1b2138,\r\n            0x4d2c6dfc,\r\n            0x53380d13,\r\n            0x650a7354,\r\n            0x766a0abb,\r\n            0x81c2c92e,\r\n            0x92722c85,\r\n            0xa2bfe8a1,\r\n            0xa81a664b,\r\n            0xc24b8b70,\r\n            0xc76c51a3,\r\n            0xd192e819,\r\n            0xd6990624,\r\n            0xf40e3585,\r\n            0x106aa070,\r\n            0x19a4c116,\r\n            0x1e376c08,\r\n            0x2748774c,\r\n            0x34b0bcb5,\r\n            0x391c0cb3,\r\n            0x4ed8aa4a,\r\n            0x5b9cca4f,\r\n            0x682e6ff3,\r\n            0x748f82ee,\r\n            0x78a5636f,\r\n            0x84c87814,\r\n            0x8cc70208,\r\n            0x90befffa,\r\n            0xa4506ceb,\r\n            0xbef9a3f7,\r\n            0xc67178f2\r\n        ]);\r\n        this.init();\r\n    }\r\n    init() {\r\n        this._H = new Uint32Array([\r\n            0x6a09e667,\r\n            0xbb67ae85,\r\n            0x3c6ef372,\r\n            0xa54ff53a,\r\n            0x510e527f,\r\n            0x9b05688c,\r\n            0x1f83d9ab,\r\n            0x5be0cd19\r\n        ]);\r\n        this._bufIdx = 0;\r\n        this._count = new Uint32Array(2);\r\n        this._buf.fill(0);\r\n        this._finalized = false;\r\n        return this;\r\n    }\r\n    update(msg, inputEncoding) {\r\n        if (msg === null) {\r\n            throw new TypeError(\"msg must be a string or Uint8Array.\");\r\n        } else if (typeof msg === \"string\") {\r\n            msg = encode2(msg, inputEncoding);\r\n        }\r\n        for(let i = 0, len = msg.length; i < len; i++){\r\n            this._buf[this._bufIdx++] = msg[i];\r\n            if (this._bufIdx === 64) {\r\n                this._transform();\r\n                this._bufIdx = 0;\r\n            }\r\n        }\r\n        const c = this._count;\r\n        if ((c[0] += msg.length << 3) < msg.length << 3) {\r\n            c[1]++;\r\n        }\r\n        c[1] += msg.length >>> 29;\r\n        return this;\r\n    }\r\n    digest(outputEncoding) {\r\n        if (this._finalized) {\r\n            throw new Error(\"digest has already been called.\");\r\n        }\r\n        this._finalized = true;\r\n        const b = this._buf;\r\n        let idx = this._bufIdx;\r\n        b[idx++] = 0x80;\r\n        while(idx !== 56){\r\n            if (idx === 64) {\r\n                this._transform();\r\n                idx = 0;\r\n            }\r\n            b[idx++] = 0;\r\n        }\r\n        const c = this._count;\r\n        b[56] = c[1] >>> 24 & 0xff;\r\n        b[57] = c[1] >>> 16 & 0xff;\r\n        b[58] = c[1] >>> 8 & 0xff;\r\n        b[59] = c[1] >>> 0 & 0xff;\r\n        b[60] = c[0] >>> 24 & 0xff;\r\n        b[61] = c[0] >>> 16 & 0xff;\r\n        b[62] = c[0] >>> 8 & 0xff;\r\n        b[63] = c[0] >>> 0 & 0xff;\r\n        this._transform();\r\n        const hash = new Uint8Array(32);\r\n        for(let i = 0; i < 8; i++){\r\n            hash[(i << 2) + 0] = this._H[i] >>> 24 & 0xff;\r\n            hash[(i << 2) + 1] = this._H[i] >>> 16 & 0xff;\r\n            hash[(i << 2) + 2] = this._H[i] >>> 8 & 0xff;\r\n            hash[(i << 2) + 3] = this._H[i] >>> 0 & 0xff;\r\n        }\r\n        this.init();\r\n        return outputEncoding ? decode2(hash, outputEncoding) : hash;\r\n    }\r\n    _transform() {\r\n        const h = this._H;\r\n        let h0 = h[0];\r\n        let h1 = h[1];\r\n        let h2 = h[2];\r\n        let h3 = h[3];\r\n        let h4 = h[4];\r\n        let h5 = h[5];\r\n        let h6 = h[6];\r\n        let h7 = h[7];\r\n        const w = new Uint32Array(16);\r\n        let i;\r\n        for(i = 0; i < 16; i++){\r\n            w[i] = this._buf[(i << 2) + 3] | this._buf[(i << 2) + 2] << 8 | this._buf[(i << 2) + 1] << 16 | this._buf[i << 2] << 24;\r\n        }\r\n        for(i = 0; i < 64; i++){\r\n            let tmp;\r\n            if (i < 16) {\r\n                tmp = w[i];\r\n            } else {\r\n                let a = w[i + 1 & 15];\r\n                let b = w[i + 14 & 15];\r\n                tmp = w[i & 15] = (a >>> 7 ^ a >>> 18 ^ a >>> 3 ^ a << 25 ^ a << 14) + (b >>> 17 ^ b >>> 19 ^ b >>> 10 ^ b << 15 ^ b << 13) + w[i & 15] + w[i + 9 & 15] | 0;\r\n            }\r\n            tmp = tmp + h7 + (h4 >>> 6 ^ h4 >>> 11 ^ h4 >>> 25 ^ h4 << 26 ^ h4 << 21 ^ h4 << 7) + (h6 ^ h4 & (h5 ^ h6)) + this._K[i] | 0;\r\n            h7 = h6;\r\n            h6 = h5;\r\n            h5 = h4;\r\n            h4 = h3 + tmp;\r\n            h3 = h2;\r\n            h2 = h1;\r\n            h1 = h0;\r\n            h0 = tmp + (h1 & h2 ^ h3 & (h1 ^ h2)) + (h1 >>> 2 ^ h1 >>> 13 ^ h1 >>> 22 ^ h1 << 30 ^ h1 << 19 ^ h1 << 10) | 0;\r\n        }\r\n        h[0] = h[0] + h0 | 0;\r\n        h[1] = h[1] + h1 | 0;\r\n        h[2] = h[2] + h2 | 0;\r\n        h[3] = h[3] + h3 | 0;\r\n        h[4] = h[4] + h4 | 0;\r\n        h[5] = h[5] + h5 | 0;\r\n        h[6] = h[6] + h6 | 0;\r\n        h[7] = h[7] + h7 | 0;\r\n    }\r\n}\r\nclass ListerImpl {\r\n    err;\r\n    offset;\r\n    pageInfo;\r\n    subject;\r\n    jsm;\r\n    filter;\r\n    payload;\r\n    constructor(subject, filter, jsm, payload){\r\n        if (!subject) {\r\n            throw new Error(\"subject is required\");\r\n        }\r\n        this.subject = subject;\r\n        this.jsm = jsm;\r\n        this.offset = 0;\r\n        this.pageInfo = {};\r\n        this.filter = filter;\r\n        this.payload = payload || {};\r\n    }\r\n    async next() {\r\n        if (this.err) {\r\n            return [];\r\n        }\r\n        if (this.pageInfo && this.offset >= this.pageInfo.total) {\r\n            return [];\r\n        }\r\n        const offset = {\r\n            offset: this.offset\r\n        };\r\n        if (this.payload) {\r\n            Object.assign(offset, this.payload);\r\n        }\r\n        try {\r\n            const r = await this.jsm._request(this.subject, offset, {\r\n                timeout: this.jsm.timeout\r\n            });\r\n            this.pageInfo = r;\r\n            this.offset += this.countResponse(r);\r\n            const a = this.filter(r);\r\n            return a;\r\n        } catch (err) {\r\n            this.err = err;\r\n            throw err;\r\n        }\r\n    }\r\n    countResponse(r) {\r\n        switch(r?.type){\r\n            case \"io.nats.jetstream.api.v1.stream_names_response\":\r\n            case \"io.nats.jetstream.api.v1.stream_list_response\":\r\n                return r.streams.length;\r\n            case \"io.nats.jetstream.api.v1.consumer_list_response\":\r\n                return r.consumers.length;\r\n            default:\r\n                console.error(`jslister.ts: unknown API response for paged output: ${r?.type}`);\r\n                return r.streams?.length || 0;\r\n        }\r\n        return 0;\r\n    }\r\n    async *[Symbol.asyncIterator]() {\r\n        let page = await this.next();\r\n        while(page.length > 0){\r\n            for (const item of page){\r\n                yield item;\r\n            }\r\n            page = await this.next();\r\n        }\r\n    }\r\n}\r\nclass ConsumerAPIImpl extends BaseApiClient {\r\n    constructor(nc, opts){\r\n        super(nc, opts);\r\n    }\r\n    async add(stream, cfg, action = ConsumerApiAction.Create) {\r\n        validateStreamName(stream);\r\n        if (cfg.deliver_group && cfg.flow_control) {\r\n            throw new Error(\"jetstream flow control is not supported with queue groups\");\r\n        }\r\n        if (cfg.deliver_group && cfg.idle_heartbeat) {\r\n            throw new Error(\"jetstream idle heartbeat is not supported with queue groups\");\r\n        }\r\n        const cr = {};\r\n        cr.config = cfg;\r\n        cr.stream_name = stream;\r\n        cr.action = action;\r\n        if (cr.config.durable_name) {\r\n            validateDurableName(cr.config.durable_name);\r\n        }\r\n        const nci = this.nc;\r\n        let { min, ok: newAPI } = nci.features.get(Feature.JS_NEW_CONSUMER_CREATE_API);\r\n        const name = cfg.name === \"\" ? undefined : cfg.name;\r\n        if (name && !newAPI) {\r\n            throw new Error(`consumer 'name' requires server ${min}`);\r\n        }\r\n        if (name) {\r\n            try {\r\n                minValidation(\"name\", name);\r\n            } catch (err) {\r\n                const m = err.message;\r\n                const idx = m.indexOf(\"cannot contain\");\r\n                if (idx !== -1) {\r\n                    throw new Error(`consumer 'name' ${m.substring(idx)}`);\r\n                }\r\n                throw err;\r\n            }\r\n        }\r\n        let subj;\r\n        let consumerName = \"\";\r\n        if (Array.isArray(cfg.filter_subjects)) {\r\n            const { min, ok } = nci.features.get(Feature.JS_MULTIPLE_CONSUMER_FILTER);\r\n            if (!ok) {\r\n                throw new Error(`consumer 'filter_subjects' requires server ${min}`);\r\n            }\r\n            newAPI = false;\r\n        }\r\n        if (cfg.metadata) {\r\n            const { min, ok } = nci.features.get(Feature.JS_STREAM_CONSUMER_METADATA);\r\n            if (!ok) {\r\n                throw new Error(`consumer 'metadata' requires server ${min}`);\r\n            }\r\n        }\r\n        if (newAPI) {\r\n            consumerName = cfg.name ?? cfg.durable_name ?? \"\";\r\n        }\r\n        if (consumerName !== \"\") {\r\n            let fs = cfg.filter_subject ?? undefined;\r\n            if (fs === \">\") {\r\n                fs = undefined;\r\n            }\r\n            subj = fs !== undefined ? `${this.prefix}.CONSUMER.CREATE.${stream}.${consumerName}.${fs}` : `${this.prefix}.CONSUMER.CREATE.${stream}.${consumerName}`;\r\n        } else {\r\n            subj = cfg.durable_name ? `${this.prefix}.CONSUMER.DURABLE.CREATE.${stream}.${cfg.durable_name}` : `${this.prefix}.CONSUMER.CREATE.${stream}`;\r\n        }\r\n        const r = await this._request(subj, cr);\r\n        return r;\r\n    }\r\n    async update(stream, durable, cfg) {\r\n        const ci = await this.info(stream, durable);\r\n        const changable = cfg;\r\n        return this.add(stream, Object.assign(ci.config, changable), ConsumerApiAction.Update);\r\n    }\r\n    async info(stream, name) {\r\n        validateStreamName(stream);\r\n        validateDurableName(name);\r\n        const r = await this._request(`${this.prefix}.CONSUMER.INFO.${stream}.${name}`);\r\n        return r;\r\n    }\r\n    async delete(stream, name) {\r\n        validateStreamName(stream);\r\n        validateDurableName(name);\r\n        const r = await this._request(`${this.prefix}.CONSUMER.DELETE.${stream}.${name}`);\r\n        const cr = r;\r\n        return cr.success;\r\n    }\r\n    list(stream) {\r\n        validateStreamName(stream);\r\n        const filter = (v)=>{\r\n            const clr = v;\r\n            return clr.consumers;\r\n        };\r\n        const subj = `${this.prefix}.CONSUMER.LIST.${stream}`;\r\n        return new ListerImpl(subj, filter, this);\r\n    }\r\n}\r\nconst ACK = Uint8Array.of(43, 65, 67, 75);\r\nconst NAK = Uint8Array.of(45, 78, 65, 75);\r\nconst WPI = Uint8Array.of(43, 87, 80, 73);\r\nconst NXT = Uint8Array.of(43, 78, 88, 84);\r\nconst TERM = Uint8Array.of(43, 84, 69, 82, 77);\r\nconst SPACE = Uint8Array.of(32);\r\nfunction toJsMsg(m) {\r\n    return new JsMsgImpl(m);\r\n}\r\nfunction parseInfo(s) {\r\n    const tokens = s.split(\".\");\r\n    if (tokens.length === 9) {\r\n        tokens.splice(2, 0, \"_\", \"\");\r\n    }\r\n    if (tokens.length < 11 || tokens[0] !== \"$JS\" || tokens[1] !== \"ACK\") {\r\n        throw new Error(`not js message`);\r\n    }\r\n    const di = {};\r\n    di.domain = tokens[2] === \"_\" ? \"\" : tokens[2];\r\n    di.account_hash = tokens[3];\r\n    di.stream = tokens[4];\r\n    di.consumer = tokens[5];\r\n    di.redeliveryCount = parseInt(tokens[6], 10);\r\n    di.redelivered = di.redeliveryCount > 1;\r\n    di.streamSequence = parseInt(tokens[7], 10);\r\n    di.deliverySequence = parseInt(tokens[8], 10);\r\n    di.timestampNanos = parseInt(tokens[9], 10);\r\n    di.pending = parseInt(tokens[10], 10);\r\n    return di;\r\n}\r\nclass JsMsgImpl {\r\n    msg;\r\n    di;\r\n    didAck;\r\n    constructor(msg){\r\n        this.msg = msg;\r\n        this.didAck = false;\r\n    }\r\n    get subject() {\r\n        return this.msg.subject;\r\n    }\r\n    get sid() {\r\n        return this.msg.sid;\r\n    }\r\n    get data() {\r\n        return this.msg.data;\r\n    }\r\n    get headers() {\r\n        return this.msg.headers;\r\n    }\r\n    get info() {\r\n        if (!this.di) {\r\n            this.di = parseInfo(this.reply);\r\n        }\r\n        return this.di;\r\n    }\r\n    get redelivered() {\r\n        return this.info.redeliveryCount > 1;\r\n    }\r\n    get reply() {\r\n        return this.msg.reply || \"\";\r\n    }\r\n    get seq() {\r\n        return this.info.streamSequence;\r\n    }\r\n    doAck(payload) {\r\n        if (!this.didAck) {\r\n            this.didAck = !this.isWIP(payload);\r\n            this.msg.respond(payload);\r\n        }\r\n    }\r\n    isWIP(p) {\r\n        return p.length === 4 && p[0] === WPI[0] && p[1] === WPI[1] && p[2] === WPI[2] && p[3] === WPI[3];\r\n    }\r\n    async ackAck() {\r\n        if (!this.didAck) {\r\n            this.didAck = true;\r\n            if (this.msg.reply) {\r\n                const mi = this.msg;\r\n                const proto = mi.publisher;\r\n                const trace = !(proto.options?.noAsyncTraces || false);\r\n                const r = new RequestOne(proto.muxSubscriptions, this.msg.reply, {\r\n                    timeout: 1000\r\n                }, trace);\r\n                proto.request(r);\r\n                try {\r\n                    proto.publish(this.msg.reply, ACK, {\r\n                        reply: `${proto.muxSubscriptions.baseInbox}${r.token}`\r\n                    });\r\n                } catch (err) {\r\n                    r.cancel(err);\r\n                }\r\n                try {\r\n                    await Promise.race([\r\n                        r.timer,\r\n                        r.deferred\r\n                    ]);\r\n                    return true;\r\n                } catch (err) {\r\n                    r.cancel(err);\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    ack() {\r\n        this.doAck(ACK);\r\n    }\r\n    nak(millis) {\r\n        let payload = NAK;\r\n        if (millis) {\r\n            payload = StringCodec().encode(`-NAK ${JSON.stringify({\r\n                delay: nanos(millis)\r\n            })}`);\r\n        }\r\n        this.doAck(payload);\r\n    }\r\n    working() {\r\n        this.doAck(WPI);\r\n    }\r\n    next(subj, opts = {\r\n        batch: 1\r\n    }) {\r\n        const args = {};\r\n        args.batch = opts.batch || 1;\r\n        args.no_wait = opts.no_wait || false;\r\n        if (opts.expires && opts.expires > 0) {\r\n            args.expires = nanos(opts.expires);\r\n        }\r\n        const data = JSONCodec().encode(args);\r\n        const payload = DataBuffer.concat(NXT, SPACE, data);\r\n        const reqOpts = subj ? {\r\n            reply: subj\r\n        } : undefined;\r\n        this.msg.respond(payload, reqOpts);\r\n    }\r\n    term(reason = \"\") {\r\n        let term = TERM;\r\n        if (reason?.length > 0) {\r\n            term = StringCodec().encode(`+TERM ${reason}`);\r\n        }\r\n        this.doAck(term);\r\n    }\r\n    json() {\r\n        return this.msg.json();\r\n    }\r\n    string() {\r\n        return this.msg.string();\r\n    }\r\n}\r\nfunction checkFn(fn, name, required = false) {\r\n    if (required === true && !fn) {\r\n        throw NatsError.errorForCode(ErrorCode.ApiError, new Error(`${name} is not a function`));\r\n    }\r\n    if (fn && typeof fn !== \"function\") {\r\n        throw NatsError.errorForCode(ErrorCode.ApiError, new Error(`${name} is not a function`));\r\n    }\r\n}\r\nclass TypedSubscription extends QueuedIteratorImpl {\r\n    sub;\r\n    adapter;\r\n    subIterDone;\r\n    constructor(nc, subject, opts){\r\n        super();\r\n        checkFn(opts.adapter, \"adapter\", true);\r\n        this.adapter = opts.adapter;\r\n        if (opts.callback) {\r\n            checkFn(opts.callback, \"callback\");\r\n        }\r\n        this.noIterator = typeof opts.callback === \"function\";\r\n        if (opts.ingestionFilterFn) {\r\n            checkFn(opts.ingestionFilterFn, \"ingestionFilterFn\");\r\n            this.ingestionFilterFn = opts.ingestionFilterFn;\r\n        }\r\n        if (opts.protocolFilterFn) {\r\n            checkFn(opts.protocolFilterFn, \"protocolFilterFn\");\r\n            this.protocolFilterFn = opts.protocolFilterFn;\r\n        }\r\n        if (opts.dispatchedFn) {\r\n            checkFn(opts.dispatchedFn, \"dispatchedFn\");\r\n            this.dispatchedFn = opts.dispatchedFn;\r\n        }\r\n        if (opts.cleanupFn) {\r\n            checkFn(opts.cleanupFn, \"cleanupFn\");\r\n        }\r\n        let callback = (err, msg)=>{\r\n            this.callback(err, msg);\r\n        };\r\n        if (opts.callback) {\r\n            const uh = opts.callback;\r\n            callback = (err, msg)=>{\r\n                const [jer, tm] = this.adapter(err, msg);\r\n                if (jer) {\r\n                    uh(jer, null);\r\n                    return;\r\n                }\r\n                const { ingest } = this.ingestionFilterFn ? this.ingestionFilterFn(tm, this) : {\r\n                    ingest: true\r\n                };\r\n                if (ingest) {\r\n                    const ok = this.protocolFilterFn ? this.protocolFilterFn(tm) : true;\r\n                    if (ok) {\r\n                        uh(jer, tm);\r\n                        if (this.dispatchedFn && tm) {\r\n                            this.dispatchedFn(tm);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        const { max, queue, timeout } = opts;\r\n        const sopts = {\r\n            queue,\r\n            timeout,\r\n            callback\r\n        };\r\n        if (max && max > 0) {\r\n            sopts.max = max;\r\n        }\r\n        this.sub = nc.subscribe(subject, sopts);\r\n        if (opts.cleanupFn) {\r\n            this.sub.cleanupFn = opts.cleanupFn;\r\n        }\r\n        if (!this.noIterator) {\r\n            this.iterClosed.then(()=>{\r\n                this.unsubscribe();\r\n            });\r\n        }\r\n        this.subIterDone = deferred();\r\n        Promise.all([\r\n            this.sub.closed,\r\n            this.iterClosed\r\n        ]).then(()=>{\r\n            this.subIterDone.resolve();\r\n        }).catch(()=>{\r\n            this.subIterDone.resolve();\r\n        });\r\n        (async (s)=>{\r\n            await s.closed;\r\n            this.stop();\r\n        })(this.sub).then().catch();\r\n    }\r\n    unsubscribe(max) {\r\n        this.sub.unsubscribe(max);\r\n    }\r\n    drain() {\r\n        return this.sub.drain();\r\n    }\r\n    isDraining() {\r\n        return this.sub.isDraining();\r\n    }\r\n    isClosed() {\r\n        return this.sub.isClosed();\r\n    }\r\n    callback(e, msg) {\r\n        this.sub.cancelTimeout();\r\n        const [err, tm] = this.adapter(e, msg);\r\n        if (err) {\r\n            this.stop(err);\r\n        }\r\n        if (tm) {\r\n            this.push(tm);\r\n        }\r\n    }\r\n    getSubject() {\r\n        return this.sub.getSubject();\r\n    }\r\n    getReceived() {\r\n        return this.sub.getReceived();\r\n    }\r\n    getProcessed() {\r\n        return this.sub.getProcessed();\r\n    }\r\n    getPending() {\r\n        return this.sub.getPending();\r\n    }\r\n    getID() {\r\n        return this.sub.getID();\r\n    }\r\n    getMax() {\r\n        return this.sub.getMax();\r\n    }\r\n    get closed() {\r\n        return this.sub.closed;\r\n    }\r\n}\r\nclass IdleHeartbeatMonitor {\r\n    interval;\r\n    maxOut;\r\n    cancelAfter;\r\n    timer;\r\n    autoCancelTimer;\r\n    last;\r\n    missed;\r\n    count;\r\n    callback;\r\n    constructor(interval, cb, opts = {\r\n        maxOut: 2\r\n    }){\r\n        this.interval = interval;\r\n        this.maxOut = opts?.maxOut || 2;\r\n        this.cancelAfter = opts?.cancelAfter || 0;\r\n        this.last = Date.now();\r\n        this.missed = 0;\r\n        this.count = 0;\r\n        this.callback = cb;\r\n        this._schedule();\r\n    }\r\n    cancel() {\r\n        if (this.autoCancelTimer) {\r\n            clearTimeout(this.autoCancelTimer);\r\n        }\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n        }\r\n        this.timer = 0;\r\n        this.autoCancelTimer = 0;\r\n    }\r\n    work() {\r\n        this.last = Date.now();\r\n        this.missed = 0;\r\n    }\r\n    _change(interval, cancelAfter = 0, maxOut = 2) {\r\n        this.interval = interval;\r\n        this.maxOut = maxOut;\r\n        this.cancelAfter = cancelAfter;\r\n        this.restart();\r\n    }\r\n    restart() {\r\n        this.cancel();\r\n        this._schedule();\r\n    }\r\n    _schedule() {\r\n        if (this.cancelAfter > 0) {\r\n            this.autoCancelTimer = setTimeout(()=>{\r\n                this.cancel();\r\n            }, this.cancelAfter);\r\n        }\r\n        this.timer = setInterval(()=>{\r\n            this.count++;\r\n            if (Date.now() - this.last > this.interval) {\r\n                this.missed++;\r\n            }\r\n            if (this.missed >= this.maxOut) {\r\n                try {\r\n                    if (this.callback(this.missed) === true) {\r\n                        this.cancel();\r\n                    }\r\n                } catch (err) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }, this.interval);\r\n    }\r\n}\r\nvar PullConsumerType;\r\n(function(PullConsumerType) {\r\n    PullConsumerType[PullConsumerType[\"Unset\"] = -1] = \"Unset\";\r\n    PullConsumerType[PullConsumerType[\"Consume\"] = 0] = \"Consume\";\r\n    PullConsumerType[PullConsumerType[\"Fetch\"] = 1] = \"Fetch\";\r\n})(PullConsumerType || (PullConsumerType = {}));\r\nvar ConsumerEvents;\r\n(function(ConsumerEvents) {\r\n    ConsumerEvents[\"HeartbeatsMissed\"] = \"heartbeats_missed\";\r\n    ConsumerEvents[\"ConsumerNotFound\"] = \"consumer_not_found\";\r\n    ConsumerEvents[\"OrderedConsumerRecreated\"] = \"ordered_consumer_recreated\";\r\n})(ConsumerEvents || (ConsumerEvents = {}));\r\nvar ConsumerDebugEvents;\r\n(function(ConsumerDebugEvents) {\r\n    ConsumerDebugEvents[\"DebugEvent\"] = \"debug\";\r\n    ConsumerDebugEvents[\"Discard\"] = \"discard\";\r\n    ConsumerDebugEvents[\"Next\"] = \"next\";\r\n})(ConsumerDebugEvents || (ConsumerDebugEvents = {}));\r\nclass PullConsumerMessagesImpl extends QueuedIteratorImpl {\r\n    consumer;\r\n    opts;\r\n    sub;\r\n    monitor;\r\n    pending;\r\n    inbox;\r\n    refilling;\r\n    stack;\r\n    pong;\r\n    callback;\r\n    timeout;\r\n    cleanupHandler;\r\n    listeners;\r\n    statusIterator;\r\n    forOrderedConsumer;\r\n    resetHandler;\r\n    constructor(c, opts, refilling = false){\r\n        super();\r\n        this.consumer = c;\r\n        this.opts = this.parseOptions(opts, refilling);\r\n        this.callback = opts.callback || null;\r\n        this.noIterator = typeof this.callback === \"function\";\r\n        this.monitor = null;\r\n        this.pong = null;\r\n        this.pending = {\r\n            msgs: 0,\r\n            bytes: 0,\r\n            requests: 0\r\n        };\r\n        this.refilling = refilling;\r\n        this.stack = new Error().stack.split(\"\\n\").slice(1).join(\"\\n\");\r\n        this.timeout = null;\r\n        this.inbox = createInbox(c.api.nc.options.inboxPrefix);\r\n        this.listeners = [];\r\n        this.forOrderedConsumer = false;\r\n        this.start();\r\n    }\r\n    start() {\r\n        const { max_messages, max_bytes, idle_heartbeat, threshold_bytes, threshold_messages } = this.opts;\r\n        this.closed().then(()=>{\r\n            if (this.cleanupHandler) {\r\n                try {\r\n                    this.cleanupHandler();\r\n                } catch (_err) {}\r\n            }\r\n        });\r\n        const { sub } = this;\r\n        if (sub) {\r\n            sub.unsubscribe();\r\n        }\r\n        this.sub = this.consumer.api.nc.subscribe(this.inbox, {\r\n            callback: (err, msg)=>{\r\n                if (err) {\r\n                    this.stop();\r\n                    return;\r\n                }\r\n                this.monitor?.work();\r\n                const isProtocol = msg.subject === this.inbox;\r\n                if (isProtocol) {\r\n                    if (isHeartbeatMsg(msg)) {\r\n                        return;\r\n                    }\r\n                    const code = msg.headers?.code;\r\n                    const description = msg.headers?.description?.toLowerCase() || \"unknown\";\r\n                    const { msgsLeft, bytesLeft } = this.parseDiscard(msg.headers);\r\n                    if (msgsLeft > 0 || bytesLeft > 0) {\r\n                        this.pending.msgs -= msgsLeft;\r\n                        this.pending.bytes -= bytesLeft;\r\n                        this.pending.requests--;\r\n                        this.notify(ConsumerDebugEvents.Discard, {\r\n                            msgsLeft,\r\n                            bytesLeft\r\n                        });\r\n                    } else {\r\n                        const toErr = ()=>{\r\n                            const err = new NatsError(description, `${code}`);\r\n                            err.stack += `\\n\\n${this.stack}`;\r\n                            return err;\r\n                        };\r\n                        if (code === 400) {\r\n                            const error = toErr();\r\n                            this._push(()=>{\r\n                                this.stop(error);\r\n                            });\r\n                        } else if (code === 409 && description === \"consumer deleted\") {\r\n                            const error = toErr();\r\n                            this.stop(error);\r\n                        } else {\r\n                            this.notify(ConsumerDebugEvents.DebugEvent, `${code} ${description}`);\r\n                        }\r\n                    }\r\n                } else {\r\n                    this._push(toJsMsg(msg));\r\n                    this.received++;\r\n                    if (this.pending.msgs) {\r\n                        this.pending.msgs--;\r\n                    }\r\n                    if (this.pending.bytes) {\r\n                        this.pending.bytes -= msg.size();\r\n                    }\r\n                }\r\n                if (this.pending.msgs === 0 && this.pending.bytes === 0) {\r\n                    this.pending.requests = 0;\r\n                }\r\n                if (this.refilling) {\r\n                    if (max_messages && this.pending.msgs <= threshold_messages || max_bytes && this.pending.bytes <= threshold_bytes) {\r\n                        const batch = this.pullOptions();\r\n                        this.pull(batch);\r\n                    }\r\n                } else if (this.pending.requests === 0) {\r\n                    this._push(()=>{\r\n                        this.stop();\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        this.sub.closed.then(()=>{\r\n            if (this.sub.draining) {\r\n                this._push(()=>{\r\n                    this.stop();\r\n                });\r\n            }\r\n        });\r\n        if (idle_heartbeat) {\r\n            this.monitor = new IdleHeartbeatMonitor(idle_heartbeat, (data)=>{\r\n                this.notify(ConsumerEvents.HeartbeatsMissed, data);\r\n                this.resetPending().then(()=>{}).catch(()=>{});\r\n                return false;\r\n            }, {\r\n                maxOut: 2\r\n            });\r\n        }\r\n        (async ()=>{\r\n            const status = this.consumer.api.nc.status();\r\n            this.statusIterator = status;\r\n            for await (const s of status){\r\n                switch(s.type){\r\n                    case Events.Disconnect:\r\n                        this.monitor?.cancel();\r\n                        break;\r\n                    case Events.Reconnect:\r\n                        this.resetPending().then((ok)=>{\r\n                            if (ok) {\r\n                                this.monitor?.restart();\r\n                            }\r\n                        }).catch(()=>{});\r\n                        break;\r\n                    default:\r\n                }\r\n            }\r\n        })();\r\n        this.pull(this.pullOptions());\r\n    }\r\n    _push(r) {\r\n        if (!this.callback) {\r\n            super.push(r);\r\n        } else {\r\n            const fn = typeof r === \"function\" ? r : null;\r\n            try {\r\n                if (!fn) {\r\n                    this.callback(r);\r\n                } else {\r\n                    fn();\r\n                }\r\n            } catch (err) {\r\n                this.stop(err);\r\n            }\r\n        }\r\n    }\r\n    notify(type, data) {\r\n        if (this.listeners.length > 0) {\r\n            (()=>{\r\n                this.listeners.forEach((l)=>{\r\n                    if (!l.done) {\r\n                        l.push({\r\n                            type,\r\n                            data\r\n                        });\r\n                    }\r\n                });\r\n            })();\r\n        }\r\n    }\r\n    async resetPending() {\r\n        let notFound = 0;\r\n        const bo = backoff();\r\n        let attempt = 0;\r\n        while(true){\r\n            if (this.consumer.api.nc.isClosed()) {\r\n                console.error(\"aborting resetPending - connection is closed\");\r\n                return false;\r\n            }\r\n            try {\r\n                await this.consumer.info();\r\n                notFound = 0;\r\n                this.pending.msgs = 0;\r\n                this.pending.bytes = 0;\r\n                this.pending.requests = 0;\r\n                this.pull(this.pullOptions());\r\n                return true;\r\n            } catch (err) {\r\n                if (err.message === \"consumer not found\") {\r\n                    notFound++;\r\n                    this.notify(ConsumerEvents.ConsumerNotFound, notFound);\r\n                    if (this.resetHandler) {\r\n                        try {\r\n                            this.resetHandler();\r\n                        } catch (_) {}\r\n                    }\r\n                    if (this.forOrderedConsumer) {\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    notFound = 0;\r\n                }\r\n                const to = bo.backoff(attempt);\r\n                await Promise.race([\r\n                    delay(to),\r\n                    this.consumer.api.nc.closed()\r\n                ]);\r\n                attempt++;\r\n            }\r\n        }\r\n    }\r\n    pull(opts) {\r\n        this.pending.bytes += opts.max_bytes ?? 0;\r\n        this.pending.msgs += opts.batch ?? 0;\r\n        this.pending.requests++;\r\n        const nc = this.consumer.api.nc;\r\n        this._push(()=>{\r\n            nc.publish(`${this.consumer.api.prefix}.CONSUMER.MSG.NEXT.${this.consumer.stream}.${this.consumer.name}`, this.consumer.api.jc.encode(opts), {\r\n                reply: this.inbox\r\n            });\r\n            this.notify(ConsumerDebugEvents.Next, opts);\r\n        });\r\n    }\r\n    pullOptions() {\r\n        const batch = this.opts.max_messages - this.pending.msgs;\r\n        const max_bytes = this.opts.max_bytes - this.pending.bytes;\r\n        const idle_heartbeat = nanos(this.opts.idle_heartbeat);\r\n        const expires = nanos(this.opts.expires);\r\n        return {\r\n            batch,\r\n            max_bytes,\r\n            idle_heartbeat,\r\n            expires\r\n        };\r\n    }\r\n    parseDiscard(headers) {\r\n        const discard = {\r\n            msgsLeft: 0,\r\n            bytesLeft: 0\r\n        };\r\n        const msgsLeft = headers?.get(JsHeaders.PendingMessagesHdr);\r\n        if (msgsLeft) {\r\n            discard.msgsLeft = parseInt(msgsLeft);\r\n        }\r\n        const bytesLeft = headers?.get(JsHeaders.PendingBytesHdr);\r\n        if (bytesLeft) {\r\n            discard.bytesLeft = parseInt(bytesLeft);\r\n        }\r\n        return discard;\r\n    }\r\n    trackTimeout(t) {\r\n        this.timeout = t;\r\n    }\r\n    close() {\r\n        this.stop();\r\n        return this.iterClosed;\r\n    }\r\n    closed() {\r\n        return this.iterClosed;\r\n    }\r\n    clearTimers() {\r\n        this.monitor?.cancel();\r\n        this.monitor = null;\r\n        this.timeout?.cancel();\r\n        this.timeout = null;\r\n    }\r\n    setCleanupHandler(fn) {\r\n        this.cleanupHandler = fn;\r\n    }\r\n    stop(err) {\r\n        this.sub?.unsubscribe();\r\n        this.clearTimers();\r\n        this.statusIterator?.stop();\r\n        this._push(()=>{\r\n            super.stop(err);\r\n            this.listeners.forEach((n)=>{\r\n                n.stop();\r\n            });\r\n        });\r\n    }\r\n    parseOptions(opts, refilling = false) {\r\n        const args = opts || {};\r\n        args.max_messages = args.max_messages || 0;\r\n        args.max_bytes = args.max_bytes || 0;\r\n        if (args.max_messages !== 0 && args.max_bytes !== 0) {\r\n            throw new Error(`only specify one of max_messages or max_bytes`);\r\n        }\r\n        if (args.max_messages === 0) {\r\n            args.max_messages = 100;\r\n        }\r\n        args.expires = args.expires || 30_000;\r\n        if (args.expires < 1000) {\r\n            throw new Error(\"expires should be at least 1000ms\");\r\n        }\r\n        args.idle_heartbeat = args.idle_heartbeat || args.expires / 2;\r\n        args.idle_heartbeat = args.idle_heartbeat > 30_000 ? 30_000 : args.idle_heartbeat;\r\n        if (refilling) {\r\n            const minMsgs = Math.round(args.max_messages * .75) || 1;\r\n            args.threshold_messages = args.threshold_messages || minMsgs;\r\n            const minBytes = Math.round(args.max_bytes * .75) || 1;\r\n            args.threshold_bytes = args.threshold_bytes || minBytes;\r\n        }\r\n        return args;\r\n    }\r\n    status() {\r\n        const iter = new QueuedIteratorImpl();\r\n        this.listeners.push(iter);\r\n        return Promise.resolve(iter);\r\n    }\r\n}\r\nclass OrderedConsumerMessages extends QueuedIteratorImpl {\r\n    src;\r\n    listeners;\r\n    constructor(){\r\n        super();\r\n        this.listeners = [];\r\n    }\r\n    setSource(src) {\r\n        if (this.src) {\r\n            this.src.resetHandler = undefined;\r\n            this.src.setCleanupHandler();\r\n            this.src.stop();\r\n        }\r\n        this.src = src;\r\n        this.src.setCleanupHandler(()=>{\r\n            this.close().catch();\r\n        });\r\n        (async ()=>{\r\n            const status = await this.src.status();\r\n            for await (const s of status){\r\n                this.notify(s.type, s.data);\r\n            }\r\n        })().catch(()=>{});\r\n    }\r\n    notify(type, data) {\r\n        if (this.listeners.length > 0) {\r\n            (()=>{\r\n                this.listeners.forEach((l)=>{\r\n                    if (!l.done) {\r\n                        l.push({\r\n                            type,\r\n                            data\r\n                        });\r\n                    }\r\n                });\r\n            })();\r\n        }\r\n    }\r\n    stop(err) {\r\n        this.src?.stop(err);\r\n        super.stop(err);\r\n        this.listeners.forEach((n)=>{\r\n            n.stop();\r\n        });\r\n    }\r\n    close() {\r\n        this.stop();\r\n        return this.iterClosed;\r\n    }\r\n    status() {\r\n        const iter = new QueuedIteratorImpl();\r\n        this.listeners.push(iter);\r\n        return Promise.resolve(iter);\r\n    }\r\n}\r\nclass PullConsumerImpl {\r\n    api;\r\n    _info;\r\n    stream;\r\n    name;\r\n    constructor(api, info){\r\n        this.api = api;\r\n        this._info = info;\r\n        this.stream = info.stream_name;\r\n        this.name = info.name;\r\n    }\r\n    consume(opts = {\r\n        max_messages: 100,\r\n        expires: 30_000\r\n    }) {\r\n        return Promise.resolve(new PullConsumerMessagesImpl(this, opts, true));\r\n    }\r\n    fetch(opts = {\r\n        max_messages: 100,\r\n        expires: 30_000\r\n    }) {\r\n        const m = new PullConsumerMessagesImpl(this, opts, false);\r\n        const to = Math.round(m.opts.expires * 1.05);\r\n        const timer = timeout(to);\r\n        m.closed().then(()=>{\r\n            timer.cancel();\r\n        });\r\n        timer.catch(()=>{\r\n            m.close().catch();\r\n        });\r\n        m.trackTimeout(timer);\r\n        return Promise.resolve(m);\r\n    }\r\n    next(opts = {\r\n        expires: 30_000\r\n    }) {\r\n        const d = deferred();\r\n        const fopts = opts;\r\n        fopts.max_messages = 1;\r\n        const iter = new PullConsumerMessagesImpl(this, fopts, false);\r\n        const to = Math.round(iter.opts.expires * 1.05);\r\n        if (to >= 60_000) {\r\n            (async ()=>{\r\n                for await (const s of (await iter.status())){\r\n                    if (s.type === ConsumerEvents.HeartbeatsMissed && s.data >= 2) {\r\n                        d.reject(new Error(\"consumer missed heartbeats\"));\r\n                        break;\r\n                    }\r\n                }\r\n            })().catch();\r\n        }\r\n        (async ()=>{\r\n            for await (const m of iter){\r\n                d.resolve(m);\r\n                break;\r\n            }\r\n        })().catch();\r\n        const timer = timeout(to);\r\n        iter.closed().then(()=>{\r\n            d.resolve(null);\r\n            timer.cancel();\r\n        }).catch((err)=>{\r\n            d.reject(err);\r\n        });\r\n        timer.catch((_err)=>{\r\n            d.resolve(null);\r\n            iter.close().catch();\r\n        });\r\n        iter.trackTimeout(timer);\r\n        return d;\r\n    }\r\n    delete() {\r\n        const { stream_name, name } = this._info;\r\n        return this.api.delete(stream_name, name);\r\n    }\r\n    info(cached = false) {\r\n        if (cached) {\r\n            return Promise.resolve(this._info);\r\n        }\r\n        const { stream_name, name } = this._info;\r\n        return this.api.info(stream_name, name).then((ci)=>{\r\n            this._info = ci;\r\n            return this._info;\r\n        });\r\n    }\r\n}\r\nclass OrderedPullConsumerImpl {\r\n    api;\r\n    consumerOpts;\r\n    consumer;\r\n    opts;\r\n    cursor;\r\n    stream;\r\n    namePrefix;\r\n    serial;\r\n    currentConsumer;\r\n    userCallback;\r\n    iter;\r\n    type;\r\n    startSeq;\r\n    constructor(api, stream, opts = {}){\r\n        this.api = api;\r\n        this.stream = stream;\r\n        this.cursor = {\r\n            stream_seq: 1,\r\n            deliver_seq: 0\r\n        };\r\n        this.namePrefix = nuid.next();\r\n        this.serial = 0;\r\n        this.currentConsumer = null;\r\n        this.userCallback = null;\r\n        this.iter = null;\r\n        this.type = PullConsumerType.Unset;\r\n        this.consumerOpts = opts;\r\n        this.startSeq = this.consumerOpts.opt_start_seq || 0;\r\n        this.cursor.stream_seq = this.startSeq > 0 ? this.startSeq - 1 : 0;\r\n    }\r\n    getConsumerOpts(seq) {\r\n        this.serial++;\r\n        const name = `${this.namePrefix}_${this.serial}`;\r\n        seq = seq === 0 ? 1 : seq;\r\n        const config = {\r\n            name,\r\n            deliver_policy: DeliverPolicy.StartSequence,\r\n            opt_start_seq: seq,\r\n            ack_policy: AckPolicy.None,\r\n            inactive_threshold: nanos(5 * 60 * 1000),\r\n            num_replicas: 1\r\n        };\r\n        if (this.consumerOpts.headers_only === true) {\r\n            config.headers_only = true;\r\n        }\r\n        if (Array.isArray(this.consumerOpts.filterSubjects)) {\r\n            config.filter_subjects = this.consumerOpts.filterSubjects;\r\n        }\r\n        if (typeof this.consumerOpts.filterSubjects === \"string\") {\r\n            config.filter_subject = this.consumerOpts.filterSubjects;\r\n        }\r\n        if (seq === this.startSeq + 1) {\r\n            config.deliver_policy = this.consumerOpts.deliver_policy || DeliverPolicy.StartSequence;\r\n            if (this.consumerOpts.deliver_policy === DeliverPolicy.LastPerSubject || this.consumerOpts.deliver_policy === DeliverPolicy.New || this.consumerOpts.deliver_policy === DeliverPolicy.Last) {\r\n                delete config.opt_start_seq;\r\n                config.deliver_policy = this.consumerOpts.deliver_policy;\r\n            }\r\n            if (config.deliver_policy === DeliverPolicy.LastPerSubject) {\r\n                if (typeof config.filter_subjects === \"undefined\" && typeof config.filter_subject === \"undefined\") {\r\n                    config.filter_subject = \">\";\r\n                }\r\n            }\r\n            if (this.consumerOpts.opt_start_time) {\r\n                delete config.opt_start_seq;\r\n                config.deliver_policy = DeliverPolicy.StartTime;\r\n                config.opt_start_time = this.consumerOpts.opt_start_time;\r\n            }\r\n            if (this.consumerOpts.inactive_threshold) {\r\n                config.inactive_threshold = nanos(this.consumerOpts.inactive_threshold);\r\n            }\r\n        }\r\n        return config;\r\n    }\r\n    async resetConsumer(seq = 0) {\r\n        this.consumer?.delete().catch(()=>{});\r\n        seq = seq === 0 ? 1 : seq;\r\n        this.cursor.deliver_seq = 0;\r\n        const config = this.getConsumerOpts(seq);\r\n        config.max_deliver = 1;\r\n        config.mem_storage = true;\r\n        const bo = backoff();\r\n        let ci;\r\n        for(let i = 0;; i++){\r\n            try {\r\n                ci = await this.api.add(this.stream, config);\r\n                this.iter?.notify(ConsumerEvents.OrderedConsumerRecreated, ci.name);\r\n                break;\r\n            } catch (err) {\r\n                if (seq === 0 && i >= 30) {\r\n                    throw err;\r\n                } else {\r\n                    await delay(bo.backoff(i + 1));\r\n                }\r\n            }\r\n        }\r\n        return ci;\r\n    }\r\n    internalHandler(serial) {\r\n        return (m)=>{\r\n            if (this.serial !== serial) {\r\n                return;\r\n            }\r\n            const dseq = m.info.deliverySequence;\r\n            if (dseq !== this.cursor.deliver_seq + 1) {\r\n                this.reset(this.opts);\r\n                return;\r\n            }\r\n            this.cursor.deliver_seq = dseq;\r\n            this.cursor.stream_seq = m.info.streamSequence;\r\n            if (this.userCallback) {\r\n                this.userCallback(m);\r\n            } else {\r\n                this.iter?.push(m);\r\n            }\r\n        };\r\n    }\r\n    async reset(opts = {\r\n        max_messages: 100,\r\n        expires: 30_000\r\n    }, fromFetch = false) {\r\n        this.currentConsumer = await this.resetConsumer(this.cursor.stream_seq + 1);\r\n        if (this.iter === null) {\r\n            this.iter = new OrderedConsumerMessages();\r\n        }\r\n        this.consumer = new PullConsumerImpl(this.api, this.currentConsumer);\r\n        const copts = opts;\r\n        copts.callback = this.internalHandler(this.serial);\r\n        let msgs = null;\r\n        if (this.type === PullConsumerType.Fetch && fromFetch) {\r\n            msgs = await this.consumer.fetch(opts);\r\n        } else if (this.type === PullConsumerType.Consume) {\r\n            msgs = await this.consumer.consume(opts);\r\n        } else {\r\n            return Promise.reject(\"reset called with unset consumer type\");\r\n        }\r\n        const msgsImpl = msgs;\r\n        msgsImpl.forOrderedConsumer = true;\r\n        msgsImpl.resetHandler = ()=>{\r\n            this.reset(this.opts);\r\n        };\r\n        this.iter.setSource(msgsImpl);\r\n        return this.iter;\r\n    }\r\n    consume(opts = {\r\n        max_messages: 100,\r\n        expires: 30_000\r\n    }) {\r\n        if (this.type === PullConsumerType.Fetch) {\r\n            return Promise.reject(new Error(\"ordered consumer initialized as fetch\"));\r\n        }\r\n        if (this.type === PullConsumerType.Consume) {\r\n            return Promise.reject(new Error(\"ordered consumer doesn't support concurrent consume\"));\r\n        }\r\n        const { callback } = opts;\r\n        if (callback) {\r\n            this.userCallback = callback;\r\n        }\r\n        this.type = PullConsumerType.Consume;\r\n        this.opts = opts;\r\n        return this.reset(opts);\r\n    }\r\n    fetch(opts = {\r\n        max_messages: 100,\r\n        expires: 30_000\r\n    }) {\r\n        if (this.type === PullConsumerType.Consume) {\r\n            return Promise.reject(new Error(\"ordered consumer already initialized as consume\"));\r\n        }\r\n        if (this.iter?.done === false) {\r\n            return Promise.reject(new Error(\"ordered consumer doesn't support concurrent fetch\"));\r\n        }\r\n        const { callback } = opts;\r\n        if (callback) {\r\n            this.userCallback = callback;\r\n        }\r\n        this.type = PullConsumerType.Fetch;\r\n        this.opts = opts;\r\n        this.iter = new OrderedConsumerMessages();\r\n        return this.reset(opts, true);\r\n    }\r\n    async next(opts = {\r\n        expires: 30_000\r\n    }) {\r\n        const d = deferred();\r\n        const copts = opts;\r\n        copts.max_messages = 1;\r\n        copts.callback = (m)=>{\r\n            this.userCallback = null;\r\n            d.resolve(m);\r\n        };\r\n        const iter = await this.fetch(copts);\r\n        iter.iterClosed.then(()=>{\r\n            d.resolve(null);\r\n        }).catch((err)=>{\r\n            d.reject(err);\r\n        });\r\n        return d;\r\n    }\r\n    delete() {\r\n        if (!this.currentConsumer) {\r\n            return Promise.resolve(false);\r\n        }\r\n        return this.api.delete(this.stream, this.currentConsumer.name).then((tf)=>{\r\n            return Promise.resolve(tf);\r\n        }).catch((err)=>{\r\n            return Promise.reject(err);\r\n        }).finally(()=>{\r\n            this.currentConsumer = null;\r\n        });\r\n    }\r\n    async info(cached) {\r\n        if (this.currentConsumer == null) {\r\n            this.currentConsumer = await this.resetConsumer(this.serial);\r\n            return Promise.resolve(this.currentConsumer);\r\n        }\r\n        if (cached && this.currentConsumer) {\r\n            return Promise.resolve(this.currentConsumer);\r\n        }\r\n        return this.api.info(this.stream, this.currentConsumer.name);\r\n    }\r\n}\r\nfunction convertStreamSourceDomain(s) {\r\n    if (s === undefined) {\r\n        return undefined;\r\n    }\r\n    const { domain } = s;\r\n    if (domain === undefined) {\r\n        return s;\r\n    }\r\n    const copy = Object.assign({}, s);\r\n    delete copy.domain;\r\n    if (domain === \"\") {\r\n        return copy;\r\n    }\r\n    if (copy.external) {\r\n        throw new Error(\"domain and external are both set\");\r\n    }\r\n    copy.external = {\r\n        api: `$JS.${domain}.API`\r\n    };\r\n    return copy;\r\n}\r\nvar PubHeaders;\r\nconst osPrefix = \"OBJ_\";\r\nclass ConsumersImpl {\r\n    api;\r\n    notified;\r\n    constructor(api){\r\n        this.api = api;\r\n        this.notified = false;\r\n    }\r\n    checkVersion() {\r\n        const fv = this.api.nc.features.get(Feature.JS_SIMPLIFICATION);\r\n        if (!fv.ok) {\r\n            return Promise.reject(new Error(`consumers framework is only supported on servers ${fv.min} or better`));\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    async get(stream, name = {}) {\r\n        if (typeof name === \"object\") {\r\n            return this.ordered(stream, name);\r\n        }\r\n        await this.checkVersion();\r\n        return this.api.info(stream, name).then((ci)=>{\r\n            if (ci.config.deliver_subject !== undefined) {\r\n                return Promise.reject(new Error(\"push consumer not supported\"));\r\n            }\r\n            return new PullConsumerImpl(this.api, ci);\r\n        }).catch((err)=>{\r\n            return Promise.reject(err);\r\n        });\r\n    }\r\n    async ordered(stream, opts) {\r\n        await this.checkVersion();\r\n        const impl = this.api;\r\n        const sapi = new StreamAPIImpl(impl.nc, impl.opts);\r\n        return sapi.info(stream).then((_si)=>{\r\n            return Promise.resolve(new OrderedPullConsumerImpl(this.api, stream, opts));\r\n        }).catch((err)=>{\r\n            return Promise.reject(err);\r\n        });\r\n    }\r\n}\r\nclass StreamImpl {\r\n    api;\r\n    _info;\r\n    constructor(api, info){\r\n        this.api = api;\r\n        this._info = info;\r\n    }\r\n    get name() {\r\n        return this._info.config.name;\r\n    }\r\n    alternates() {\r\n        return this.info().then((si)=>{\r\n            return si.alternates ? si.alternates : [];\r\n        });\r\n    }\r\n    async best() {\r\n        await this.info();\r\n        if (this._info.alternates) {\r\n            const asi = await this.api.info(this._info.alternates[0].name);\r\n            return new StreamImpl(this.api, asi);\r\n        } else {\r\n            return this;\r\n        }\r\n    }\r\n    info(cached = false, opts) {\r\n        if (cached) {\r\n            return Promise.resolve(this._info);\r\n        }\r\n        return this.api.info(this.name, opts).then((si)=>{\r\n            this._info = si;\r\n            return this._info;\r\n        });\r\n    }\r\n    getConsumer(name) {\r\n        return new ConsumersImpl(new ConsumerAPIImpl(this.api.nc, this.api.opts)).get(this.name, name);\r\n    }\r\n    getMessage(query) {\r\n        return this.api.getMessage(this.name, query);\r\n    }\r\n    deleteMessage(seq, erase) {\r\n        return this.api.deleteMessage(this.name, seq, erase);\r\n    }\r\n}\r\nfunction NoopKvCodecs() {\r\n    return {\r\n        key: {\r\n            encode (k) {\r\n                return k;\r\n            },\r\n            decode (k) {\r\n                return k;\r\n            }\r\n        },\r\n        value: {\r\n            encode (v) {\r\n                return v;\r\n            },\r\n            decode (v) {\r\n                return v;\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction defaultBucketOpts() {\r\n    return {\r\n        replicas: 1,\r\n        history: 1,\r\n        timeout: 2000,\r\n        maxBucketSize: -1,\r\n        maxValueSize: -1,\r\n        codec: NoopKvCodecs(),\r\n        storage: StorageType.File\r\n    };\r\n}\r\nconst kvOperationHdr = \"KV-Operation\";\r\nconst kvSubjectPrefix = \"$KV\";\r\nconst validKeyRe = /^[-/=.\\w]+$/;\r\nconst validSearchKey = /^[-/=.>*\\w]+$/;\r\nconst validBucketRe = /^[-\\w]+$/;\r\nfunction validateKey(k) {\r\n    if (k.startsWith(\".\") || k.endsWith(\".\") || !validKeyRe.test(k)) {\r\n        throw new Error(`invalid key: ${k}`);\r\n    }\r\n}\r\nfunction validateSearchKey(k) {\r\n    if (k.startsWith(\".\") || k.endsWith(\".\") || !validSearchKey.test(k)) {\r\n        throw new Error(`invalid key: ${k}`);\r\n    }\r\n}\r\nfunction hasWildcards(k) {\r\n    if (k.startsWith(\".\") || k.endsWith(\".\")) {\r\n        throw new Error(`invalid key: ${k}`);\r\n    }\r\n    const chunks = k.split(\".\");\r\n    let hasWildcards = false;\r\n    for(let i = 0; i < chunks.length; i++){\r\n        switch(chunks[i]){\r\n            case \"*\":\r\n                hasWildcards = true;\r\n                break;\r\n            case \">\":\r\n                if (i !== chunks.length - 1) {\r\n                    throw new Error(`invalid key: ${k}`);\r\n                }\r\n                hasWildcards = true;\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    return hasWildcards;\r\n}\r\nfunction validateBucket(name) {\r\n    if (!validBucketRe.test(name)) {\r\n        throw new Error(`invalid bucket name: ${name}`);\r\n    }\r\n}\r\n(function(PubHeaders) {\r\n    PubHeaders[\"MsgIdHdr\"] = \"Nats-Msg-Id\";\r\n    PubHeaders[\"ExpectedStreamHdr\"] = \"Nats-Expected-Stream\";\r\n    PubHeaders[\"ExpectedLastSeqHdr\"] = \"Nats-Expected-Last-Sequence\";\r\n    PubHeaders[\"ExpectedLastMsgIdHdr\"] = \"Nats-Expected-Last-Msg-Id\";\r\n    PubHeaders[\"ExpectedLastSubjectSequenceHdr\"] = \"Nats-Expected-Last-Subject-Sequence\";\r\n})(PubHeaders || (PubHeaders = {}));\r\nclass Bucket {\r\n    js;\r\n    jsm;\r\n    stream;\r\n    bucket;\r\n    direct;\r\n    codec;\r\n    prefix;\r\n    editPrefix;\r\n    useJsPrefix;\r\n    _prefixLen;\r\n    constructor(bucket, js, jsm){\r\n        validateBucket(bucket);\r\n        this.js = js;\r\n        this.jsm = jsm;\r\n        this.bucket = bucket;\r\n        this.prefix = kvSubjectPrefix;\r\n        this.editPrefix = \"\";\r\n        this.useJsPrefix = false;\r\n        this._prefixLen = 0;\r\n    }\r\n    static async create(js, name, opts = {}) {\r\n        validateBucket(name);\r\n        const jsm = await js.jetstreamManager();\r\n        const bucket = new Bucket(name, js, jsm);\r\n        await bucket.init(opts);\r\n        return bucket;\r\n    }\r\n    static async bind(js, name, opts = {}) {\r\n        const jsm = await js.jetstreamManager();\r\n        const info = await jsm.streams.info(`${kvPrefix}${name}`);\r\n        validateBucket(info.config.name);\r\n        const bucket = new Bucket(name, js, jsm);\r\n        Object.assign(bucket, info);\r\n        bucket.codec = opts.codec || NoopKvCodecs();\r\n        bucket.direct = info.config.allow_direct ?? false;\r\n        bucket.initializePrefixes(info);\r\n        return bucket;\r\n    }\r\n    async init(opts = {}) {\r\n        const bo = Object.assign(defaultBucketOpts(), opts);\r\n        this.codec = bo.codec;\r\n        const sc = {};\r\n        this.stream = sc.name = opts.streamName ?? this.bucketName();\r\n        sc.retention = RetentionPolicy.Limits;\r\n        sc.max_msgs_per_subject = bo.history;\r\n        if (bo.maxBucketSize) {\r\n            bo.max_bytes = bo.maxBucketSize;\r\n        }\r\n        if (bo.max_bytes) {\r\n            sc.max_bytes = bo.max_bytes;\r\n        }\r\n        sc.max_msg_size = bo.maxValueSize;\r\n        sc.storage = bo.storage;\r\n        const location = opts.placementCluster ?? \"\";\r\n        if (location) {\r\n            opts.placement = {};\r\n            opts.placement.cluster = location;\r\n            opts.placement.tags = [];\r\n        }\r\n        if (opts.placement) {\r\n            sc.placement = opts.placement;\r\n        }\r\n        if (opts.republish) {\r\n            sc.republish = opts.republish;\r\n        }\r\n        if (opts.description) {\r\n            sc.description = opts.description;\r\n        }\r\n        if (opts.mirror) {\r\n            const mirror = Object.assign({}, opts.mirror);\r\n            if (!mirror.name.startsWith(kvPrefix)) {\r\n                mirror.name = `${kvPrefix}${mirror.name}`;\r\n            }\r\n            sc.mirror = mirror;\r\n            sc.mirror_direct = true;\r\n        } else if (opts.sources) {\r\n            const sources = opts.sources.map((s)=>{\r\n                const c = Object.assign({}, s);\r\n                if (!c.name.startsWith(kvPrefix)) {\r\n                    c.name = `${kvPrefix}${c.name}`;\r\n                }\r\n            });\r\n            sc.sources = sources;\r\n        } else {\r\n            sc.subjects = [\r\n                this.subjectForBucket()\r\n            ];\r\n        }\r\n        if (opts.metadata) {\r\n            sc.metadata = opts.metadata;\r\n        }\r\n        if (typeof opts.compression === \"boolean\") {\r\n            sc.compression = opts.compression ? StoreCompression.S2 : StoreCompression.None;\r\n        }\r\n        const nci = this.js.nc;\r\n        const have = nci.getServerVersion();\r\n        const discardNew = have ? compare(have, parseSemVer(\"2.7.2\")) >= 0 : false;\r\n        sc.discard = discardNew ? DiscardPolicy.New : DiscardPolicy.Old;\r\n        const { ok: direct, min } = nci.features.get(Feature.JS_ALLOW_DIRECT);\r\n        if (!direct && opts.allow_direct === true) {\r\n            const v = have ? `${have.major}.${have.minor}.${have.micro}` : \"unknown\";\r\n            return Promise.reject(new Error(`allow_direct is not available on server version ${v} - requires ${min}`));\r\n        }\r\n        opts.allow_direct = typeof opts.allow_direct === \"boolean\" ? opts.allow_direct : direct;\r\n        sc.allow_direct = opts.allow_direct;\r\n        this.direct = sc.allow_direct;\r\n        sc.num_replicas = bo.replicas;\r\n        if (bo.ttl) {\r\n            sc.max_age = nanos(bo.ttl);\r\n        }\r\n        sc.allow_rollup_hdrs = true;\r\n        let info;\r\n        try {\r\n            info = await this.jsm.streams.info(sc.name);\r\n            if (!info.config.allow_direct && this.direct === true) {\r\n                this.direct = false;\r\n            }\r\n        } catch (err) {\r\n            if (err.message === \"stream not found\") {\r\n                info = await this.jsm.streams.add(sc);\r\n            } else {\r\n                throw err;\r\n            }\r\n        }\r\n        this.initializePrefixes(info);\r\n    }\r\n    initializePrefixes(info) {\r\n        this._prefixLen = 0;\r\n        this.prefix = `$KV.${this.bucket}`;\r\n        this.useJsPrefix = this.js.apiPrefix !== \"$JS.API\";\r\n        const { mirror } = info.config;\r\n        if (mirror) {\r\n            let n = mirror.name;\r\n            if (n.startsWith(kvPrefix)) {\r\n                n = n.substring(kvPrefix.length);\r\n            }\r\n            if (mirror.external && mirror.external.api !== \"\") {\r\n                const mb = mirror.name.substring(kvPrefix.length);\r\n                this.useJsPrefix = false;\r\n                this.prefix = `$KV.${mb}`;\r\n                this.editPrefix = `${mirror.external.api}.$KV.${n}`;\r\n            } else {\r\n                this.editPrefix = this.prefix;\r\n            }\r\n        }\r\n    }\r\n    bucketName() {\r\n        return this.stream ?? `${kvPrefix}${this.bucket}`;\r\n    }\r\n    subjectForBucket() {\r\n        return `${this.prefix}.${this.bucket}.>`;\r\n    }\r\n    subjectForKey(k, edit = false) {\r\n        const builder = [];\r\n        if (edit) {\r\n            if (this.useJsPrefix) {\r\n                builder.push(this.js.apiPrefix);\r\n            }\r\n            if (this.editPrefix !== \"\") {\r\n                builder.push(this.editPrefix);\r\n            } else {\r\n                builder.push(this.prefix);\r\n            }\r\n        } else {\r\n            if (this.prefix) {\r\n                builder.push(this.prefix);\r\n            }\r\n        }\r\n        builder.push(k);\r\n        return builder.join(\".\");\r\n    }\r\n    fullKeyName(k) {\r\n        if (this.prefix !== \"\") {\r\n            return `${this.prefix}.${k}`;\r\n        }\r\n        return `${kvSubjectPrefix}.${this.bucket}.${k}`;\r\n    }\r\n    get prefixLen() {\r\n        if (this._prefixLen === 0) {\r\n            this._prefixLen = this.prefix.length + 1;\r\n        }\r\n        return this._prefixLen;\r\n    }\r\n    encodeKey(key) {\r\n        const chunks = [];\r\n        for (const t of key.split(\".\")){\r\n            switch(t){\r\n                case \">\":\r\n                case \"*\":\r\n                    chunks.push(t);\r\n                    break;\r\n                default:\r\n                    chunks.push(this.codec.key.encode(t));\r\n                    break;\r\n            }\r\n        }\r\n        return chunks.join(\".\");\r\n    }\r\n    decodeKey(ekey) {\r\n        const chunks = [];\r\n        for (const t of ekey.split(\".\")){\r\n            switch(t){\r\n                case \">\":\r\n                case \"*\":\r\n                    chunks.push(t);\r\n                    break;\r\n                default:\r\n                    chunks.push(this.codec.key.decode(t));\r\n                    break;\r\n            }\r\n        }\r\n        return chunks.join(\".\");\r\n    }\r\n    validateKey = validateKey;\r\n    validateSearchKey = validateSearchKey;\r\n    hasWildcards = hasWildcards;\r\n    close() {\r\n        return Promise.resolve();\r\n    }\r\n    dataLen(data, h) {\r\n        const slen = h ? h.get(JsHeaders.MessageSizeHdr) || \"\" : \"\";\r\n        if (slen !== \"\") {\r\n            return parseInt(slen, 10);\r\n        }\r\n        return data.length;\r\n    }\r\n    smToEntry(sm) {\r\n        return new KvStoredEntryImpl(this.bucket, this.prefixLen, sm);\r\n    }\r\n    jmToEntry(jm) {\r\n        const key = this.decodeKey(jm.subject.substring(this.prefixLen));\r\n        return new KvJsMsgEntryImpl(this.bucket, key, jm);\r\n    }\r\n    async create(k, data) {\r\n        let firstErr;\r\n        try {\r\n            const n = await this.put(k, data, {\r\n                previousSeq: 0\r\n            });\r\n            return Promise.resolve(n);\r\n        } catch (err) {\r\n            firstErr = err;\r\n            if (err?.api_error?.err_code !== 10071) {\r\n                return Promise.reject(err);\r\n            }\r\n        }\r\n        let rev = 0;\r\n        try {\r\n            const e = await this.get(k);\r\n            if (e?.operation === \"DEL\" || e?.operation === \"PURGE\") {\r\n                rev = e !== null ? e.revision : 0;\r\n                return this.update(k, data, rev);\r\n            } else {\r\n                return Promise.reject(firstErr);\r\n            }\r\n        } catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    update(k, data, version) {\r\n        if (version <= 0) {\r\n            throw new Error(\"version must be greater than 0\");\r\n        }\r\n        return this.put(k, data, {\r\n            previousSeq: version\r\n        });\r\n    }\r\n    async put(k, data, opts = {}) {\r\n        const ek = this.encodeKey(k);\r\n        this.validateKey(ek);\r\n        const o = {};\r\n        if (opts.previousSeq !== undefined) {\r\n            const h = headers();\r\n            o.headers = h;\r\n            h.set(PubHeaders.ExpectedLastSubjectSequenceHdr, `${opts.previousSeq}`);\r\n        }\r\n        try {\r\n            const pa = await this.js.publish(this.subjectForKey(ek, true), data, o);\r\n            return pa.seq;\r\n        } catch (err) {\r\n            const ne = err;\r\n            if (ne.isJetStreamError()) {\r\n                ne.message = ne.api_error?.description;\r\n                ne.code = `${ne.api_error?.code}`;\r\n                return Promise.reject(ne);\r\n            }\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async get(k, opts) {\r\n        const ek = this.encodeKey(k);\r\n        this.validateKey(ek);\r\n        let arg = {\r\n            last_by_subj: this.subjectForKey(ek)\r\n        };\r\n        if (opts && opts.revision > 0) {\r\n            arg = {\r\n                seq: opts.revision\r\n            };\r\n        }\r\n        let sm;\r\n        try {\r\n            if (this.direct) {\r\n                const direct = this.jsm.direct;\r\n                sm = await direct.getMessage(this.bucketName(), arg);\r\n            } else {\r\n                sm = await this.jsm.streams.getMessage(this.bucketName(), arg);\r\n            }\r\n            const ke = this.smToEntry(sm);\r\n            if (ke.key !== ek) {\r\n                return null;\r\n            }\r\n            return ke;\r\n        } catch (err) {\r\n            if (err.code === ErrorCode.JetStream404NoMessages) {\r\n                return null;\r\n            }\r\n            throw err;\r\n        }\r\n    }\r\n    purge(k) {\r\n        return this._deleteOrPurge(k, \"PURGE\");\r\n    }\r\n    delete(k) {\r\n        return this._deleteOrPurge(k, \"DEL\");\r\n    }\r\n    async purgeDeletes(olderMillis = 30 * 60 * 1000) {\r\n        const done = deferred();\r\n        const buf = [];\r\n        const i = await this.watch({\r\n            key: \">\",\r\n            initializedFn: ()=>{\r\n                done.resolve();\r\n            }\r\n        });\r\n        (async ()=>{\r\n            for await (const e of i){\r\n                if (e.operation === \"DEL\" || e.operation === \"PURGE\") {\r\n                    buf.push(e);\r\n                }\r\n            }\r\n        })().then();\r\n        await done;\r\n        i.stop();\r\n        const min = Date.now() - olderMillis;\r\n        const proms = buf.map((e)=>{\r\n            const subj = this.subjectForKey(e.key);\r\n            if (e.created.getTime() >= min) {\r\n                return this.jsm.streams.purge(this.stream, {\r\n                    filter: subj,\r\n                    keep: 1\r\n                });\r\n            } else {\r\n                return this.jsm.streams.purge(this.stream, {\r\n                    filter: subj,\r\n                    keep: 0\r\n                });\r\n            }\r\n        });\r\n        const purged = await Promise.all(proms);\r\n        purged.unshift({\r\n            success: true,\r\n            purged: 0\r\n        });\r\n        return purged.reduce((pv, cv)=>{\r\n            pv.purged += cv.purged;\r\n            return pv;\r\n        });\r\n    }\r\n    async _deleteOrPurge(k, op) {\r\n        if (!this.hasWildcards(k)) {\r\n            return this._doDeleteOrPurge(k, op);\r\n        }\r\n        const iter = await this.keys(k);\r\n        const buf = [];\r\n        for await (const k of iter){\r\n            buf.push(this._doDeleteOrPurge(k, op));\r\n            if (buf.length === 100) {\r\n                await Promise.all(buf);\r\n                buf.length = 0;\r\n            }\r\n        }\r\n        if (buf.length > 0) {\r\n            await Promise.all(buf);\r\n        }\r\n    }\r\n    async _doDeleteOrPurge(k, op) {\r\n        const ek = this.encodeKey(k);\r\n        this.validateKey(ek);\r\n        const h = headers();\r\n        h.set(kvOperationHdr, op);\r\n        if (op === \"PURGE\") {\r\n            h.set(JsHeaders.RollupHdr, JsHeaders.RollupValueSubject);\r\n        }\r\n        await this.js.publish(this.subjectForKey(ek, true), Empty, {\r\n            headers: h\r\n        });\r\n    }\r\n    _buildCC(k, content, opts = {}) {\r\n        const ek = this.encodeKey(k);\r\n        this.validateSearchKey(k);\r\n        let deliver_policy = DeliverPolicy.LastPerSubject;\r\n        if (content === KvWatchInclude.AllHistory) {\r\n            deliver_policy = DeliverPolicy.All;\r\n        }\r\n        if (content === KvWatchInclude.UpdatesOnly) {\r\n            deliver_policy = DeliverPolicy.New;\r\n        }\r\n        return Object.assign({\r\n            deliver_policy,\r\n            \"ack_policy\": AckPolicy.None,\r\n            \"filter_subject\": this.fullKeyName(ek),\r\n            \"flow_control\": true,\r\n            \"idle_heartbeat\": nanos(5 * 1000)\r\n        }, opts);\r\n    }\r\n    remove(k) {\r\n        return this.purge(k);\r\n    }\r\n    async history(opts = {}) {\r\n        const k = opts.key ?? \">\";\r\n        const qi = new QueuedIteratorImpl();\r\n        const co = {};\r\n        co.headers_only = opts.headers_only || false;\r\n        let fn;\r\n        fn = ()=>{\r\n            qi.stop();\r\n        };\r\n        let count = 0;\r\n        const cc = this._buildCC(k, KvWatchInclude.AllHistory, co);\r\n        const subj = cc.filter_subject;\r\n        const copts = consumerOpts(cc);\r\n        copts.bindStream(this.stream);\r\n        copts.orderedConsumer();\r\n        copts.callback((err, jm)=>{\r\n            if (err) {\r\n                qi.stop(err);\r\n                return;\r\n            }\r\n            if (jm) {\r\n                const e = this.jmToEntry(jm);\r\n                qi.push(e);\r\n                qi.received++;\r\n                if (fn && count > 0 && qi.received >= count || jm.info.pending === 0) {\r\n                    qi.push(fn);\r\n                    fn = undefined;\r\n                }\r\n            }\r\n        });\r\n        const sub = await this.js.subscribe(subj, copts);\r\n        if (fn) {\r\n            const { info: { last } } = sub;\r\n            const expect = last.num_pending + last.delivered.consumer_seq;\r\n            if (expect === 0 || qi.received >= expect) {\r\n                try {\r\n                    fn();\r\n                } catch (err) {\r\n                    qi.stop(err);\r\n                } finally{\r\n                    fn = undefined;\r\n                }\r\n            } else {\r\n                count = expect;\r\n            }\r\n        }\r\n        qi._data = sub;\r\n        qi.iterClosed.then(()=>{\r\n            sub.unsubscribe();\r\n        });\r\n        sub.closed.then(()=>{\r\n            qi.stop();\r\n        }).catch((err)=>{\r\n            qi.stop(err);\r\n        });\r\n        return qi;\r\n    }\r\n    async watch(opts = {}) {\r\n        const k = opts.key ?? \">\";\r\n        const qi = new QueuedIteratorImpl();\r\n        const co = {};\r\n        co.headers_only = opts.headers_only || false;\r\n        let content = KvWatchInclude.LastValue;\r\n        if (opts.include === KvWatchInclude.AllHistory) {\r\n            content = KvWatchInclude.AllHistory;\r\n        } else if (opts.include === KvWatchInclude.UpdatesOnly) {\r\n            content = KvWatchInclude.UpdatesOnly;\r\n        }\r\n        const ignoreDeletes = opts.ignoreDeletes === true;\r\n        let fn = opts.initializedFn;\r\n        let count = 0;\r\n        const cc = this._buildCC(k, content, co);\r\n        const subj = cc.filter_subject;\r\n        const copts = consumerOpts(cc);\r\n        copts.bindStream(this.stream);\r\n        copts.orderedConsumer();\r\n        copts.callback((err, jm)=>{\r\n            if (err) {\r\n                qi.stop(err);\r\n                return;\r\n            }\r\n            if (jm) {\r\n                const e = this.jmToEntry(jm);\r\n                if (ignoreDeletes && e.operation === \"DEL\") {\r\n                    return;\r\n                }\r\n                qi.push(e);\r\n                qi.received++;\r\n                if (fn && (count > 0 && qi.received >= count || jm.info.pending === 0)) {\r\n                    qi.push(fn);\r\n                    fn = undefined;\r\n                }\r\n            }\r\n        });\r\n        const sub = await this.js.subscribe(subj, copts);\r\n        if (fn) {\r\n            const { info: { last } } = sub;\r\n            const expect = last.num_pending + last.delivered.consumer_seq;\r\n            if (expect === 0 || qi.received >= expect) {\r\n                try {\r\n                    fn();\r\n                } catch (err) {\r\n                    qi.stop(err);\r\n                } finally{\r\n                    fn = undefined;\r\n                }\r\n            } else {\r\n                count = expect;\r\n            }\r\n        }\r\n        qi._data = sub;\r\n        qi.iterClosed.then(()=>{\r\n            sub.unsubscribe();\r\n        });\r\n        sub.closed.then(()=>{\r\n            qi.stop();\r\n        }).catch((err)=>{\r\n            qi.stop(err);\r\n        });\r\n        return qi;\r\n    }\r\n    async keys(k = \">\") {\r\n        const keys = new QueuedIteratorImpl();\r\n        const cc = this._buildCC(k, KvWatchInclude.LastValue, {\r\n            headers_only: true\r\n        });\r\n        const subj = cc.filter_subject;\r\n        const copts = consumerOpts(cc);\r\n        copts.bindStream(this.stream);\r\n        copts.orderedConsumer();\r\n        const sub = await this.js.subscribe(subj, copts);\r\n        (async ()=>{\r\n            for await (const jm of sub){\r\n                const op = jm.headers?.get(kvOperationHdr);\r\n                if (op !== \"DEL\" && op !== \"PURGE\") {\r\n                    const key = this.decodeKey(jm.subject.substring(this.prefixLen));\r\n                    keys.push(key);\r\n                }\r\n                if (jm.info.pending === 0) {\r\n                    sub.unsubscribe();\r\n                }\r\n            }\r\n        })().then(()=>{\r\n            keys.stop();\r\n        }).catch((err)=>{\r\n            keys.stop(err);\r\n        });\r\n        const si = sub;\r\n        if (si.info.last.num_pending === 0) {\r\n            sub.unsubscribe();\r\n        }\r\n        return keys;\r\n    }\r\n    purgeBucket(opts) {\r\n        return this.jsm.streams.purge(this.bucketName(), opts);\r\n    }\r\n    destroy() {\r\n        return this.jsm.streams.delete(this.bucketName());\r\n    }\r\n    async status() {\r\n        const nc = this.js.nc;\r\n        const cluster = nc.info?.cluster ?? \"\";\r\n        const bn = this.bucketName();\r\n        const si = await this.jsm.streams.info(bn);\r\n        return new KvStatusImpl(si, cluster);\r\n    }\r\n}\r\nclass KvStatusImpl {\r\n    si;\r\n    cluster;\r\n    constructor(si, cluster = \"\"){\r\n        this.si = si;\r\n        this.cluster = cluster;\r\n    }\r\n    get bucket() {\r\n        return this.si.config.name.startsWith(kvPrefix) ? this.si.config.name.substring(kvPrefix.length) : this.si.config.name;\r\n    }\r\n    get values() {\r\n        return this.si.state.messages;\r\n    }\r\n    get history() {\r\n        return this.si.config.max_msgs_per_subject;\r\n    }\r\n    get ttl() {\r\n        return millis(this.si.config.max_age);\r\n    }\r\n    get bucket_location() {\r\n        return this.cluster;\r\n    }\r\n    get backingStore() {\r\n        return this.si.config.storage;\r\n    }\r\n    get storage() {\r\n        return this.si.config.storage;\r\n    }\r\n    get replicas() {\r\n        return this.si.config.num_replicas;\r\n    }\r\n    get description() {\r\n        return this.si.config.description ?? \"\";\r\n    }\r\n    get maxBucketSize() {\r\n        return this.si.config.max_bytes;\r\n    }\r\n    get maxValueSize() {\r\n        return this.si.config.max_msg_size;\r\n    }\r\n    get max_bytes() {\r\n        return this.si.config.max_bytes;\r\n    }\r\n    get placement() {\r\n        return this.si.config.placement || {\r\n            cluster: \"\",\r\n            tags: []\r\n        };\r\n    }\r\n    get placementCluster() {\r\n        return this.si.config.placement?.cluster ?? \"\";\r\n    }\r\n    get republish() {\r\n        return this.si.config.republish ?? {\r\n            src: \"\",\r\n            dest: \"\"\r\n        };\r\n    }\r\n    get streamInfo() {\r\n        return this.si;\r\n    }\r\n    get size() {\r\n        return this.si.state.bytes;\r\n    }\r\n    get metadata() {\r\n        return this.si.config.metadata ?? {};\r\n    }\r\n    get compression() {\r\n        if (this.si.config.compression) {\r\n            return this.si.config.compression !== StoreCompression.None;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nconst digestType = \"SHA-256=\";\r\nfunction objectStoreStreamName(bucket) {\r\n    validateBucket(bucket);\r\n    return `${osPrefix}${bucket}`;\r\n}\r\nfunction objectStoreBucketName(stream) {\r\n    if (stream.startsWith(osPrefix)) {\r\n        return stream.substring(4);\r\n    }\r\n    return stream;\r\n}\r\nclass ObjectStoreStatusImpl {\r\n    si;\r\n    backingStore;\r\n    constructor(si){\r\n        this.si = si;\r\n        this.backingStore = \"JetStream\";\r\n    }\r\n    get bucket() {\r\n        return objectStoreBucketName(this.si.config.name);\r\n    }\r\n    get description() {\r\n        return this.si.config.description ?? \"\";\r\n    }\r\n    get ttl() {\r\n        return this.si.config.max_age;\r\n    }\r\n    get storage() {\r\n        return this.si.config.storage;\r\n    }\r\n    get replicas() {\r\n        return this.si.config.num_replicas;\r\n    }\r\n    get sealed() {\r\n        return this.si.config.sealed;\r\n    }\r\n    get size() {\r\n        return this.si.state.bytes;\r\n    }\r\n    get streamInfo() {\r\n        return this.si;\r\n    }\r\n    get metadata() {\r\n        return this.si.config.metadata;\r\n    }\r\n    get compression() {\r\n        if (this.si.config.compression) {\r\n            return this.si.config.compression !== StoreCompression.None;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nclass StreamAPIImpl extends BaseApiClient {\r\n    constructor(nc, opts){\r\n        super(nc, opts);\r\n    }\r\n    checkStreamConfigVersions(cfg) {\r\n        const nci = this.nc;\r\n        if (cfg.metadata) {\r\n            const { min, ok } = nci.features.get(Feature.JS_STREAM_CONSUMER_METADATA);\r\n            if (!ok) {\r\n                throw new Error(`stream 'metadata' requires server ${min}`);\r\n            }\r\n        }\r\n        if (cfg.first_seq) {\r\n            const { min, ok } = nci.features.get(Feature.JS_STREAM_FIRST_SEQ);\r\n            if (!ok) {\r\n                throw new Error(`stream 'first_seq' requires server ${min}`);\r\n            }\r\n        }\r\n        if (cfg.subject_transform) {\r\n            const { min, ok } = nci.features.get(Feature.JS_STREAM_SUBJECT_TRANSFORM);\r\n            if (!ok) {\r\n                throw new Error(`stream 'subject_transform' requires server ${min}`);\r\n            }\r\n        }\r\n        if (cfg.compression) {\r\n            const { min, ok } = nci.features.get(Feature.JS_STREAM_COMPRESSION);\r\n            if (!ok) {\r\n                throw new Error(`stream 'compression' requires server ${min}`);\r\n            }\r\n        }\r\n        if (cfg.consumer_limits) {\r\n            const { min, ok } = nci.features.get(Feature.JS_DEFAULT_CONSUMER_LIMITS);\r\n            if (!ok) {\r\n                throw new Error(`stream 'consumer_limits' requires server ${min}`);\r\n            }\r\n        }\r\n        function validateStreamSource(context, src) {\r\n            const count = src.subject_transforms?.length || 0;\r\n            if (count > 0) {\r\n                const { min, ok } = nci.features.get(Feature.JS_STREAM_SOURCE_SUBJECT_TRANSFORM);\r\n                if (!ok) {\r\n                    throw new Error(`${context} 'subject_transforms' requires server ${min}`);\r\n                }\r\n            }\r\n        }\r\n        if (cfg.sources) {\r\n            cfg.sources.forEach((src)=>{\r\n                validateStreamSource(\"stream sources\", src);\r\n            });\r\n        }\r\n        if (cfg.mirror) {\r\n            validateStreamSource(\"stream mirror\", cfg.mirror);\r\n        }\r\n    }\r\n    async add(cfg = {}) {\r\n        this.checkStreamConfigVersions(cfg);\r\n        validateStreamName(cfg.name);\r\n        cfg.mirror = convertStreamSourceDomain(cfg.mirror);\r\n        cfg.sources = cfg.sources?.map(convertStreamSourceDomain);\r\n        const r = await this._request(`${this.prefix}.STREAM.CREATE.${cfg.name}`, cfg);\r\n        const si = r;\r\n        this._fixInfo(si);\r\n        return si;\r\n    }\r\n    async delete(stream) {\r\n        validateStreamName(stream);\r\n        const r = await this._request(`${this.prefix}.STREAM.DELETE.${stream}`);\r\n        const cr = r;\r\n        return cr.success;\r\n    }\r\n    async update(name, cfg = {}) {\r\n        if (typeof name === \"object\") {\r\n            const sc = name;\r\n            name = sc.name;\r\n            cfg = sc;\r\n            console.trace(`\\u001B[33m >> streams.update(config: StreamConfig) api changed to streams.update(name: string, config: StreamUpdateConfig) - this shim will be removed - update your code.  \\u001B[0m`);\r\n        }\r\n        this.checkStreamConfigVersions(cfg);\r\n        validateStreamName(name);\r\n        const old = await this.info(name);\r\n        const update = Object.assign(old.config, cfg);\r\n        update.mirror = convertStreamSourceDomain(update.mirror);\r\n        update.sources = update.sources?.map(convertStreamSourceDomain);\r\n        const r = await this._request(`${this.prefix}.STREAM.UPDATE.${name}`, update);\r\n        const si = r;\r\n        this._fixInfo(si);\r\n        return si;\r\n    }\r\n    async info(name, data) {\r\n        validateStreamName(name);\r\n        const subj = `${this.prefix}.STREAM.INFO.${name}`;\r\n        const r = await this._request(subj, data);\r\n        let si = r;\r\n        let { total, limit } = si;\r\n        let have = si.state.subjects ? Object.getOwnPropertyNames(si.state.subjects).length : 1;\r\n        if (total && total > have) {\r\n            const infos = [\r\n                si\r\n            ];\r\n            const paged = data || {};\r\n            let i = 0;\r\n            while(total > have){\r\n                i++;\r\n                paged.offset = limit * i;\r\n                const r = await this._request(subj, paged);\r\n                total = r.total;\r\n                infos.push(r);\r\n                const count = Object.getOwnPropertyNames(r.state.subjects).length;\r\n                have += count;\r\n                if (count < limit) {\r\n                    break;\r\n                }\r\n            }\r\n            let subjects = {};\r\n            for(let i = 0; i < infos.length; i++){\r\n                si = infos[i];\r\n                if (si.state.subjects) {\r\n                    subjects = Object.assign(subjects, si.state.subjects);\r\n                }\r\n            }\r\n            si.offset = 0;\r\n            si.total = 0;\r\n            si.limit = 0;\r\n            si.state.subjects = subjects;\r\n        }\r\n        this._fixInfo(si);\r\n        return si;\r\n    }\r\n    list(subject = \"\") {\r\n        const payload = subject?.length ? {\r\n            subject\r\n        } : {};\r\n        const listerFilter = (v)=>{\r\n            const slr = v;\r\n            slr.streams.forEach((si)=>{\r\n                this._fixInfo(si);\r\n            });\r\n            return slr.streams;\r\n        };\r\n        const subj = `${this.prefix}.STREAM.LIST`;\r\n        return new ListerImpl(subj, listerFilter, this, payload);\r\n    }\r\n    _fixInfo(si) {\r\n        si.config.sealed = si.config.sealed || false;\r\n        si.config.deny_delete = si.config.deny_delete || false;\r\n        si.config.deny_purge = si.config.deny_purge || false;\r\n        si.config.allow_rollup_hdrs = si.config.allow_rollup_hdrs || false;\r\n    }\r\n    async purge(name, opts) {\r\n        if (opts) {\r\n            const { keep, seq } = opts;\r\n            if (typeof keep === \"number\" && typeof seq === \"number\") {\r\n                throw new Error(\"can specify one of keep or seq\");\r\n            }\r\n        }\r\n        validateStreamName(name);\r\n        const v = await this._request(`${this.prefix}.STREAM.PURGE.${name}`, opts);\r\n        return v;\r\n    }\r\n    async deleteMessage(stream, seq, erase = true) {\r\n        validateStreamName(stream);\r\n        const dr = {\r\n            seq\r\n        };\r\n        if (!erase) {\r\n            dr.no_erase = true;\r\n        }\r\n        const r = await this._request(`${this.prefix}.STREAM.MSG.DELETE.${stream}`, dr);\r\n        const cr = r;\r\n        return cr.success;\r\n    }\r\n    async getMessage(stream, query) {\r\n        validateStreamName(stream);\r\n        const r = await this._request(`${this.prefix}.STREAM.MSG.GET.${stream}`, query);\r\n        const sm = r;\r\n        return new StoredMsgImpl(sm);\r\n    }\r\n    find(subject) {\r\n        return this.findStream(subject);\r\n    }\r\n    listKvs() {\r\n        const filter = (v)=>{\r\n            const slr = v;\r\n            const kvStreams = slr.streams.filter((v)=>{\r\n                return v.config.name.startsWith(kvPrefix);\r\n            });\r\n            kvStreams.forEach((si)=>{\r\n                this._fixInfo(si);\r\n            });\r\n            let cluster = \"\";\r\n            if (kvStreams.length) {\r\n                cluster = this.nc.info?.cluster ?? \"\";\r\n            }\r\n            const status = kvStreams.map((si)=>{\r\n                return new KvStatusImpl(si, cluster);\r\n            });\r\n            return status;\r\n        };\r\n        const subj = `${this.prefix}.STREAM.LIST`;\r\n        return new ListerImpl(subj, filter, this);\r\n    }\r\n    listObjectStores() {\r\n        const filter = (v)=>{\r\n            const slr = v;\r\n            const objStreams = slr.streams.filter((v)=>{\r\n                return v.config.name.startsWith(osPrefix);\r\n            });\r\n            objStreams.forEach((si)=>{\r\n                this._fixInfo(si);\r\n            });\r\n            const status = objStreams.map((si)=>{\r\n                return new ObjectStoreStatusImpl(si);\r\n            });\r\n            return status;\r\n        };\r\n        const subj = `${this.prefix}.STREAM.LIST`;\r\n        return new ListerImpl(subj, filter, this);\r\n    }\r\n    names(subject = \"\") {\r\n        const payload = subject?.length ? {\r\n            subject\r\n        } : {};\r\n        const listerFilter = (v)=>{\r\n            const sr = v;\r\n            return sr.streams;\r\n        };\r\n        const subj = `${this.prefix}.STREAM.NAMES`;\r\n        return new ListerImpl(subj, listerFilter, this, payload);\r\n    }\r\n    async get(name) {\r\n        const si = await this.info(name);\r\n        return Promise.resolve(new StreamImpl(this, si));\r\n    }\r\n}\r\nclass StoredMsgImpl {\r\n    _header;\r\n    smr;\r\n    static jc;\r\n    constructor(smr){\r\n        this.smr = smr;\r\n    }\r\n    get subject() {\r\n        return this.smr.message.subject;\r\n    }\r\n    get seq() {\r\n        return this.smr.message.seq;\r\n    }\r\n    get timestamp() {\r\n        return this.smr.message.time;\r\n    }\r\n    get time() {\r\n        return new Date(Date.parse(this.timestamp));\r\n    }\r\n    get data() {\r\n        return this.smr.message.data ? this._parse(this.smr.message.data) : Empty;\r\n    }\r\n    get header() {\r\n        if (!this._header) {\r\n            if (this.smr.message.hdrs) {\r\n                const hd = this._parse(this.smr.message.hdrs);\r\n                this._header = MsgHdrsImpl.decode(hd);\r\n            } else {\r\n                this._header = headers();\r\n            }\r\n        }\r\n        return this._header;\r\n    }\r\n    _parse(s) {\r\n        const bs = atob(s);\r\n        const len = bs.length;\r\n        const bytes = new Uint8Array(len);\r\n        for(let i = 0; i < len; i++){\r\n            bytes[i] = bs.charCodeAt(i);\r\n        }\r\n        return bytes;\r\n    }\r\n    json(reviver) {\r\n        return JSONCodec(reviver).decode(this.data);\r\n    }\r\n    string() {\r\n        return TD.decode(this.data);\r\n    }\r\n}\r\nclass StreamsImpl {\r\n    api;\r\n    constructor(api){\r\n        this.api = api;\r\n    }\r\n    get(stream) {\r\n        return this.api.info(stream).then((si)=>{\r\n            return new StreamImpl(this.api, si);\r\n        });\r\n    }\r\n}\r\nclass KvStoredEntryImpl {\r\n    bucket;\r\n    sm;\r\n    prefixLen;\r\n    constructor(bucket, prefixLen, sm){\r\n        this.bucket = bucket;\r\n        this.prefixLen = prefixLen;\r\n        this.sm = sm;\r\n    }\r\n    get key() {\r\n        return this.sm.subject.substring(this.prefixLen);\r\n    }\r\n    get value() {\r\n        return this.sm.data;\r\n    }\r\n    get delta() {\r\n        return 0;\r\n    }\r\n    get created() {\r\n        return this.sm.time;\r\n    }\r\n    get revision() {\r\n        return this.sm.seq;\r\n    }\r\n    get operation() {\r\n        return this.sm.header.get(kvOperationHdr) || \"PUT\";\r\n    }\r\n    get length() {\r\n        const slen = this.sm.header.get(JsHeaders.MessageSizeHdr) || \"\";\r\n        if (slen !== \"\") {\r\n            return parseInt(slen, 10);\r\n        }\r\n        return this.sm.data.length;\r\n    }\r\n    json() {\r\n        return this.sm.json();\r\n    }\r\n    string() {\r\n        return this.sm.string();\r\n    }\r\n}\r\nclass KvJsMsgEntryImpl {\r\n    bucket;\r\n    key;\r\n    sm;\r\n    constructor(bucket, key, sm){\r\n        this.bucket = bucket;\r\n        this.key = key;\r\n        this.sm = sm;\r\n    }\r\n    get value() {\r\n        return this.sm.data;\r\n    }\r\n    get created() {\r\n        return new Date(millis(this.sm.info.timestampNanos));\r\n    }\r\n    get revision() {\r\n        return this.sm.seq;\r\n    }\r\n    get operation() {\r\n        return this.sm.headers?.get(kvOperationHdr) || \"PUT\";\r\n    }\r\n    get delta() {\r\n        return this.sm.info.pending;\r\n    }\r\n    get length() {\r\n        const slen = this.sm.headers?.get(JsHeaders.MessageSizeHdr) || \"\";\r\n        if (slen !== \"\") {\r\n            return parseInt(slen, 10);\r\n        }\r\n        return this.sm.data.length;\r\n    }\r\n    json() {\r\n        return this.sm.json();\r\n    }\r\n    string() {\r\n        return this.sm.string();\r\n    }\r\n}\r\nclass ObjectInfoImpl {\r\n    info;\r\n    hdrs;\r\n    constructor(oi){\r\n        this.info = oi;\r\n    }\r\n    get name() {\r\n        return this.info.name;\r\n    }\r\n    get description() {\r\n        return this.info.description ?? \"\";\r\n    }\r\n    get headers() {\r\n        if (!this.hdrs) {\r\n            this.hdrs = MsgHdrsImpl.fromRecord(this.info.headers || {});\r\n        }\r\n        return this.hdrs;\r\n    }\r\n    get options() {\r\n        return this.info.options;\r\n    }\r\n    get bucket() {\r\n        return this.info.bucket;\r\n    }\r\n    get chunks() {\r\n        return this.info.chunks;\r\n    }\r\n    get deleted() {\r\n        return this.info.deleted ?? false;\r\n    }\r\n    get digest() {\r\n        return this.info.digest;\r\n    }\r\n    get mtime() {\r\n        return this.info.mtime;\r\n    }\r\n    get nuid() {\r\n        return this.info.nuid;\r\n    }\r\n    get size() {\r\n        return this.info.size;\r\n    }\r\n    get revision() {\r\n        return this.info.revision;\r\n    }\r\n    get metadata() {\r\n        return this.info.metadata || {};\r\n    }\r\n    isLink() {\r\n        return this.info.options?.link !== undefined && this.info.options?.link !== null;\r\n    }\r\n}\r\nfunction toServerObjectStoreMeta(meta) {\r\n    const v = {\r\n        name: meta.name,\r\n        description: meta.description ?? \"\",\r\n        options: meta.options,\r\n        metadata: meta.metadata\r\n    };\r\n    if (meta.headers) {\r\n        const mhi = meta.headers;\r\n        v.headers = mhi.toRecord();\r\n    }\r\n    return v;\r\n}\r\nfunction emptyReadableStream() {\r\n    return new ReadableStream({\r\n        pull (c) {\r\n            c.enqueue(new Uint8Array(0));\r\n            c.close();\r\n        }\r\n    });\r\n}\r\nclass ObjectStoreImpl {\r\n    jsm;\r\n    js;\r\n    stream;\r\n    name;\r\n    constructor(name, jsm, js){\r\n        this.name = name;\r\n        this.jsm = jsm;\r\n        this.js = js;\r\n    }\r\n    _checkNotEmpty(name) {\r\n        if (!name || name.length === 0) {\r\n            return {\r\n                name,\r\n                error: new Error(\"name cannot be empty\")\r\n            };\r\n        }\r\n        return {\r\n            name\r\n        };\r\n    }\r\n    async info(name) {\r\n        const info = await this.rawInfo(name);\r\n        return info ? new ObjectInfoImpl(info) : null;\r\n    }\r\n    async list() {\r\n        const buf = [];\r\n        const iter = await this.watch({\r\n            ignoreDeletes: true,\r\n            includeHistory: true\r\n        });\r\n        for await (const info of iter){\r\n            if (info === null) {\r\n                break;\r\n            }\r\n            buf.push(info);\r\n        }\r\n        return Promise.resolve(buf);\r\n    }\r\n    async rawInfo(name) {\r\n        const { name: obj, error } = this._checkNotEmpty(name);\r\n        if (error) {\r\n            return Promise.reject(error);\r\n        }\r\n        const meta = this._metaSubject(obj);\r\n        try {\r\n            const m = await this.jsm.streams.getMessage(this.stream, {\r\n                last_by_subj: meta\r\n            });\r\n            const jc = JSONCodec();\r\n            const soi = jc.decode(m.data);\r\n            soi.revision = m.seq;\r\n            return soi;\r\n        } catch (err) {\r\n            if (err.code === \"404\") {\r\n                return null;\r\n            }\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async _si(opts) {\r\n        try {\r\n            return await this.jsm.streams.info(this.stream, opts);\r\n        } catch (err) {\r\n            const nerr = err;\r\n            if (nerr.code === \"404\") {\r\n                return null;\r\n            }\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    async seal() {\r\n        let info = await this._si();\r\n        if (info === null) {\r\n            return Promise.reject(new Error(\"object store not found\"));\r\n        }\r\n        info.config.sealed = true;\r\n        info = await this.jsm.streams.update(this.stream, info.config);\r\n        return Promise.resolve(new ObjectStoreStatusImpl(info));\r\n    }\r\n    async status(opts) {\r\n        const info = await this._si(opts);\r\n        if (info === null) {\r\n            return Promise.reject(new Error(\"object store not found\"));\r\n        }\r\n        return Promise.resolve(new ObjectStoreStatusImpl(info));\r\n    }\r\n    destroy() {\r\n        return this.jsm.streams.delete(this.stream);\r\n    }\r\n    async _put(meta, rs, opts) {\r\n        const jsopts = this.js.getOptions();\r\n        opts = opts || {\r\n            timeout: jsopts.timeout\r\n        };\r\n        opts.timeout = opts.timeout || jsopts.timeout;\r\n        opts.previousRevision = opts.previousRevision ?? undefined;\r\n        const { timeout, previousRevision } = opts;\r\n        const si = this.js.nc.info;\r\n        const maxPayload = si?.max_payload || 1024;\r\n        meta = meta || {};\r\n        meta.options = meta.options || {};\r\n        let maxChunk = meta.options?.max_chunk_size || 128 * 1024;\r\n        maxChunk = maxChunk > maxPayload ? maxPayload : maxChunk;\r\n        meta.options.max_chunk_size = maxChunk;\r\n        const old = await this.info(meta.name);\r\n        const { name: n, error } = this._checkNotEmpty(meta.name);\r\n        if (error) {\r\n            return Promise.reject(error);\r\n        }\r\n        const id = nuid.next();\r\n        const chunkSubj = this._chunkSubject(id);\r\n        const metaSubj = this._metaSubject(n);\r\n        const info = Object.assign({\r\n            bucket: this.name,\r\n            nuid: id,\r\n            size: 0,\r\n            chunks: 0\r\n        }, toServerObjectStoreMeta(meta));\r\n        const d = deferred();\r\n        const proms = [];\r\n        const db = new DataBuffer();\r\n        try {\r\n            const reader = rs ? rs.getReader() : null;\r\n            const sha = new SHA256();\r\n            while(true){\r\n                const { done, value } = reader ? await reader.read() : {\r\n                    done: true,\r\n                    value: undefined\r\n                };\r\n                if (done) {\r\n                    if (db.size() > 0) {\r\n                        const payload = db.drain();\r\n                        sha.update(payload);\r\n                        info.chunks++;\r\n                        info.size += payload.length;\r\n                        proms.push(this.js.publish(chunkSubj, payload, {\r\n                            timeout\r\n                        }));\r\n                    }\r\n                    await Promise.all(proms);\r\n                    proms.length = 0;\r\n                    info.mtime = new Date().toISOString();\r\n                    const digest = sha.digest(\"base64\");\r\n                    const pad = digest.length % 3;\r\n                    const padding = pad > 0 ? \"=\".repeat(pad) : \"\";\r\n                    info.digest = `${digestType}${digest}${padding}`;\r\n                    info.deleted = false;\r\n                    const h = headers();\r\n                    if (typeof previousRevision === \"number\") {\r\n                        h.set(PubHeaders.ExpectedLastSubjectSequenceHdr, `${previousRevision}`);\r\n                    }\r\n                    h.set(JsHeaders.RollupHdr, JsHeaders.RollupValueSubject);\r\n                    const pa = await this.js.publish(metaSubj, JSONCodec().encode(info), {\r\n                        headers: h,\r\n                        timeout\r\n                    });\r\n                    info.revision = pa.seq;\r\n                    if (old) {\r\n                        try {\r\n                            await this.jsm.streams.purge(this.stream, {\r\n                                filter: `$O.${this.name}.C.${old.nuid}`\r\n                            });\r\n                        } catch (_err) {}\r\n                    }\r\n                    d.resolve(new ObjectInfoImpl(info));\r\n                    break;\r\n                }\r\n                if (value) {\r\n                    db.fill(value);\r\n                    while(db.size() > maxChunk){\r\n                        info.chunks++;\r\n                        info.size += maxChunk;\r\n                        const payload = db.drain(meta.options.max_chunk_size);\r\n                        sha.update(payload);\r\n                        proms.push(this.js.publish(chunkSubj, payload, {\r\n                            timeout\r\n                        }));\r\n                    }\r\n                }\r\n            }\r\n        } catch (err) {\r\n            await this.jsm.streams.purge(this.stream, {\r\n                filter: chunkSubj\r\n            });\r\n            d.reject(err);\r\n        }\r\n        return d;\r\n    }\r\n    putBlob(meta, data, opts) {\r\n        function readableStreamFrom(data) {\r\n            return new ReadableStream({\r\n                pull (controller) {\r\n                    controller.enqueue(data);\r\n                    controller.close();\r\n                }\r\n            });\r\n        }\r\n        if (data === null) {\r\n            data = new Uint8Array(0);\r\n        }\r\n        return this.put(meta, readableStreamFrom(data), opts);\r\n    }\r\n    put(meta, rs, opts) {\r\n        if (meta?.options?.link) {\r\n            return Promise.reject(new Error(\"link cannot be set when putting the object in bucket\"));\r\n        }\r\n        return this._put(meta, rs, opts);\r\n    }\r\n    async getBlob(name) {\r\n        async function fromReadableStream(rs) {\r\n            const buf = new DataBuffer();\r\n            const reader = rs.getReader();\r\n            while(true){\r\n                const { done, value } = await reader.read();\r\n                if (done) {\r\n                    return buf.drain();\r\n                }\r\n                if (value && value.length) {\r\n                    buf.fill(value);\r\n                }\r\n            }\r\n        }\r\n        const r = await this.get(name);\r\n        if (r === null) {\r\n            return Promise.resolve(null);\r\n        }\r\n        const vs = await Promise.all([\r\n            r.error,\r\n            fromReadableStream(r.data)\r\n        ]);\r\n        if (vs[0]) {\r\n            return Promise.reject(vs[0]);\r\n        } else {\r\n            return Promise.resolve(vs[1]);\r\n        }\r\n    }\r\n    async get(name) {\r\n        const info = await this.rawInfo(name);\r\n        if (info === null) {\r\n            return Promise.resolve(null);\r\n        }\r\n        if (info.deleted) {\r\n            return Promise.resolve(null);\r\n        }\r\n        if (info.options && info.options.link) {\r\n            const ln = info.options.link.name || \"\";\r\n            if (ln === \"\") {\r\n                throw new Error(\"link is a bucket\");\r\n            }\r\n            const os = info.options.link.bucket !== this.name ? await ObjectStoreImpl.create(this.js, info.options.link.bucket) : this;\r\n            return os.get(ln);\r\n        }\r\n        const d = deferred();\r\n        const r = {\r\n            info: new ObjectInfoImpl(info),\r\n            error: d\r\n        };\r\n        if (info.size === 0) {\r\n            r.data = emptyReadableStream();\r\n            d.resolve(null);\r\n            return Promise.resolve(r);\r\n        }\r\n        let controller;\r\n        const oc = consumerOpts();\r\n        oc.orderedConsumer();\r\n        const sha = new SHA256();\r\n        const subj = `$O.${this.name}.C.${info.nuid}`;\r\n        const sub = await this.js.subscribe(subj, oc);\r\n        (async ()=>{\r\n            for await (const jm of sub){\r\n                if (jm.data.length > 0) {\r\n                    sha.update(jm.data);\r\n                    controller.enqueue(jm.data);\r\n                }\r\n                if (jm.info.pending === 0) {\r\n                    const hash = sha.digest(\"base64\");\r\n                    const pad = hash.length % 3;\r\n                    const padding = pad > 0 ? \"=\".repeat(pad) : \"\";\r\n                    const digest = `${digestType}${hash}${padding}`;\r\n                    if (digest !== info.digest) {\r\n                        controller.error(new Error(`received a corrupt object, digests do not match received: ${info.digest} calculated ${digest}`));\r\n                    } else {\r\n                        controller.close();\r\n                    }\r\n                    sub.unsubscribe();\r\n                }\r\n            }\r\n        })().then(()=>{\r\n            d.resolve();\r\n        }).catch((err)=>{\r\n            controller.error(err);\r\n            d.reject(err);\r\n        });\r\n        r.data = new ReadableStream({\r\n            start (c) {\r\n                controller = c;\r\n            },\r\n            cancel () {\r\n                sub.unsubscribe();\r\n            }\r\n        });\r\n        return r;\r\n    }\r\n    linkStore(name, bucket) {\r\n        if (!(bucket instanceof ObjectStoreImpl)) {\r\n            return Promise.reject(\"bucket required\");\r\n        }\r\n        const osi = bucket;\r\n        const { name: n, error } = this._checkNotEmpty(name);\r\n        if (error) {\r\n            return Promise.reject(error);\r\n        }\r\n        const meta = {\r\n            name: n,\r\n            options: {\r\n                link: {\r\n                    bucket: osi.name\r\n                }\r\n            }\r\n        };\r\n        return this._put(meta, null);\r\n    }\r\n    async link(name, info) {\r\n        const { name: n, error } = this._checkNotEmpty(name);\r\n        if (error) {\r\n            return Promise.reject(error);\r\n        }\r\n        if (info.deleted) {\r\n            return Promise.reject(new Error(\"src object is deleted\"));\r\n        }\r\n        if (info.isLink()) {\r\n            return Promise.reject(new Error(\"src object is a link\"));\r\n        }\r\n        const dest = await this.rawInfo(name);\r\n        if (dest !== null && !dest.deleted) {\r\n            return Promise.reject(new Error(\"an object already exists with that name\"));\r\n        }\r\n        const link = {\r\n            bucket: info.bucket,\r\n            name: info.name\r\n        };\r\n        const mm = {\r\n            name: n,\r\n            bucket: info.bucket,\r\n            options: {\r\n                link: link\r\n            }\r\n        };\r\n        await this.js.publish(this._metaSubject(name), JSON.stringify(mm));\r\n        const i = await this.info(name);\r\n        return Promise.resolve(i);\r\n    }\r\n    async delete(name) {\r\n        const info = await this.rawInfo(name);\r\n        if (info === null) {\r\n            return Promise.resolve({\r\n                purged: 0,\r\n                success: false\r\n            });\r\n        }\r\n        info.deleted = true;\r\n        info.size = 0;\r\n        info.chunks = 0;\r\n        info.digest = \"\";\r\n        const jc = JSONCodec();\r\n        const h = headers();\r\n        h.set(JsHeaders.RollupHdr, JsHeaders.RollupValueSubject);\r\n        await this.js.publish(this._metaSubject(info.name), jc.encode(info), {\r\n            headers: h\r\n        });\r\n        return this.jsm.streams.purge(this.stream, {\r\n            filter: this._chunkSubject(info.nuid)\r\n        });\r\n    }\r\n    async update(name, meta = {}) {\r\n        const info = await this.rawInfo(name);\r\n        if (info === null) {\r\n            return Promise.reject(new Error(\"object not found\"));\r\n        }\r\n        if (info.deleted) {\r\n            return Promise.reject(new Error(\"cannot update meta for a deleted object\"));\r\n        }\r\n        meta.name = meta.name ?? info.name;\r\n        const { name: n, error } = this._checkNotEmpty(meta.name);\r\n        if (error) {\r\n            return Promise.reject(error);\r\n        }\r\n        if (name !== meta.name) {\r\n            const i = await this.info(meta.name);\r\n            if (i && !i.deleted) {\r\n                return Promise.reject(new Error(\"an object already exists with that name\"));\r\n            }\r\n        }\r\n        meta.name = n;\r\n        const ii = Object.assign({}, info, toServerObjectStoreMeta(meta));\r\n        const ack = await this.js.publish(this._metaSubject(ii.name), JSON.stringify(ii));\r\n        if (name !== meta.name) {\r\n            await this.jsm.streams.purge(this.stream, {\r\n                filter: this._metaSubject(name)\r\n            });\r\n        }\r\n        return Promise.resolve(ack);\r\n    }\r\n    async watch(opts = {}) {\r\n        opts.includeHistory = opts.includeHistory ?? false;\r\n        opts.ignoreDeletes = opts.ignoreDeletes ?? false;\r\n        let initialized = false;\r\n        const qi = new QueuedIteratorImpl();\r\n        const subj = this._metaSubjectAll();\r\n        try {\r\n            await this.jsm.streams.getMessage(this.stream, {\r\n                last_by_subj: subj\r\n            });\r\n        } catch (err) {\r\n            if (err.code === \"404\") {\r\n                qi.push(null);\r\n                initialized = true;\r\n            } else {\r\n                qi.stop(err);\r\n            }\r\n        }\r\n        const jc = JSONCodec();\r\n        const copts = consumerOpts();\r\n        copts.orderedConsumer();\r\n        if (opts.includeHistory) {\r\n            copts.deliverLastPerSubject();\r\n        } else {\r\n            initialized = true;\r\n            copts.deliverNew();\r\n        }\r\n        copts.callback((err, jm)=>{\r\n            if (err) {\r\n                qi.stop(err);\r\n                return;\r\n            }\r\n            if (jm !== null) {\r\n                const oi = jc.decode(jm.data);\r\n                if (oi.deleted && opts.ignoreDeletes === true) {} else {\r\n                    qi.push(oi);\r\n                }\r\n                if (jm.info?.pending === 0 && !initialized) {\r\n                    initialized = true;\r\n                    qi.push(null);\r\n                }\r\n            }\r\n        });\r\n        const sub = await this.js.subscribe(subj, copts);\r\n        qi._data = sub;\r\n        qi.iterClosed.then(()=>{\r\n            sub.unsubscribe();\r\n        });\r\n        sub.closed.then(()=>{\r\n            qi.stop();\r\n        }).catch((err)=>{\r\n            qi.stop(err);\r\n        });\r\n        return qi;\r\n    }\r\n    _chunkSubject(id) {\r\n        return `$O.${this.name}.C.${id}`;\r\n    }\r\n    _metaSubject(n) {\r\n        return `$O.${this.name}.M.${Base64UrlPaddedCodec.encode(n)}`;\r\n    }\r\n    _metaSubjectAll() {\r\n        return `$O.${this.name}.M.>`;\r\n    }\r\n    async init(opts = {}) {\r\n        try {\r\n            this.stream = objectStoreStreamName(this.name);\r\n        } catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n        const max_age = opts?.ttl || 0;\r\n        delete opts.ttl;\r\n        const sc = Object.assign({\r\n            max_age\r\n        }, opts);\r\n        sc.name = this.stream;\r\n        sc.allow_direct = true;\r\n        sc.allow_rollup_hdrs = true;\r\n        sc.discard = DiscardPolicy.New;\r\n        sc.subjects = [\r\n            `$O.${this.name}.C.>`,\r\n            `$O.${this.name}.M.>`\r\n        ];\r\n        if (opts.placement) {\r\n            sc.placement = opts.placement;\r\n        }\r\n        if (opts.metadata) {\r\n            sc.metadata = opts.metadata;\r\n        }\r\n        if (typeof opts.compression === \"boolean\") {\r\n            sc.compression = opts.compression ? StoreCompression.S2 : StoreCompression.None;\r\n        }\r\n        try {\r\n            await this.jsm.streams.info(sc.name);\r\n        } catch (err) {\r\n            if (err.message === \"stream not found\") {\r\n                await this.jsm.streams.add(sc);\r\n            }\r\n        }\r\n    }\r\n    static async create(js, name, opts = {}) {\r\n        const jsm = await js.jetstreamManager();\r\n        const os = new ObjectStoreImpl(name, jsm, js);\r\n        await os.init(opts);\r\n        return Promise.resolve(os);\r\n    }\r\n}\r\nclass ViewsImpl {\r\n    js;\r\n    jsm;\r\n    constructor(js){\r\n        this.js = js;\r\n    }\r\n    kv(name, opts = {}) {\r\n        const jsi = this.js;\r\n        const { ok, min } = jsi.nc.features.get(Feature.JS_KV);\r\n        if (!ok) {\r\n            return Promise.reject(new Error(`kv is only supported on servers ${min} or better`));\r\n        }\r\n        if (opts.bindOnly) {\r\n            return Bucket.bind(this.js, name);\r\n        }\r\n        return Bucket.create(this.js, name, opts);\r\n    }\r\n    os(name, opts = {}) {\r\n        if (typeof crypto?.subtle?.digest !== \"function\") {\r\n            return Promise.reject(new Error(\"objectstore: unable to calculate hashes - crypto.subtle.digest with sha256 support is required\"));\r\n        }\r\n        const jsi = this.js;\r\n        const { ok, min } = jsi.nc.features.get(Feature.JS_OBJECTSTORE);\r\n        if (!ok) {\r\n            return Promise.reject(new Error(`objectstore is only supported on servers ${min} or better`));\r\n        }\r\n        return ObjectStoreImpl.create(this.js, name, opts);\r\n    }\r\n}\r\nclass JetStreamClientImpl extends BaseApiClient {\r\n    consumers;\r\n    streams;\r\n    consumerAPI;\r\n    streamAPI;\r\n    constructor(nc, opts){\r\n        super(nc, opts);\r\n        this.consumerAPI = new ConsumerAPIImpl(nc, opts);\r\n        this.streamAPI = new StreamAPIImpl(nc, opts);\r\n        this.consumers = new ConsumersImpl(this.consumerAPI);\r\n        this.streams = new StreamsImpl(this.streamAPI);\r\n    }\r\n    jetstreamManager(checkAPI) {\r\n        const opts = Object.assign({\r\n            checkAPI\r\n        }, this.opts);\r\n        return this.nc.jetstreamManager(opts);\r\n    }\r\n    get apiPrefix() {\r\n        return this.prefix;\r\n    }\r\n    get views() {\r\n        return new ViewsImpl(this);\r\n    }\r\n    async publish(subj, data = Empty, opts) {\r\n        opts = opts || {};\r\n        opts.expect = opts.expect || {};\r\n        const mh = opts?.headers || headers();\r\n        if (opts) {\r\n            if (opts.msgID) {\r\n                mh.set(PubHeaders.MsgIdHdr, opts.msgID);\r\n            }\r\n            if (opts.expect.lastMsgID) {\r\n                mh.set(PubHeaders.ExpectedLastMsgIdHdr, opts.expect.lastMsgID);\r\n            }\r\n            if (opts.expect.streamName) {\r\n                mh.set(PubHeaders.ExpectedStreamHdr, opts.expect.streamName);\r\n            }\r\n            if (typeof opts.expect.lastSequence === \"number\") {\r\n                mh.set(PubHeaders.ExpectedLastSeqHdr, `${opts.expect.lastSequence}`);\r\n            }\r\n            if (typeof opts.expect.lastSubjectSequence === \"number\") {\r\n                mh.set(PubHeaders.ExpectedLastSubjectSequenceHdr, `${opts.expect.lastSubjectSequence}`);\r\n            }\r\n        }\r\n        const to = opts.timeout || this.timeout;\r\n        const ro = {};\r\n        if (to) {\r\n            ro.timeout = to;\r\n        }\r\n        if (opts) {\r\n            ro.headers = mh;\r\n        }\r\n        let { retries, retry_delay } = opts;\r\n        retries = retries || 1;\r\n        retry_delay = retry_delay || 250;\r\n        let r;\r\n        for(let i = 0; i < retries; i++){\r\n            try {\r\n                r = await this.nc.request(subj, data, ro);\r\n                break;\r\n            } catch (err) {\r\n                const ne = err;\r\n                if (ne.code === \"503\" && i + 1 < retries) {\r\n                    await delay(retry_delay);\r\n                } else {\r\n                    throw err;\r\n                }\r\n            }\r\n        }\r\n        const pa = this.parseJsResponse(r);\r\n        if (pa.stream === \"\") {\r\n            throw NatsError.errorForCode(ErrorCode.JetStreamInvalidAck);\r\n        }\r\n        pa.duplicate = pa.duplicate ? pa.duplicate : false;\r\n        return pa;\r\n    }\r\n    async pull(stream, durable, expires = 0) {\r\n        validateStreamName(stream);\r\n        validateDurableName(durable);\r\n        let timeout = this.timeout;\r\n        if (expires > timeout) {\r\n            timeout = expires;\r\n        }\r\n        expires = expires < 0 ? 0 : nanos(expires);\r\n        const pullOpts = {\r\n            batch: 1,\r\n            no_wait: expires === 0,\r\n            expires\r\n        };\r\n        const msg = await this.nc.request(`${this.prefix}.CONSUMER.MSG.NEXT.${stream}.${durable}`, this.jc.encode(pullOpts), {\r\n            noMux: true,\r\n            timeout\r\n        });\r\n        const err = checkJsError(msg);\r\n        if (err) {\r\n            throw err;\r\n        }\r\n        return toJsMsg(msg);\r\n    }\r\n    fetch(stream, durable, opts = {}) {\r\n        validateStreamName(stream);\r\n        validateDurableName(durable);\r\n        let timer = null;\r\n        const trackBytes = (opts.max_bytes ?? 0) > 0;\r\n        let receivedBytes = 0;\r\n        const max_bytes = trackBytes ? opts.max_bytes : 0;\r\n        let monitor = null;\r\n        const args = {};\r\n        args.batch = opts.batch || 1;\r\n        if (max_bytes) {\r\n            const fv = this.nc.features.get(Feature.JS_PULL_MAX_BYTES);\r\n            if (!fv.ok) {\r\n                throw new Error(`max_bytes is only supported on servers ${fv.min} or better`);\r\n            }\r\n            args.max_bytes = max_bytes;\r\n        }\r\n        args.no_wait = opts.no_wait || false;\r\n        if (args.no_wait && args.expires) {\r\n            args.expires = 0;\r\n        }\r\n        const expires = opts.expires || 0;\r\n        if (expires) {\r\n            args.expires = nanos(expires);\r\n        }\r\n        if (expires === 0 && args.no_wait === false) {\r\n            throw new Error(\"expires or no_wait is required\");\r\n        }\r\n        const hb = opts.idle_heartbeat || 0;\r\n        if (hb) {\r\n            args.idle_heartbeat = nanos(hb);\r\n            if (opts.delay_heartbeat === true) {\r\n                args.idle_heartbeat = nanos(hb * 4);\r\n            }\r\n        }\r\n        const qi = new QueuedIteratorImpl();\r\n        const wants = args.batch;\r\n        let received = 0;\r\n        qi.protocolFilterFn = (jm, _ingest = false)=>{\r\n            const jsmi = jm;\r\n            if (isHeartbeatMsg(jsmi.msg)) {\r\n                monitor?.work();\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        qi.dispatchedFn = (m)=>{\r\n            if (m) {\r\n                if (trackBytes) {\r\n                    receivedBytes += m.data.length;\r\n                }\r\n                received++;\r\n                if (timer && m.info.pending === 0) {\r\n                    return;\r\n                }\r\n                if (qi.getPending() === 1 && m.info.pending === 0 || wants === received || max_bytes > 0 && receivedBytes >= max_bytes) {\r\n                    qi.stop();\r\n                }\r\n            }\r\n        };\r\n        const inbox = createInbox(this.nc.options.inboxPrefix);\r\n        const sub = this.nc.subscribe(inbox, {\r\n            max: opts.batch,\r\n            callback: (err, msg)=>{\r\n                if (err === null) {\r\n                    err = checkJsError(msg);\r\n                }\r\n                if (err !== null) {\r\n                    if (timer) {\r\n                        timer.cancel();\r\n                        timer = null;\r\n                    }\r\n                    if (isNatsError(err)) {\r\n                        qi.stop(hideNonTerminalJsErrors(err) === null ? undefined : err);\r\n                    } else {\r\n                        qi.stop(err);\r\n                    }\r\n                } else {\r\n                    monitor?.work();\r\n                    qi.received++;\r\n                    qi.push(toJsMsg(msg));\r\n                }\r\n            }\r\n        });\r\n        if (expires) {\r\n            timer = timeout(expires);\r\n            timer.catch(()=>{\r\n                if (!sub.isClosed()) {\r\n                    sub.drain().catch(()=>{});\r\n                    timer = null;\r\n                }\r\n                if (monitor) {\r\n                    monitor.cancel();\r\n                }\r\n            });\r\n        }\r\n        (async ()=>{\r\n            try {\r\n                if (hb) {\r\n                    monitor = new IdleHeartbeatMonitor(hb, (v)=>{\r\n                        qi.push(()=>{\r\n                            qi.err = new NatsError(`${Js409Errors.IdleHeartbeatMissed}: ${v}`, ErrorCode.JetStreamIdleHeartBeat);\r\n                        });\r\n                        return true;\r\n                    });\r\n                }\r\n            } catch (_err) {}\r\n            await sub.closed;\r\n            if (timer !== null) {\r\n                timer.cancel();\r\n                timer = null;\r\n            }\r\n            if (monitor) {\r\n                monitor.cancel();\r\n            }\r\n            qi.stop();\r\n        })().catch();\r\n        this.nc.publish(`${this.prefix}.CONSUMER.MSG.NEXT.${stream}.${durable}`, this.jc.encode(args), {\r\n            reply: inbox\r\n        });\r\n        return qi;\r\n    }\r\n    async pullSubscribe(subject, opts = consumerOpts()) {\r\n        const cso = await this._processOptions(subject, opts);\r\n        if (cso.ordered) {\r\n            throw new Error(\"pull subscribers cannot be be ordered\");\r\n        }\r\n        if (cso.config.deliver_subject) {\r\n            throw new Error(\"consumer info specifies deliver_subject - pull consumers cannot have deliver_subject set\");\r\n        }\r\n        const ackPolicy = cso.config.ack_policy;\r\n        if (ackPolicy === AckPolicy.None || ackPolicy === AckPolicy.All) {\r\n            throw new Error(\"ack policy for pull consumers must be explicit\");\r\n        }\r\n        const so = this._buildTypedSubscriptionOpts(cso);\r\n        const sub = new JetStreamPullSubscriptionImpl(this, cso.deliver, so);\r\n        sub.info = cso;\r\n        try {\r\n            await this._maybeCreateConsumer(cso);\r\n        } catch (err) {\r\n            sub.unsubscribe();\r\n            throw err;\r\n        }\r\n        return sub;\r\n    }\r\n    async subscribe(subject, opts = consumerOpts()) {\r\n        const cso = await this._processOptions(subject, opts);\r\n        if (!cso.isBind && !cso.config.deliver_subject) {\r\n            throw new Error(\"push consumer requires deliver_subject\");\r\n        }\r\n        const so = this._buildTypedSubscriptionOpts(cso);\r\n        const sub = new JetStreamSubscriptionImpl(this, cso.deliver, so);\r\n        sub.info = cso;\r\n        try {\r\n            await this._maybeCreateConsumer(cso);\r\n        } catch (err) {\r\n            sub.unsubscribe();\r\n            throw err;\r\n        }\r\n        sub._maybeSetupHbMonitoring();\r\n        return sub;\r\n    }\r\n    async _processOptions(subject, opts = consumerOpts()) {\r\n        const jsi = isConsumerOptsBuilder(opts) ? opts.getOpts() : opts;\r\n        jsi.isBind = isConsumerOptsBuilder(opts) ? opts.isBind : false;\r\n        jsi.flow_control = {\r\n            heartbeat_count: 0,\r\n            fc_count: 0,\r\n            consumer_restarts: 0\r\n        };\r\n        if (jsi.ordered) {\r\n            jsi.ordered_consumer_sequence = {\r\n                stream_seq: 0,\r\n                delivery_seq: 0\r\n            };\r\n            if (jsi.config.ack_policy !== AckPolicy.NotSet && jsi.config.ack_policy !== AckPolicy.None) {\r\n                throw new NatsError(\"ordered consumer: ack_policy can only be set to 'none'\", ErrorCode.ApiError);\r\n            }\r\n            if (jsi.config.durable_name && jsi.config.durable_name.length > 0) {\r\n                throw new NatsError(\"ordered consumer: durable_name cannot be set\", ErrorCode.ApiError);\r\n            }\r\n            if (jsi.config.deliver_subject && jsi.config.deliver_subject.length > 0) {\r\n                throw new NatsError(\"ordered consumer: deliver_subject cannot be set\", ErrorCode.ApiError);\r\n            }\r\n            if (jsi.config.max_deliver !== undefined && jsi.config.max_deliver > 1) {\r\n                throw new NatsError(\"ordered consumer: max_deliver cannot be set\", ErrorCode.ApiError);\r\n            }\r\n            if (jsi.config.deliver_group && jsi.config.deliver_group.length > 0) {\r\n                throw new NatsError(\"ordered consumer: deliver_group cannot be set\", ErrorCode.ApiError);\r\n            }\r\n            jsi.config.deliver_subject = createInbox(this.nc.options.inboxPrefix);\r\n            jsi.config.ack_policy = AckPolicy.None;\r\n            jsi.config.max_deliver = 1;\r\n            jsi.config.flow_control = true;\r\n            jsi.config.idle_heartbeat = jsi.config.idle_heartbeat || nanos(5000);\r\n            jsi.config.ack_wait = nanos(22 * 60 * 60 * 1000);\r\n            jsi.config.mem_storage = true;\r\n            jsi.config.num_replicas = 1;\r\n        }\r\n        if (jsi.config.ack_policy === AckPolicy.NotSet) {\r\n            jsi.config.ack_policy = AckPolicy.All;\r\n        }\r\n        jsi.api = this;\r\n        jsi.config = jsi.config || {};\r\n        jsi.stream = jsi.stream ? jsi.stream : await this.findStream(subject);\r\n        jsi.attached = false;\r\n        if (jsi.config.durable_name) {\r\n            try {\r\n                const info = await this.consumerAPI.info(jsi.stream, jsi.config.durable_name);\r\n                if (info) {\r\n                    if (info.config.filter_subject && info.config.filter_subject !== subject) {\r\n                        throw new Error(\"subject does not match consumer\");\r\n                    }\r\n                    const qn = jsi.config.deliver_group ?? \"\";\r\n                    if (qn === \"\" && info.push_bound === true) {\r\n                        throw new Error(`duplicate subscription`);\r\n                    }\r\n                    const rqn = info.config.deliver_group ?? \"\";\r\n                    if (qn !== rqn) {\r\n                        if (rqn === \"\") {\r\n                            throw new Error(`durable requires no queue group`);\r\n                        } else {\r\n                            throw new Error(`durable requires queue group '${rqn}'`);\r\n                        }\r\n                    }\r\n                    jsi.last = info;\r\n                    jsi.config = info.config;\r\n                    jsi.attached = true;\r\n                    if (!jsi.config.durable_name) {\r\n                        jsi.name = info.name;\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                if (err.code !== \"404\") {\r\n                    throw err;\r\n                }\r\n            }\r\n        }\r\n        if (!jsi.attached && jsi.config.filter_subject === undefined && jsi.config.filter_subjects === undefined) {\r\n            jsi.config.filter_subject = subject;\r\n        }\r\n        jsi.deliver = jsi.config.deliver_subject || createInbox(this.nc.options.inboxPrefix);\r\n        return jsi;\r\n    }\r\n    _buildTypedSubscriptionOpts(jsi) {\r\n        const so = {};\r\n        so.adapter = msgAdapter(jsi.callbackFn === undefined);\r\n        so.ingestionFilterFn = JetStreamClientImpl.ingestionFn(jsi.ordered);\r\n        so.protocolFilterFn = (jm, ingest = false)=>{\r\n            const jsmi = jm;\r\n            if (isFlowControlMsg(jsmi.msg)) {\r\n                if (!ingest) {\r\n                    jsmi.msg.respond();\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        if (!jsi.mack && jsi.config.ack_policy !== AckPolicy.None) {\r\n            so.dispatchedFn = autoAckJsMsg;\r\n        }\r\n        if (jsi.callbackFn) {\r\n            so.callback = jsi.callbackFn;\r\n        }\r\n        so.max = jsi.max || 0;\r\n        so.queue = jsi.queue;\r\n        return so;\r\n    }\r\n    async _maybeCreateConsumer(jsi) {\r\n        if (jsi.attached) {\r\n            return;\r\n        }\r\n        if (jsi.isBind) {\r\n            throw new Error(`unable to bind - durable consumer ${jsi.config.durable_name} doesn't exist in ${jsi.stream}`);\r\n        }\r\n        jsi.config = Object.assign({\r\n            deliver_policy: DeliverPolicy.All,\r\n            ack_policy: AckPolicy.Explicit,\r\n            ack_wait: nanos(30 * 1000),\r\n            replay_policy: ReplayPolicy.Instant\r\n        }, jsi.config);\r\n        const ci = await this.consumerAPI.add(jsi.stream, jsi.config);\r\n        if (Array.isArray(jsi.config.filter_subjects && !Array.isArray(ci.config.filter_subjects))) {\r\n            throw new Error(`jetstream server doesn't support consumers with multiple filter subjects`);\r\n        }\r\n        jsi.name = ci.name;\r\n        jsi.config = ci.config;\r\n        jsi.last = ci;\r\n    }\r\n    static ingestionFn(ordered) {\r\n        return (jm, ctx)=>{\r\n            const jsub = ctx;\r\n            if (!jm) return {\r\n                ingest: false,\r\n                protocol: false\r\n            };\r\n            const jmi = jm;\r\n            if (!checkJsError(jmi.msg)) {\r\n                jsub.monitor?.work();\r\n            }\r\n            if (isHeartbeatMsg(jmi.msg)) {\r\n                const ingest = ordered ? jsub._checkHbOrderConsumer(jmi.msg) : true;\r\n                if (!ordered) {\r\n                    jsub.info.flow_control.heartbeat_count++;\r\n                }\r\n                return {\r\n                    ingest,\r\n                    protocol: true\r\n                };\r\n            } else if (isFlowControlMsg(jmi.msg)) {\r\n                jsub.info.flow_control.fc_count++;\r\n                return {\r\n                    ingest: true,\r\n                    protocol: true\r\n                };\r\n            }\r\n            const ingest = ordered ? jsub._checkOrderedConsumer(jm) : true;\r\n            return {\r\n                ingest,\r\n                protocol: false\r\n            };\r\n        };\r\n    }\r\n}\r\nclass JetStreamSubscriptionImpl extends TypedSubscription {\r\n    js;\r\n    monitor;\r\n    constructor(js, subject, opts){\r\n        super(js.nc, subject, opts);\r\n        this.js = js;\r\n        this.monitor = null;\r\n        this.sub.closed.then(()=>{\r\n            if (this.monitor) {\r\n                this.monitor.cancel();\r\n            }\r\n        });\r\n    }\r\n    set info(info) {\r\n        this.sub.info = info;\r\n    }\r\n    get info() {\r\n        return this.sub.info;\r\n    }\r\n    _resetOrderedConsumer(sseq) {\r\n        if (this.info === null || this.sub.isClosed()) {\r\n            return;\r\n        }\r\n        const newDeliver = createInbox(this.js.nc.options.inboxPrefix);\r\n        const nci = this.js.nc;\r\n        nci._resub(this.sub, newDeliver);\r\n        const info = this.info;\r\n        info.ordered_consumer_sequence.delivery_seq = 0;\r\n        info.flow_control.heartbeat_count = 0;\r\n        info.flow_control.fc_count = 0;\r\n        info.flow_control.consumer_restarts++;\r\n        info.deliver = newDeliver;\r\n        info.config.deliver_subject = newDeliver;\r\n        info.config.deliver_policy = DeliverPolicy.StartSequence;\r\n        info.config.opt_start_seq = sseq;\r\n        const req = {};\r\n        req.stream_name = this.info.stream;\r\n        req.config = info.config;\r\n        const subj = `${info.api.prefix}.CONSUMER.CREATE.${info.stream}`;\r\n        this.js._request(subj, req).then((v)=>{\r\n            const ci = v;\r\n            this.info.config = ci.config;\r\n            this.info.name = ci.name;\r\n        }).catch((err)=>{\r\n            const nerr = new NatsError(`unable to recreate ordered consumer ${info.stream} at seq ${sseq}`, ErrorCode.RequestError, err);\r\n            this.sub.callback(nerr, {});\r\n        });\r\n    }\r\n    _maybeSetupHbMonitoring() {\r\n        const ns = this.info?.config?.idle_heartbeat || 0;\r\n        if (ns) {\r\n            this._setupHbMonitoring(millis(ns));\r\n        }\r\n    }\r\n    _setupHbMonitoring(millis, cancelAfter = 0) {\r\n        const opts = {\r\n            cancelAfter: 0,\r\n            maxOut: 2\r\n        };\r\n        if (cancelAfter) {\r\n            opts.cancelAfter = cancelAfter;\r\n        }\r\n        const sub = this.sub;\r\n        const handler = (v)=>{\r\n            const msg = newJsErrorMsg(409, `${Js409Errors.IdleHeartbeatMissed}: ${v}`, this.sub.subject);\r\n            const ordered = this.info?.ordered;\r\n            if (!ordered) {\r\n                this.sub.callback(null, msg);\r\n            } else {\r\n                if (!this.js.nc.protocol.connected) {\r\n                    return false;\r\n                }\r\n                const seq = this.info?.ordered_consumer_sequence?.stream_seq || 0;\r\n                this._resetOrderedConsumer(seq + 1);\r\n                return false;\r\n            }\r\n            return !sub.noIterator;\r\n        };\r\n        this.monitor = new IdleHeartbeatMonitor(millis, handler, opts);\r\n    }\r\n    _checkHbOrderConsumer(msg) {\r\n        const rm = msg.headers.get(JsHeaders.ConsumerStalledHdr);\r\n        if (rm !== \"\") {\r\n            const nci = this.js.nc;\r\n            nci.publish(rm);\r\n        }\r\n        const lastDelivered = parseInt(msg.headers.get(JsHeaders.LastConsumerSeqHdr), 10);\r\n        const ordered = this.info.ordered_consumer_sequence;\r\n        this.info.flow_control.heartbeat_count++;\r\n        if (lastDelivered !== ordered.delivery_seq) {\r\n            this._resetOrderedConsumer(ordered.stream_seq + 1);\r\n        }\r\n        return false;\r\n    }\r\n    _checkOrderedConsumer(jm) {\r\n        const ordered = this.info.ordered_consumer_sequence;\r\n        const sseq = jm.info.streamSequence;\r\n        const dseq = jm.info.deliverySequence;\r\n        if (dseq != ordered.delivery_seq + 1) {\r\n            this._resetOrderedConsumer(ordered.stream_seq + 1);\r\n            return false;\r\n        }\r\n        ordered.delivery_seq = dseq;\r\n        ordered.stream_seq = sseq;\r\n        return true;\r\n    }\r\n    async destroy() {\r\n        if (!this.isClosed()) {\r\n            await this.drain();\r\n        }\r\n        const jinfo = this.sub.info;\r\n        const name = jinfo.config.durable_name || jinfo.name;\r\n        const subj = `${jinfo.api.prefix}.CONSUMER.DELETE.${jinfo.stream}.${name}`;\r\n        await jinfo.api._request(subj);\r\n    }\r\n    async consumerInfo() {\r\n        const jinfo = this.sub.info;\r\n        const name = jinfo.config.durable_name || jinfo.name;\r\n        const subj = `${jinfo.api.prefix}.CONSUMER.INFO.${jinfo.stream}.${name}`;\r\n        const ci = await jinfo.api._request(subj);\r\n        jinfo.last = ci;\r\n        return ci;\r\n    }\r\n}\r\nclass JetStreamPullSubscriptionImpl extends JetStreamSubscriptionImpl {\r\n    constructor(js, subject, opts){\r\n        super(js, subject, opts);\r\n    }\r\n    pull(opts = {\r\n        batch: 1\r\n    }) {\r\n        const { stream, config, name } = this.sub.info;\r\n        const consumer = config.durable_name ?? name;\r\n        const args = {};\r\n        args.batch = opts.batch || 1;\r\n        args.no_wait = opts.no_wait || false;\r\n        if ((opts.max_bytes ?? 0) > 0) {\r\n            const fv = this.js.nc.features.get(Feature.JS_PULL_MAX_BYTES);\r\n            if (!fv.ok) {\r\n                throw new Error(`max_bytes is only supported on servers ${fv.min} or better`);\r\n            }\r\n            args.max_bytes = opts.max_bytes;\r\n        }\r\n        let expires = 0;\r\n        if (opts.expires && opts.expires > 0) {\r\n            expires = opts.expires;\r\n            args.expires = nanos(expires);\r\n        }\r\n        let hb = 0;\r\n        if (opts.idle_heartbeat && opts.idle_heartbeat > 0) {\r\n            hb = opts.idle_heartbeat;\r\n            args.idle_heartbeat = nanos(hb);\r\n        }\r\n        if (hb && expires === 0) {\r\n            throw new Error(\"idle_heartbeat requires expires\");\r\n        }\r\n        if (hb > expires) {\r\n            throw new Error(\"expires must be greater than idle_heartbeat\");\r\n        }\r\n        if (this.info) {\r\n            if (this.monitor) {\r\n                this.monitor.cancel();\r\n            }\r\n            if (expires && hb) {\r\n                if (!this.monitor) {\r\n                    this._setupHbMonitoring(hb, expires);\r\n                } else {\r\n                    this.monitor._change(hb, expires);\r\n                }\r\n            }\r\n            const api = this.info.api;\r\n            const subj = `${api.prefix}.CONSUMER.MSG.NEXT.${stream}.${consumer}`;\r\n            const reply = this.sub.subject;\r\n            api.nc.publish(subj, api.jc.encode(args), {\r\n                reply: reply\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction msgAdapter(iterator) {\r\n    if (iterator) {\r\n        return iterMsgAdapter;\r\n    } else {\r\n        return cbMsgAdapter;\r\n    }\r\n}\r\nfunction cbMsgAdapter(err, msg) {\r\n    if (err) {\r\n        return [\r\n            err,\r\n            null\r\n        ];\r\n    }\r\n    err = checkJsError(msg);\r\n    if (err) {\r\n        return [\r\n            err,\r\n            null\r\n        ];\r\n    }\r\n    return [\r\n        null,\r\n        toJsMsg(msg)\r\n    ];\r\n}\r\nfunction iterMsgAdapter(err, msg) {\r\n    if (err) {\r\n        return [\r\n            err,\r\n            null\r\n        ];\r\n    }\r\n    const ne = checkJsError(msg);\r\n    if (ne !== null) {\r\n        return [\r\n            hideNonTerminalJsErrors(ne),\r\n            null\r\n        ];\r\n    }\r\n    return [\r\n        null,\r\n        toJsMsg(msg)\r\n    ];\r\n}\r\nfunction hideNonTerminalJsErrors(ne) {\r\n    if (ne !== null) {\r\n        switch(ne.code){\r\n            case ErrorCode.JetStream404NoMessages:\r\n            case ErrorCode.JetStream408RequestTimeout:\r\n                return null;\r\n            case ErrorCode.JetStream409:\r\n                if (isTerminal409(ne)) {\r\n                    return ne;\r\n                }\r\n                return null;\r\n            default:\r\n                return ne;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction autoAckJsMsg(data) {\r\n    if (data) {\r\n        data.ack();\r\n    }\r\n}\r\nclass DirectStreamAPIImpl extends BaseApiClient {\r\n    constructor(nc, opts){\r\n        super(nc, opts);\r\n    }\r\n    async getMessage(stream, query) {\r\n        validateStreamName(stream);\r\n        let qq = query;\r\n        const { last_by_subj } = qq;\r\n        if (last_by_subj) {\r\n            qq = null;\r\n        }\r\n        const payload = qq ? this.jc.encode(qq) : Empty;\r\n        const pre = this.opts.apiPrefix || \"$JS.API\";\r\n        const subj = last_by_subj ? `${pre}.DIRECT.GET.${stream}.${last_by_subj}` : `${pre}.DIRECT.GET.${stream}`;\r\n        const r = await this.nc.request(subj, payload);\r\n        const err = checkJsError(r);\r\n        if (err) {\r\n            return Promise.reject(err);\r\n        }\r\n        const dm = new DirectMsgImpl(r);\r\n        return Promise.resolve(dm);\r\n    }\r\n}\r\nclass DirectMsgImpl {\r\n    data;\r\n    header;\r\n    static jc;\r\n    constructor(m){\r\n        if (!m.headers) {\r\n            throw new Error(\"headers expected\");\r\n        }\r\n        this.data = m.data;\r\n        this.header = m.headers;\r\n    }\r\n    get subject() {\r\n        return this.header.last(DirectMsgHeaders.Subject);\r\n    }\r\n    get seq() {\r\n        const v = this.header.last(DirectMsgHeaders.Sequence);\r\n        return typeof v === \"string\" ? parseInt(v) : 0;\r\n    }\r\n    get time() {\r\n        return new Date(Date.parse(this.timestamp));\r\n    }\r\n    get timestamp() {\r\n        return this.header.last(DirectMsgHeaders.TimeStamp);\r\n    }\r\n    get stream() {\r\n        return this.header.last(DirectMsgHeaders.Stream);\r\n    }\r\n    json(reviver) {\r\n        return JSONCodec(reviver).decode(this.data);\r\n    }\r\n    string() {\r\n        return TD.decode(this.data);\r\n    }\r\n}\r\nclass JetStreamManagerImpl extends BaseApiClient {\r\n    streams;\r\n    consumers;\r\n    direct;\r\n    constructor(nc, opts){\r\n        super(nc, opts);\r\n        this.streams = new StreamAPIImpl(nc, opts);\r\n        this.consumers = new ConsumerAPIImpl(nc, opts);\r\n        this.direct = new DirectStreamAPIImpl(nc, opts);\r\n    }\r\n    async getAccountInfo() {\r\n        const r = await this._request(`${this.prefix}.INFO`);\r\n        return r;\r\n    }\r\n    jetstream() {\r\n        return this.nc.jetstream(this.getOptions());\r\n    }\r\n    advisories() {\r\n        const iter = new QueuedIteratorImpl();\r\n        this.nc.subscribe(`$JS.EVENT.ADVISORY.>`, {\r\n            callback: (err, msg)=>{\r\n                if (err) {\r\n                    throw err;\r\n                }\r\n                try {\r\n                    const d = this.parseJsResponse(msg);\r\n                    const chunks = d.type.split(\".\");\r\n                    const kind = chunks[chunks.length - 1];\r\n                    iter.push({\r\n                        kind: kind,\r\n                        data: d\r\n                    });\r\n                } catch (err) {\r\n                    iter.stop(err);\r\n                }\r\n            }\r\n        });\r\n        return iter;\r\n    }\r\n}\r\nconst ServiceApiPrefix = \"$SRV\";\r\nclass ServiceMsgImpl {\r\n    msg;\r\n    constructor(msg){\r\n        this.msg = msg;\r\n    }\r\n    get data() {\r\n        return this.msg.data;\r\n    }\r\n    get sid() {\r\n        return this.msg.sid;\r\n    }\r\n    get subject() {\r\n        return this.msg.subject;\r\n    }\r\n    get reply() {\r\n        return this.msg.reply || \"\";\r\n    }\r\n    get headers() {\r\n        return this.msg.headers;\r\n    }\r\n    respond(data, opts) {\r\n        return this.msg.respond(data, opts);\r\n    }\r\n    respondError(code, description, data, opts) {\r\n        opts = opts || {};\r\n        opts.headers = opts.headers || headers();\r\n        opts.headers?.set(ServiceErrorCodeHeader, `${code}`);\r\n        opts.headers?.set(ServiceErrorHeader, description);\r\n        return this.msg.respond(data, opts);\r\n    }\r\n    json(reviver) {\r\n        return this.msg.json(reviver);\r\n    }\r\n    string() {\r\n        return this.msg.string();\r\n    }\r\n}\r\nclass ServiceGroupImpl {\r\n    subject;\r\n    queue;\r\n    srv;\r\n    constructor(parent, name = \"\", queue = \"\"){\r\n        if (name !== \"\") {\r\n            validInternalToken(\"service group\", name);\r\n        }\r\n        let root = \"\";\r\n        if (parent instanceof ServiceImpl) {\r\n            this.srv = parent;\r\n            root = \"\";\r\n        } else if (parent instanceof ServiceGroupImpl) {\r\n            const sg = parent;\r\n            this.srv = sg.srv;\r\n            if (queue === \"\" && sg.queue !== \"\") {\r\n                queue = sg.queue;\r\n            }\r\n            root = sg.subject;\r\n        } else {\r\n            throw new Error(\"unknown ServiceGroup type\");\r\n        }\r\n        this.subject = this.calcSubject(root, name);\r\n        this.queue = queue;\r\n    }\r\n    calcSubject(root, name = \"\") {\r\n        if (name === \"\") {\r\n            return root;\r\n        }\r\n        return root !== \"\" ? `${root}.${name}` : name;\r\n    }\r\n    addEndpoint(name = \"\", opts) {\r\n        opts = opts || {\r\n            subject: name\r\n        };\r\n        const args = typeof opts === \"function\" ? {\r\n            handler: opts,\r\n            subject: name\r\n        } : opts;\r\n        validateName(\"endpoint\", name);\r\n        let { subject, handler, metadata, queue } = args;\r\n        subject = subject || name;\r\n        queue = queue || this.queue;\r\n        validSubjectName(\"endpoint subject\", subject);\r\n        subject = this.calcSubject(this.subject, subject);\r\n        const ne = {\r\n            name,\r\n            subject,\r\n            queue,\r\n            handler,\r\n            metadata\r\n        };\r\n        return this.srv._addEndpoint(ne);\r\n    }\r\n    addGroup(name = \"\", queue = \"\") {\r\n        return new ServiceGroupImpl(this, name, queue);\r\n    }\r\n}\r\nfunction validSubjectName(context, subj) {\r\n    if (subj === \"\") {\r\n        throw new Error(`${context} cannot be empty`);\r\n    }\r\n    if (subj.indexOf(\" \") !== -1) {\r\n        throw new Error(`${context} cannot contain spaces: '${subj}'`);\r\n    }\r\n    const tokens = subj.split(\".\");\r\n    tokens.forEach((v, idx)=>{\r\n        if (v === \">\" && idx !== tokens.length - 1) {\r\n            throw new Error(`${context} cannot have internal '>': '${subj}'`);\r\n        }\r\n    });\r\n}\r\nfunction validInternalToken(context, subj) {\r\n    if (subj.indexOf(\" \") !== -1) {\r\n        throw new Error(`${context} cannot contain spaces: '${subj}'`);\r\n    }\r\n    const tokens = subj.split(\".\");\r\n    tokens.forEach((v)=>{\r\n        if (v === \">\") {\r\n            throw new Error(`${context} name cannot contain internal '>': '${subj}'`);\r\n        }\r\n    });\r\n}\r\nclass ServiceImpl {\r\n    nc;\r\n    _id;\r\n    config;\r\n    handlers;\r\n    internal;\r\n    _stopped;\r\n    _done;\r\n    started;\r\n    static controlSubject(verb, name = \"\", id = \"\", prefix) {\r\n        const pre = prefix ?? ServiceApiPrefix;\r\n        if (name === \"\" && id === \"\") {\r\n            return `${pre}.${verb}`;\r\n        }\r\n        validateName(\"control subject name\", name);\r\n        if (id !== \"\") {\r\n            validateName(\"control subject id\", id);\r\n            return `${pre}.${verb}.${name}.${id}`;\r\n        }\r\n        return `${pre}.${verb}.${name}`;\r\n    }\r\n    constructor(nc, config = {\r\n        name: \"\",\r\n        version: \"\"\r\n    }){\r\n        this.nc = nc;\r\n        this.config = Object.assign({}, config);\r\n        if (!this.config.queue) {\r\n            this.config.queue = \"q\";\r\n        }\r\n        validateName(\"name\", this.config.name);\r\n        validateName(\"queue\", this.config.queue);\r\n        parseSemVer(this.config.version);\r\n        this._id = nuid.next();\r\n        this.internal = [];\r\n        this._done = deferred();\r\n        this._stopped = false;\r\n        this.handlers = [];\r\n        this.started = new Date().toISOString();\r\n        this.reset();\r\n        this.nc.closed().then(()=>{\r\n            this.close().catch();\r\n        }).catch((err)=>{\r\n            this.close(err).catch();\r\n        });\r\n    }\r\n    get subjects() {\r\n        return this.handlers.filter((s)=>{\r\n            return s.internal === false;\r\n        }).map((s)=>{\r\n            return s.subject;\r\n        });\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    get name() {\r\n        return this.config.name;\r\n    }\r\n    get description() {\r\n        return this.config.description ?? \"\";\r\n    }\r\n    get version() {\r\n        return this.config.version;\r\n    }\r\n    get metadata() {\r\n        return this.config.metadata;\r\n    }\r\n    errorToHeader(err) {\r\n        const h = headers();\r\n        if (err instanceof ServiceError) {\r\n            const se = err;\r\n            h.set(ServiceErrorHeader, se.message);\r\n            h.set(ServiceErrorCodeHeader, `${se.code}`);\r\n        } else {\r\n            h.set(ServiceErrorHeader, err.message);\r\n            h.set(ServiceErrorCodeHeader, \"500\");\r\n        }\r\n        return h;\r\n    }\r\n    setupHandler(h, internal = false) {\r\n        const queue = internal ? \"\" : h.queue ? h.queue : this.config.queue;\r\n        const { name, subject, handler } = h;\r\n        const sv = h;\r\n        sv.internal = internal;\r\n        if (internal) {\r\n            this.internal.push(sv);\r\n        }\r\n        sv.stats = new NamedEndpointStatsImpl(name, subject, queue);\r\n        sv.queue = queue;\r\n        const callback = handler ? (err, msg)=>{\r\n            if (err) {\r\n                this.close(err);\r\n                return;\r\n            }\r\n            const start = Date.now();\r\n            try {\r\n                handler(err, new ServiceMsgImpl(msg));\r\n            } catch (err) {\r\n                sv.stats.countError(err);\r\n                msg?.respond(Empty, {\r\n                    headers: this.errorToHeader(err)\r\n                });\r\n            } finally{\r\n                sv.stats.countLatency(start);\r\n            }\r\n        } : undefined;\r\n        sv.sub = this.nc.subscribe(subject, {\r\n            callback,\r\n            queue\r\n        });\r\n        sv.sub.closed.then(()=>{\r\n            if (!this._stopped) {\r\n                this.close(new Error(`required subscription ${h.subject} stopped`)).catch();\r\n            }\r\n        }).catch((err)=>{\r\n            if (!this._stopped) {\r\n                const ne = new Error(`required subscription ${h.subject} errored: ${err.message}`);\r\n                ne.stack = err.stack;\r\n                this.close(ne).catch();\r\n            }\r\n        });\r\n        return sv;\r\n    }\r\n    info() {\r\n        return {\r\n            type: ServiceResponseType.INFO,\r\n            name: this.name,\r\n            id: this.id,\r\n            version: this.version,\r\n            description: this.description,\r\n            metadata: this.metadata,\r\n            endpoints: this.endpoints()\r\n        };\r\n    }\r\n    endpoints() {\r\n        return this.handlers.map((v)=>{\r\n            const { subject, metadata, name, queue } = v;\r\n            return {\r\n                subject,\r\n                metadata,\r\n                name,\r\n                queue_group: queue\r\n            };\r\n        });\r\n    }\r\n    async stats() {\r\n        const endpoints = [];\r\n        for (const h of this.handlers){\r\n            if (typeof this.config.statsHandler === \"function\") {\r\n                try {\r\n                    h.stats.data = await this.config.statsHandler(h);\r\n                } catch (err) {\r\n                    h.stats.countError(err);\r\n                }\r\n            }\r\n            endpoints.push(h.stats.stats(h.qi));\r\n        }\r\n        return {\r\n            type: ServiceResponseType.STATS,\r\n            name: this.name,\r\n            id: this.id,\r\n            version: this.version,\r\n            started: this.started,\r\n            metadata: this.metadata,\r\n            endpoints\r\n        };\r\n    }\r\n    addInternalHandler(verb, handler) {\r\n        const v = `${verb}`.toUpperCase();\r\n        this._doAddInternalHandler(`${v}-all`, verb, handler);\r\n        this._doAddInternalHandler(`${v}-kind`, verb, handler, this.name);\r\n        this._doAddInternalHandler(`${v}`, verb, handler, this.name, this.id);\r\n    }\r\n    _doAddInternalHandler(name, verb, handler, kind = \"\", id = \"\") {\r\n        const endpoint = {};\r\n        endpoint.name = name;\r\n        endpoint.subject = ServiceImpl.controlSubject(verb, kind, id);\r\n        endpoint.handler = handler;\r\n        this.setupHandler(endpoint, true);\r\n    }\r\n    start() {\r\n        const jc = JSONCodec();\r\n        const statsHandler = (err, msg)=>{\r\n            if (err) {\r\n                this.close(err);\r\n                return Promise.reject(err);\r\n            }\r\n            return this.stats().then((s)=>{\r\n                msg?.respond(jc.encode(s));\r\n                return Promise.resolve();\r\n            });\r\n        };\r\n        const infoHandler = (err, msg)=>{\r\n            if (err) {\r\n                this.close(err);\r\n                return Promise.reject(err);\r\n            }\r\n            msg?.respond(jc.encode(this.info()));\r\n            return Promise.resolve();\r\n        };\r\n        const ping = jc.encode(this.ping());\r\n        const pingHandler = (err, msg)=>{\r\n            if (err) {\r\n                this.close(err).then().catch();\r\n                return Promise.reject(err);\r\n            }\r\n            msg.respond(ping);\r\n            return Promise.resolve();\r\n        };\r\n        this.addInternalHandler(ServiceVerb.PING, pingHandler);\r\n        this.addInternalHandler(ServiceVerb.STATS, statsHandler);\r\n        this.addInternalHandler(ServiceVerb.INFO, infoHandler);\r\n        this.handlers.forEach((h)=>{\r\n            const { subject } = h;\r\n            if (typeof subject !== \"string\") {\r\n                return;\r\n            }\r\n            if (h.handler === null) {\r\n                return;\r\n            }\r\n            this.setupHandler(h);\r\n        });\r\n        return Promise.resolve(this);\r\n    }\r\n    close(err) {\r\n        if (this._stopped) {\r\n            return this._done;\r\n        }\r\n        this._stopped = true;\r\n        let buf = [];\r\n        if (!this.nc.isClosed()) {\r\n            buf = this.handlers.concat(this.internal).map((h)=>{\r\n                return h.sub.drain();\r\n            });\r\n        }\r\n        Promise.allSettled(buf).then(()=>{\r\n            this._done.resolve(err ? err : null);\r\n        });\r\n        return this._done;\r\n    }\r\n    get stopped() {\r\n        return this._done;\r\n    }\r\n    get isStopped() {\r\n        return this._stopped;\r\n    }\r\n    stop(err) {\r\n        return this.close(err);\r\n    }\r\n    ping() {\r\n        return {\r\n            type: ServiceResponseType.PING,\r\n            name: this.name,\r\n            id: this.id,\r\n            version: this.version,\r\n            metadata: this.metadata\r\n        };\r\n    }\r\n    reset() {\r\n        this.started = new Date().toISOString();\r\n        if (this.handlers) {\r\n            for (const h of this.handlers){\r\n                h.stats.reset(h.qi);\r\n            }\r\n        }\r\n    }\r\n    addGroup(name, queue) {\r\n        return new ServiceGroupImpl(this, name, queue);\r\n    }\r\n    addEndpoint(name, handler) {\r\n        const sg = new ServiceGroupImpl(this);\r\n        return sg.addEndpoint(name, handler);\r\n    }\r\n    _addEndpoint(e) {\r\n        const qi = new QueuedIteratorImpl();\r\n        qi.noIterator = typeof e.handler === \"function\";\r\n        if (!qi.noIterator) {\r\n            e.handler = (err, msg)=>{\r\n                err ? this.stop(err).catch() : qi.push(new ServiceMsgImpl(msg));\r\n            };\r\n            qi.iterClosed.then(()=>{\r\n                this.close().catch();\r\n            });\r\n        }\r\n        const ss = this.setupHandler(e, false);\r\n        ss.qi = qi;\r\n        this.handlers.push(ss);\r\n        return qi;\r\n    }\r\n}\r\nclass NamedEndpointStatsImpl {\r\n    name;\r\n    subject;\r\n    average_processing_time;\r\n    num_requests;\r\n    processing_time;\r\n    num_errors;\r\n    last_error;\r\n    data;\r\n    metadata;\r\n    queue;\r\n    constructor(name, subject, queue = \"\"){\r\n        this.name = name;\r\n        this.subject = subject;\r\n        this.average_processing_time = 0;\r\n        this.num_errors = 0;\r\n        this.num_requests = 0;\r\n        this.processing_time = 0;\r\n        this.queue = queue;\r\n    }\r\n    reset(qi) {\r\n        this.num_requests = 0;\r\n        this.processing_time = 0;\r\n        this.average_processing_time = 0;\r\n        this.num_errors = 0;\r\n        this.last_error = undefined;\r\n        this.data = undefined;\r\n        const qii = qi;\r\n        if (qii) {\r\n            qii.time = 0;\r\n            qii.processed = 0;\r\n        }\r\n    }\r\n    countLatency(start) {\r\n        this.num_requests++;\r\n        this.processing_time += nanos(Date.now() - start);\r\n        this.average_processing_time = Math.round(this.processing_time / this.num_requests);\r\n    }\r\n    countError(err) {\r\n        this.num_errors++;\r\n        this.last_error = err.message;\r\n    }\r\n    _stats() {\r\n        const { name, subject, average_processing_time, num_errors, num_requests, processing_time, last_error, data, queue } = this;\r\n        return {\r\n            name,\r\n            subject,\r\n            average_processing_time,\r\n            num_errors,\r\n            num_requests,\r\n            processing_time,\r\n            last_error,\r\n            data,\r\n            queue_group: queue\r\n        };\r\n    }\r\n    stats(qi) {\r\n        const qii = qi;\r\n        if (qii?.noIterator === false) {\r\n            this.processing_time = qii.time;\r\n            this.num_requests = qii.processed;\r\n            this.average_processing_time = this.processing_time > 0 && this.num_requests > 0 ? this.processing_time / this.num_requests : 0;\r\n        }\r\n        return this._stats();\r\n    }\r\n}\r\nclass ServiceClientImpl {\r\n    nc;\r\n    prefix;\r\n    opts;\r\n    constructor(nc, opts = {\r\n        strategy: RequestStrategy.JitterTimer,\r\n        maxWait: 2000\r\n    }, prefix){\r\n        this.nc = nc;\r\n        this.prefix = prefix;\r\n        this.opts = opts;\r\n    }\r\n    ping(name = \"\", id = \"\") {\r\n        return this.q(ServiceVerb.PING, name, id);\r\n    }\r\n    stats(name = \"\", id = \"\") {\r\n        return this.q(ServiceVerb.STATS, name, id);\r\n    }\r\n    info(name = \"\", id = \"\") {\r\n        return this.q(ServiceVerb.INFO, name, id);\r\n    }\r\n    async q(v, name = \"\", id = \"\") {\r\n        const iter = new QueuedIteratorImpl();\r\n        const jc = JSONCodec();\r\n        const subj = ServiceImpl.controlSubject(v, name, id, this.prefix);\r\n        const responses = await this.nc.requestMany(subj, Empty, this.opts);\r\n        (async ()=>{\r\n            for await (const m of responses){\r\n                try {\r\n                    const s = jc.decode(m.data);\r\n                    iter.push(s);\r\n                } catch (err) {\r\n                    iter.push(()=>{\r\n                        iter.stop(err);\r\n                    });\r\n                }\r\n            }\r\n            iter.push(()=>{\r\n                iter.stop();\r\n            });\r\n        })().catch((err)=>{\r\n            iter.stop(err);\r\n        });\r\n        return iter;\r\n    }\r\n}\r\nclass NatsConnectionImpl {\r\n    options;\r\n    protocol;\r\n    draining;\r\n    listeners;\r\n    _services;\r\n    constructor(opts){\r\n        this.draining = false;\r\n        this.options = parseOptions(opts);\r\n        this.listeners = [];\r\n    }\r\n    static connect(opts = {}) {\r\n        return new Promise((resolve, reject)=>{\r\n            const nc = new NatsConnectionImpl(opts);\r\n            ProtocolHandler.connect(nc.options, nc).then((ph)=>{\r\n                nc.protocol = ph;\r\n                (async function() {\r\n                    for await (const s of ph.status()){\r\n                        nc.listeners.forEach((l)=>{\r\n                            l.push(s);\r\n                        });\r\n                    }\r\n                })();\r\n                resolve(nc);\r\n            }).catch((err)=>{\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    closed() {\r\n        return this.protocol.closed;\r\n    }\r\n    async close() {\r\n        await this.protocol.close();\r\n    }\r\n    _check(subject, sub, pub) {\r\n        if (this.isClosed()) {\r\n            throw NatsError.errorForCode(ErrorCode.ConnectionClosed);\r\n        }\r\n        if (sub && this.isDraining()) {\r\n            throw NatsError.errorForCode(ErrorCode.ConnectionDraining);\r\n        }\r\n        if (pub && this.protocol.noMorePublishing) {\r\n            throw NatsError.errorForCode(ErrorCode.ConnectionDraining);\r\n        }\r\n        subject = subject || \"\";\r\n        if (subject.length === 0) {\r\n            throw NatsError.errorForCode(ErrorCode.BadSubject);\r\n        }\r\n    }\r\n    publish(subject, data, options) {\r\n        this._check(subject, false, true);\r\n        this.protocol.publish(subject, data, options);\r\n    }\r\n    subscribe(subject, opts = {}) {\r\n        this._check(subject, true, false);\r\n        const sub = new SubscriptionImpl(this.protocol, subject, opts);\r\n        this.protocol.subscribe(sub);\r\n        return sub;\r\n    }\r\n    _resub(s, subject, max) {\r\n        this._check(subject, true, false);\r\n        const si = s;\r\n        si.max = max;\r\n        if (max) {\r\n            si.max = max + si.received;\r\n        }\r\n        this.protocol.resub(si, subject);\r\n    }\r\n    requestMany(subject, data = Empty, opts = {\r\n        maxWait: 1000,\r\n        maxMessages: -1\r\n    }) {\r\n        const asyncTraces = !(this.protocol.options.noAsyncTraces || false);\r\n        try {\r\n            this._check(subject, true, true);\r\n        } catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n        opts.strategy = opts.strategy || RequestStrategy.Timer;\r\n        opts.maxWait = opts.maxWait || 1000;\r\n        if (opts.maxWait < 1) {\r\n            return Promise.reject(new NatsError(\"timeout\", ErrorCode.InvalidOption));\r\n        }\r\n        const qi = new QueuedIteratorImpl();\r\n        function stop(err) {\r\n            qi.push(()=>{\r\n                qi.stop(err);\r\n            });\r\n        }\r\n        function callback(err, msg) {\r\n            if (err || msg === null) {\r\n                stop(err === null ? undefined : err);\r\n            } else {\r\n                qi.push(msg);\r\n            }\r\n        }\r\n        if (opts.noMux) {\r\n            const stack = asyncTraces ? new Error().stack : null;\r\n            let max = typeof opts.maxMessages === \"number\" && opts.maxMessages > 0 ? opts.maxMessages : -1;\r\n            const sub = this.subscribe(createInbox(this.options.inboxPrefix), {\r\n                callback: (err, msg)=>{\r\n                    if (msg?.data?.length === 0 && msg?.headers?.status === ErrorCode.NoResponders) {\r\n                        err = NatsError.errorForCode(ErrorCode.NoResponders);\r\n                    }\r\n                    if (err) {\r\n                        if (stack) {\r\n                            err.stack += `\\n\\n${stack}`;\r\n                        }\r\n                        cancel(err);\r\n                        return;\r\n                    }\r\n                    callback(null, msg);\r\n                    if (opts.strategy === RequestStrategy.Count) {\r\n                        max--;\r\n                        if (max === 0) {\r\n                            cancel();\r\n                        }\r\n                    }\r\n                    if (opts.strategy === RequestStrategy.JitterTimer) {\r\n                        clearTimers();\r\n                        timer = setTimeout(()=>{\r\n                            cancel();\r\n                        }, 300);\r\n                    }\r\n                    if (opts.strategy === RequestStrategy.SentinelMsg) {\r\n                        if (msg && msg.data.length === 0) {\r\n                            cancel();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            sub.closed.then(()=>{\r\n                stop();\r\n            }).catch((err)=>{\r\n                qi.stop(err);\r\n            });\r\n            const cancel = (err)=>{\r\n                if (err) {\r\n                    qi.push(()=>{\r\n                        throw err;\r\n                    });\r\n                }\r\n                clearTimers();\r\n                sub.drain().then(()=>{\r\n                    stop();\r\n                }).catch((_err)=>{\r\n                    stop();\r\n                });\r\n            };\r\n            qi.iterClosed.then(()=>{\r\n                clearTimers();\r\n                sub?.unsubscribe();\r\n            }).catch((_err)=>{\r\n                clearTimers();\r\n                sub?.unsubscribe();\r\n            });\r\n            try {\r\n                this.publish(subject, data, {\r\n                    reply: sub.getSubject()\r\n                });\r\n            } catch (err) {\r\n                cancel(err);\r\n            }\r\n            let timer = setTimeout(()=>{\r\n                cancel();\r\n            }, opts.maxWait);\r\n            const clearTimers = ()=>{\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                }\r\n            };\r\n        } else {\r\n            const rmo = opts;\r\n            rmo.callback = callback;\r\n            qi.iterClosed.then(()=>{\r\n                r.cancel();\r\n            }).catch((err)=>{\r\n                r.cancel(err);\r\n            });\r\n            const r = new RequestMany(this.protocol.muxSubscriptions, subject, rmo);\r\n            this.protocol.request(r);\r\n            try {\r\n                this.publish(subject, data, {\r\n                    reply: `${this.protocol.muxSubscriptions.baseInbox}${r.token}`,\r\n                    headers: opts.headers\r\n                });\r\n            } catch (err) {\r\n                r.cancel(err);\r\n            }\r\n        }\r\n        return Promise.resolve(qi);\r\n    }\r\n    request(subject, data, opts = {\r\n        timeout: 1000,\r\n        noMux: false\r\n    }) {\r\n        try {\r\n            this._check(subject, true, true);\r\n        } catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n        const asyncTraces = !(this.protocol.options.noAsyncTraces || false);\r\n        opts.timeout = opts.timeout || 1000;\r\n        if (opts.timeout < 1) {\r\n            return Promise.reject(new NatsError(\"timeout\", ErrorCode.InvalidOption));\r\n        }\r\n        if (!opts.noMux && opts.reply) {\r\n            return Promise.reject(new NatsError(\"reply can only be used with noMux\", ErrorCode.InvalidOption));\r\n        }\r\n        if (opts.noMux) {\r\n            const inbox = opts.reply ? opts.reply : createInbox(this.options.inboxPrefix);\r\n            const d = deferred();\r\n            const errCtx = asyncTraces ? new Error() : null;\r\n            const sub = this.subscribe(inbox, {\r\n                max: 1,\r\n                timeout: opts.timeout,\r\n                callback: (err, msg)=>{\r\n                    if (err) {\r\n                        if (errCtx && err.code !== ErrorCode.Timeout) {\r\n                            err.stack += `\\n\\n${errCtx.stack}`;\r\n                        }\r\n                        d.reject(err);\r\n                    } else {\r\n                        err = isRequestError(msg);\r\n                        if (err) {\r\n                            if (errCtx) {\r\n                                err.stack += `\\n\\n${errCtx.stack}`;\r\n                            }\r\n                            d.reject(err);\r\n                        } else {\r\n                            d.resolve(msg);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            sub.requestSubject = subject;\r\n            this.protocol.publish(subject, data, {\r\n                reply: inbox,\r\n                headers: opts.headers\r\n            });\r\n            return d;\r\n        } else {\r\n            const r = new RequestOne(this.protocol.muxSubscriptions, subject, opts, asyncTraces);\r\n            this.protocol.request(r);\r\n            try {\r\n                this.publish(subject, data, {\r\n                    reply: `${this.protocol.muxSubscriptions.baseInbox}${r.token}`,\r\n                    headers: opts.headers\r\n                });\r\n            } catch (err) {\r\n                r.cancel(err);\r\n            }\r\n            const p = Promise.race([\r\n                r.timer,\r\n                r.deferred\r\n            ]);\r\n            p.catch(()=>{\r\n                r.cancel();\r\n            });\r\n            return p;\r\n        }\r\n    }\r\n    flush() {\r\n        if (this.isClosed()) {\r\n            return Promise.reject(NatsError.errorForCode(ErrorCode.ConnectionClosed));\r\n        }\r\n        return this.protocol.flush();\r\n    }\r\n    drain() {\r\n        if (this.isClosed()) {\r\n            return Promise.reject(NatsError.errorForCode(ErrorCode.ConnectionClosed));\r\n        }\r\n        if (this.isDraining()) {\r\n            return Promise.reject(NatsError.errorForCode(ErrorCode.ConnectionDraining));\r\n        }\r\n        this.draining = true;\r\n        return this.protocol.drain();\r\n    }\r\n    isClosed() {\r\n        return this.protocol.isClosed();\r\n    }\r\n    isDraining() {\r\n        return this.draining;\r\n    }\r\n    getServer() {\r\n        const srv = this.protocol.getServer();\r\n        return srv ? srv.listen : \"\";\r\n    }\r\n    status() {\r\n        const iter = new QueuedIteratorImpl();\r\n        iter.iterClosed.then(()=>{\r\n            const idx = this.listeners.indexOf(iter);\r\n            this.listeners.splice(idx, 1);\r\n        });\r\n        this.listeners.push(iter);\r\n        return iter;\r\n    }\r\n    get info() {\r\n        return this.protocol.isClosed() ? undefined : this.protocol.info;\r\n    }\r\n    stats() {\r\n        return {\r\n            inBytes: this.protocol.inBytes,\r\n            outBytes: this.protocol.outBytes,\r\n            inMsgs: this.protocol.inMsgs,\r\n            outMsgs: this.protocol.outMsgs\r\n        };\r\n    }\r\n    async jetstreamManager(opts = {}) {\r\n        const adm = new JetStreamManagerImpl(this, opts);\r\n        if (opts.checkAPI !== false) {\r\n            try {\r\n                await adm.getAccountInfo();\r\n            } catch (err) {\r\n                const ne = err;\r\n                if (ne.code === ErrorCode.NoResponders) {\r\n                    ne.code = ErrorCode.JetStreamNotEnabled;\r\n                }\r\n                throw ne;\r\n            }\r\n        }\r\n        return adm;\r\n    }\r\n    jetstream(opts = {}) {\r\n        return new JetStreamClientImpl(this, opts);\r\n    }\r\n    getServerVersion() {\r\n        const info = this.info;\r\n        return info ? parseSemVer(info.version) : undefined;\r\n    }\r\n    async rtt() {\r\n        if (!this.protocol._closed && !this.protocol.connected) {\r\n            throw NatsError.errorForCode(ErrorCode.Disconnect);\r\n        }\r\n        const start = Date.now();\r\n        await this.flush();\r\n        return Date.now() - start;\r\n    }\r\n    get features() {\r\n        return this.protocol.features;\r\n    }\r\n    get services() {\r\n        if (!this._services) {\r\n            this._services = new ServicesFactory(this);\r\n        }\r\n        return this._services;\r\n    }\r\n    reconnect() {\r\n        if (this.isClosed()) {\r\n            return Promise.reject(NatsError.errorForCode(ErrorCode.ConnectionClosed));\r\n        }\r\n        if (this.isDraining()) {\r\n            return Promise.reject(NatsError.errorForCode(ErrorCode.ConnectionDraining));\r\n        }\r\n        return this.protocol.reconnect();\r\n    }\r\n}\r\nclass ServicesFactory {\r\n    nc;\r\n    constructor(nc){\r\n        this.nc = nc;\r\n    }\r\n    add(config) {\r\n        try {\r\n            const s = new ServiceImpl(this.nc, config);\r\n            return s.start();\r\n        } catch (err) {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n    client(opts, prefix) {\r\n        return new ServiceClientImpl(this.nc, opts, prefix);\r\n    }\r\n}\r\nclass Metric {\r\n    name;\r\n    duration;\r\n    date;\r\n    payload;\r\n    msgs;\r\n    lang;\r\n    version;\r\n    bytes;\r\n    asyncRequests;\r\n    min;\r\n    max;\r\n    constructor(name, duration){\r\n        this.name = name;\r\n        this.duration = duration;\r\n        this.date = Date.now();\r\n        this.payload = 0;\r\n        this.msgs = 0;\r\n        this.bytes = 0;\r\n    }\r\n    toString() {\r\n        const sec = this.duration / 1000;\r\n        const mps = Math.round(this.msgs / sec);\r\n        const label = this.asyncRequests ? \"asyncRequests\" : \"\";\r\n        let minmax = \"\";\r\n        if (this.max) {\r\n            minmax = `${this.min}/${this.max}`;\r\n        }\r\n        return `${this.name}${label ? \" [asyncRequests]\" : \"\"} ${humanizeNumber(mps)} msgs/sec - [${sec.toFixed(2)} secs] ~ ${throughput(this.bytes, sec)} ${minmax}`;\r\n    }\r\n    toCsv() {\r\n        return `\"${this.name}\",${new Date(this.date).toISOString()},${this.lang},${this.version},${this.msgs},${this.payload},${this.bytes},${this.duration},${this.asyncRequests ? this.asyncRequests : false}\\n`;\r\n    }\r\n    static header() {\r\n        return `Test,Date,Lang,Version,Count,MsgPayload,Bytes,Millis,Async\\n`;\r\n    }\r\n}\r\nclass Bench {\r\n    nc;\r\n    callbacks;\r\n    msgs;\r\n    size;\r\n    subject;\r\n    asyncRequests;\r\n    pub;\r\n    sub;\r\n    req;\r\n    rep;\r\n    perf;\r\n    payload;\r\n    constructor(nc, opts = {\r\n        msgs: 100000,\r\n        size: 128,\r\n        subject: \"\",\r\n        asyncRequests: false,\r\n        pub: false,\r\n        sub: false,\r\n        req: false,\r\n        rep: false\r\n    }){\r\n        this.nc = nc;\r\n        this.callbacks = opts.callbacks || false;\r\n        this.msgs = opts.msgs || 0;\r\n        this.size = opts.size || 0;\r\n        this.subject = opts.subject || nuid.next();\r\n        this.asyncRequests = opts.asyncRequests || false;\r\n        this.pub = opts.pub || false;\r\n        this.sub = opts.sub || false;\r\n        this.req = opts.req || false;\r\n        this.rep = opts.rep || false;\r\n        this.perf = new Perf();\r\n        this.payload = this.size ? new Uint8Array(this.size) : Empty;\r\n        if (!this.pub && !this.sub && !this.req && !this.rep) {\r\n            throw new Error(\"no bench option selected\");\r\n        }\r\n    }\r\n    async run() {\r\n        this.nc.closed().then((err)=>{\r\n            if (err) {\r\n                throw new NatsError(`bench closed with an error: ${err.message}`, ErrorCode.Unknown, err);\r\n            }\r\n        });\r\n        if (this.callbacks) {\r\n            await this.runCallbacks();\r\n        } else {\r\n            await this.runAsync();\r\n        }\r\n        return this.processMetrics();\r\n    }\r\n    processMetrics() {\r\n        const nc = this.nc;\r\n        const { lang, version } = nc.protocol.transport;\r\n        if (this.pub && this.sub) {\r\n            this.perf.measure(\"pubsub\", \"pubStart\", \"subStop\");\r\n        }\r\n        if (this.req && this.rep) {\r\n            this.perf.measure(\"reqrep\", \"reqStart\", \"reqStop\");\r\n        }\r\n        const measures = this.perf.getEntries();\r\n        const pubsub = measures.find((m)=>m.name === \"pubsub\");\r\n        const reqrep = measures.find((m)=>m.name === \"reqrep\");\r\n        const req = measures.find((m)=>m.name === \"req\");\r\n        const rep = measures.find((m)=>m.name === \"rep\");\r\n        const pub = measures.find((m)=>m.name === \"pub\");\r\n        const sub = measures.find((m)=>m.name === \"sub\");\r\n        const stats = this.nc.stats();\r\n        const metrics = [];\r\n        if (pubsub) {\r\n            const { name, duration } = pubsub;\r\n            const m = new Metric(name, duration);\r\n            m.msgs = this.msgs * 2;\r\n            m.bytes = stats.inBytes + stats.outBytes;\r\n            m.lang = lang;\r\n            m.version = version;\r\n            m.payload = this.payload.length;\r\n            metrics.push(m);\r\n        }\r\n        if (reqrep) {\r\n            const { name, duration } = reqrep;\r\n            const m = new Metric(name, duration);\r\n            m.msgs = this.msgs * 2;\r\n            m.bytes = stats.inBytes + stats.outBytes;\r\n            m.lang = lang;\r\n            m.version = version;\r\n            m.payload = this.payload.length;\r\n            metrics.push(m);\r\n        }\r\n        if (pub) {\r\n            const { name, duration } = pub;\r\n            const m = new Metric(name, duration);\r\n            m.msgs = this.msgs;\r\n            m.bytes = stats.outBytes;\r\n            m.lang = lang;\r\n            m.version = version;\r\n            m.payload = this.payload.length;\r\n            metrics.push(m);\r\n        }\r\n        if (sub) {\r\n            const { name, duration } = sub;\r\n            const m = new Metric(name, duration);\r\n            m.msgs = this.msgs;\r\n            m.bytes = stats.inBytes;\r\n            m.lang = lang;\r\n            m.version = version;\r\n            m.payload = this.payload.length;\r\n            metrics.push(m);\r\n        }\r\n        if (rep) {\r\n            const { name, duration } = rep;\r\n            const m = new Metric(name, duration);\r\n            m.msgs = this.msgs;\r\n            m.bytes = stats.inBytes + stats.outBytes;\r\n            m.lang = lang;\r\n            m.version = version;\r\n            m.payload = this.payload.length;\r\n            metrics.push(m);\r\n        }\r\n        if (req) {\r\n            const { name, duration } = req;\r\n            const m = new Metric(name, duration);\r\n            m.msgs = this.msgs;\r\n            m.bytes = stats.inBytes + stats.outBytes;\r\n            m.lang = lang;\r\n            m.version = version;\r\n            m.payload = this.payload.length;\r\n            metrics.push(m);\r\n        }\r\n        return metrics;\r\n    }\r\n    async runCallbacks() {\r\n        const jobs = [];\r\n        if (this.sub) {\r\n            const d = deferred();\r\n            jobs.push(d);\r\n            let i = 0;\r\n            this.nc.subscribe(this.subject, {\r\n                max: this.msgs,\r\n                callback: ()=>{\r\n                    i++;\r\n                    if (i === 1) {\r\n                        this.perf.mark(\"subStart\");\r\n                    }\r\n                    if (i === this.msgs) {\r\n                        this.perf.mark(\"subStop\");\r\n                        this.perf.measure(\"sub\", \"subStart\", \"subStop\");\r\n                        d.resolve();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (this.rep) {\r\n            const d = deferred();\r\n            jobs.push(d);\r\n            let i = 0;\r\n            this.nc.subscribe(this.subject, {\r\n                max: this.msgs,\r\n                callback: (_, m)=>{\r\n                    m.respond(this.payload);\r\n                    i++;\r\n                    if (i === 1) {\r\n                        this.perf.mark(\"repStart\");\r\n                    }\r\n                    if (i === this.msgs) {\r\n                        this.perf.mark(\"repStop\");\r\n                        this.perf.measure(\"rep\", \"repStart\", \"repStop\");\r\n                        d.resolve();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        if (this.pub) {\r\n            const job = (async ()=>{\r\n                this.perf.mark(\"pubStart\");\r\n                for(let i = 0; i < this.msgs; i++){\r\n                    this.nc.publish(this.subject, this.payload);\r\n                }\r\n                await this.nc.flush();\r\n                this.perf.mark(\"pubStop\");\r\n                this.perf.measure(\"pub\", \"pubStart\", \"pubStop\");\r\n            })();\r\n            jobs.push(job);\r\n        }\r\n        if (this.req) {\r\n            const job = (async ()=>{\r\n                if (this.asyncRequests) {\r\n                    this.perf.mark(\"reqStart\");\r\n                    const a = [];\r\n                    for(let i = 0; i < this.msgs; i++){\r\n                        a.push(this.nc.request(this.subject, this.payload, {\r\n                            timeout: 20000\r\n                        }));\r\n                    }\r\n                    await Promise.all(a);\r\n                    this.perf.mark(\"reqStop\");\r\n                    this.perf.measure(\"req\", \"reqStart\", \"reqStop\");\r\n                } else {\r\n                    this.perf.mark(\"reqStart\");\r\n                    for(let i = 0; i < this.msgs; i++){\r\n                        await this.nc.request(this.subject);\r\n                    }\r\n                    this.perf.mark(\"reqStop\");\r\n                    this.perf.measure(\"req\", \"reqStart\", \"reqStop\");\r\n                }\r\n            })();\r\n            jobs.push(job);\r\n        }\r\n        await Promise.all(jobs);\r\n    }\r\n    async runAsync() {\r\n        const jobs = [];\r\n        if (this.rep) {\r\n            let first = false;\r\n            const sub = this.nc.subscribe(this.subject, {\r\n                max: this.msgs\r\n            });\r\n            const job = (async ()=>{\r\n                for await (const m of sub){\r\n                    if (!first) {\r\n                        this.perf.mark(\"repStart\");\r\n                        first = true;\r\n                    }\r\n                    m.respond(this.payload);\r\n                }\r\n                await this.nc.flush();\r\n                this.perf.mark(\"repStop\");\r\n                this.perf.measure(\"rep\", \"repStart\", \"repStop\");\r\n            })();\r\n            jobs.push(job);\r\n        }\r\n        if (this.sub) {\r\n            let first = false;\r\n            const sub = this.nc.subscribe(this.subject, {\r\n                max: this.msgs\r\n            });\r\n            const job = (async ()=>{\r\n                for await (const _m of sub){\r\n                    if (!first) {\r\n                        this.perf.mark(\"subStart\");\r\n                        first = true;\r\n                    }\r\n                }\r\n                this.perf.mark(\"subStop\");\r\n                this.perf.measure(\"sub\", \"subStart\", \"subStop\");\r\n            })();\r\n            jobs.push(job);\r\n        }\r\n        if (this.pub) {\r\n            const job = (async ()=>{\r\n                this.perf.mark(\"pubStart\");\r\n                for(let i = 0; i < this.msgs; i++){\r\n                    this.nc.publish(this.subject, this.payload);\r\n                }\r\n                await this.nc.flush();\r\n                this.perf.mark(\"pubStop\");\r\n                this.perf.measure(\"pub\", \"pubStart\", \"pubStop\");\r\n            })();\r\n            jobs.push(job);\r\n        }\r\n        if (this.req) {\r\n            const job = (async ()=>{\r\n                if (this.asyncRequests) {\r\n                    this.perf.mark(\"reqStart\");\r\n                    const a = [];\r\n                    for(let i = 0; i < this.msgs; i++){\r\n                        a.push(this.nc.request(this.subject, this.payload, {\r\n                            timeout: 20000\r\n                        }));\r\n                    }\r\n                    await Promise.all(a);\r\n                    this.perf.mark(\"reqStop\");\r\n                    this.perf.measure(\"req\", \"reqStart\", \"reqStop\");\r\n                } else {\r\n                    this.perf.mark(\"reqStart\");\r\n                    for(let i = 0; i < this.msgs; i++){\r\n                        await this.nc.request(this.subject);\r\n                    }\r\n                    this.perf.mark(\"reqStop\");\r\n                    this.perf.measure(\"req\", \"reqStart\", \"reqStop\");\r\n                }\r\n            })();\r\n            jobs.push(job);\r\n        }\r\n        await Promise.all(jobs);\r\n    }\r\n}\r\nfunction throughput(bytes, seconds) {\r\n    return `${humanizeBytes(bytes / seconds)}/sec`;\r\n}\r\nfunction humanizeBytes(bytes, si = false) {\r\n    const base = si ? 1000 : 1024;\r\n    const pre = si ? [\r\n        \"k\",\r\n        \"M\",\r\n        \"G\",\r\n        \"T\",\r\n        \"P\",\r\n        \"E\"\r\n    ] : [\r\n        \"K\",\r\n        \"M\",\r\n        \"G\",\r\n        \"T\",\r\n        \"P\",\r\n        \"E\"\r\n    ];\r\n    const post = si ? \"iB\" : \"B\";\r\n    if (bytes < base) {\r\n        return `${bytes.toFixed(2)} ${post}`;\r\n    }\r\n    const exp = parseInt(Math.log(bytes) / Math.log(base) + \"\");\r\n    const index = parseInt(exp - 1 + \"\");\r\n    return `${(bytes / Math.pow(base, exp)).toFixed(2)} ${pre[index]}${post}`;\r\n}\r\nfunction humanizeNumber(n) {\r\n    return n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\nexport { backoff as backoff, Bench as Bench, buildAuthenticator as buildAuthenticator, canonicalMIMEHeaderKey as canonicalMIMEHeaderKey, createInbox as createInbox, credsAuthenticator as credsAuthenticator, deadline as deadline, DebugEvents as DebugEvents, deferred as deferred, delay as delay, Empty as Empty, ErrorCode as ErrorCode, Events as Events, headers as headers, JSONCodec as JSONCodec, jwtAuthenticator as jwtAuthenticator, Match as Match, Metric as Metric, MsgHdrsImpl as MsgHdrsImpl, NatsError as NatsError, nkeyAuthenticator as nkeyAuthenticator, mod as nkeys, Nuid as Nuid, nuid as nuid, RequestStrategy as RequestStrategy, ServiceError as ServiceError, ServiceErrorCodeHeader as ServiceErrorCodeHeader, ServiceErrorHeader as ServiceErrorHeader, ServiceResponseType as ServiceResponseType, ServiceVerb as ServiceVerb, StringCodec as StringCodec, syncIterator as syncIterator, tokenAuthenticator as tokenAuthenticator, usernamePasswordAuthenticator as usernamePasswordAuthenticator };\r\nexport { checkJsError as checkJsError, isFlowControlMsg as isFlowControlMsg, isHeartbeatMsg as isHeartbeatMsg, millis as millis, nanos as nanos };\r\nexport { AckPolicy as AckPolicy, AdvisoryKind as AdvisoryKind, ConsumerDebugEvents as ConsumerDebugEvents, ConsumerEvents as ConsumerEvents, DeliverPolicy as DeliverPolicy, DirectMsgHeaders as DirectMsgHeaders, DiscardPolicy as DiscardPolicy, JsHeaders as JsHeaders, ReplayPolicy as ReplayPolicy, RepublishHeaders as RepublishHeaders, RetentionPolicy as RetentionPolicy, StorageType as StorageType, StoreCompression as StoreCompression };\r\nexport { consumerOpts as consumerOpts };\r\nconst VERSION = \"1.19.1\";\r\nconst LANG = \"nats.ws\";\r\nclass WsTransport {\r\n    version;\r\n    lang;\r\n    closeError;\r\n    connected;\r\n    done;\r\n    socket;\r\n    options;\r\n    socketClosed;\r\n    encrypted;\r\n    peeked;\r\n    yields;\r\n    signal;\r\n    closedNotification;\r\n    constructor(){\r\n        this.version = VERSION;\r\n        this.lang = LANG;\r\n        this.connected = false;\r\n        this.done = false;\r\n        this.socketClosed = false;\r\n        this.encrypted = false;\r\n        this.peeked = false;\r\n        this.yields = [];\r\n        this.signal = deferred();\r\n        this.closedNotification = deferred();\r\n    }\r\n    async connect(server, options) {\r\n        const connected = false;\r\n        const connLock = deferred();\r\n        if (options.tls) {\r\n            connLock.reject(new NatsError(\"tls\", ErrorCode.InvalidOption));\r\n            return connLock;\r\n        }\r\n        this.options = options;\r\n        const u = server.src;\r\n        if (options.wsFactory) {\r\n            const { socket, encrypted } = await options.wsFactory(server.src, options);\r\n            this.socket = socket;\r\n            this.encrypted = encrypted;\r\n        } else {\r\n            this.encrypted = u.indexOf(\"wss://\") === 0;\r\n            this.socket = new WebSocket(u);\r\n        }\r\n        this.socket.binaryType = \"arraybuffer\";\r\n        this.socket.onopen = ()=>{\r\n            if (this.isDiscarded()) {\r\n                return;\r\n            }\r\n        };\r\n        this.socket.onmessage = (me)=>{\r\n            if (this.isDiscarded()) {\r\n                return;\r\n            }\r\n            this.yields.push(new Uint8Array(me.data));\r\n            if (this.peeked) {\r\n                this.signal.resolve();\r\n                return;\r\n            }\r\n            const t = DataBuffer.concat(...this.yields);\r\n            const pm = extractProtocolMessage(t);\r\n            if (pm !== \"\") {\r\n                const m = INFO.exec(pm);\r\n                if (!m) {\r\n                    if (options.debug) {\r\n                        console.error(\"!!!\", render(t));\r\n                    }\r\n                    connLock.reject(new Error(\"unexpected response from server\"));\r\n                    return;\r\n                }\r\n                try {\r\n                    const info = JSON.parse(m[1]);\r\n                    checkOptions(info, this.options);\r\n                    this.peeked = true;\r\n                    this.connected = true;\r\n                    this.signal.resolve();\r\n                    connLock.resolve();\r\n                } catch (err) {\r\n                    connLock.reject(err);\r\n                    return;\r\n                }\r\n            }\r\n        };\r\n        this.socket.onclose = (evt)=>{\r\n            if (this.isDiscarded()) {\r\n                return;\r\n            }\r\n            this.socketClosed = true;\r\n            let reason;\r\n            if (this.done) return;\r\n            if (!evt.wasClean) {\r\n                reason = new Error(evt.reason);\r\n            }\r\n            this._closed(reason);\r\n        };\r\n        this.socket.onerror = (e)=>{\r\n            if (this.isDiscarded()) {\r\n                return;\r\n            }\r\n            const evt = e;\r\n            const err = new NatsError(evt.message, ErrorCode.Unknown, new Error(evt.error));\r\n            if (!connected) {\r\n                connLock.reject(err);\r\n            } else {\r\n                this._closed(err);\r\n            }\r\n        };\r\n        return connLock;\r\n    }\r\n    disconnect() {\r\n        this._closed(undefined, true);\r\n    }\r\n    async _closed(err, internal = true) {\r\n        if (this.isDiscarded()) {\r\n            return;\r\n        }\r\n        if (!this.connected) return;\r\n        if (this.done) return;\r\n        this.closeError = err;\r\n        if (!err) {\r\n            while(!this.socketClosed && this.socket.bufferedAmount > 0){\r\n                await delay(100);\r\n            }\r\n        }\r\n        this.done = true;\r\n        try {\r\n            this.socket.close(err ? 1002 : 1000, err ? err.message : undefined);\r\n        } catch (err) {}\r\n        if (internal) {\r\n            this.closedNotification.resolve(err);\r\n        }\r\n    }\r\n    get isClosed() {\r\n        return this.done;\r\n    }\r\n    [Symbol.asyncIterator]() {\r\n        return this.iterate();\r\n    }\r\n    async *iterate() {\r\n        while(true){\r\n            if (this.isDiscarded()) {\r\n                return;\r\n            }\r\n            if (this.yields.length === 0) {\r\n                await this.signal;\r\n            }\r\n            const yields = this.yields;\r\n            this.yields = [];\r\n            for(let i = 0; i < yields.length; i++){\r\n                if (this.options.debug) {\r\n                    console.info(`> ${render(yields[i])}`);\r\n                }\r\n                yield yields[i];\r\n            }\r\n            if (this.done) {\r\n                break;\r\n            } else if (this.yields.length === 0) {\r\n                yields.length = 0;\r\n                this.yields = yields;\r\n                this.signal = deferred();\r\n            }\r\n        }\r\n    }\r\n    isEncrypted() {\r\n        return this.connected && this.encrypted;\r\n    }\r\n    send(frame) {\r\n        if (this.isDiscarded()) {\r\n            return;\r\n        }\r\n        try {\r\n            this.socket.send(frame.buffer);\r\n            if (this.options.debug) {\r\n                console.info(`< ${render(frame)}`);\r\n            }\r\n            return;\r\n        } catch (err) {\r\n            if (this.options.debug) {\r\n                console.error(`!!! ${render(frame)}: ${err}`);\r\n            }\r\n        }\r\n    }\r\n    close(err) {\r\n        return this._closed(err, false);\r\n    }\r\n    closed() {\r\n        return this.closedNotification;\r\n    }\r\n    isDiscarded() {\r\n        if (this.done) {\r\n            this.discard();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    discard() {\r\n        this.done = true;\r\n        try {\r\n            this.socket?.close();\r\n        } catch (_err) {}\r\n    }\r\n}\r\nfunction wsUrlParseFn(u) {\r\n    const ut = /^(.*:\\/\\/)(.*)/;\r\n    if (!ut.test(u)) {\r\n        u = `https://${u}`;\r\n    }\r\n    let url = new URL(u);\r\n    const srcProto = url.protocol.toLowerCase();\r\n    if (srcProto !== \"https:\" && srcProto !== \"http\") {\r\n        u = u.replace(/^(.*:\\/\\/)(.*)/gm, \"$2\");\r\n        url = new URL(`http://${u}`);\r\n    }\r\n    let protocol;\r\n    let port;\r\n    const host = url.hostname;\r\n    const path = url.pathname;\r\n    const search = url.search || \"\";\r\n    switch(srcProto){\r\n        case \"http:\":\r\n        case \"ws:\":\r\n        case \"nats:\":\r\n            port = url.port || \"80\";\r\n            protocol = \"ws:\";\r\n            break;\r\n        default:\r\n            port = url.port || \"443\";\r\n            protocol = \"wss:\";\r\n            break;\r\n    }\r\n    return `${protocol}//${host}:${port}${path}${search}`;\r\n}\r\nfunction connect(opts = {}) {\r\n    setTransportFactory({\r\n        defaultPort: 443,\r\n        urlParseFn: wsUrlParseFn,\r\n        factory: ()=>{\r\n            return new WsTransport();\r\n        }\r\n    });\r\n    return NatsConnectionImpl.connect(opts);\r\n}\r\nexport { connect as connect };\r\n"],"mappings":"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IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC,EAC/B,IAAIA,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CN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EACN,MAAM,EA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}